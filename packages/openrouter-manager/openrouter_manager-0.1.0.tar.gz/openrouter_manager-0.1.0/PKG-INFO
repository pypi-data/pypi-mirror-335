Metadata-Version: 2.2
Name: openrouter_manager
Version: 0.1.0
Summary: Wrapper library for using **DeepSeek** with **openrouter.ai**
Home-page: https://bitbucket.org/koralatpm/openrouter-manager/
Author: Lenin Lozano
Author-email: lenin@koralat.co
License: MIT
Project-URL: Documentation, https://bitbucket.org/koralatpm/openrouter-manager/
Project-URL: Source, https://bitbucket.org/koralatpm/openrouter-manager/src/main/
Project-URL: Changelog, https://bitbucket.org/koralatpm/openrouter-manager/src/main/CHANGELOG.rst
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Environment :: Plugins
Classifier: Framework :: tox
Classifier: Framework :: Pytest
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/x-rst; charset=UTF-8
License-File: LICENSE.txt
Requires-Dist: importlib-metadata; python_version < "3.8"
Requires-Dist: Jinja2
Requires-Dist: requests
Provides-Extra: testing
Requires-Dist: setuptools; extra == "testing"
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Requires-Dist: pytest-mock; extra == "testing"
Requires-Dist: twine; extra == "testing"
Requires-Dist: wheel; extra == "testing"

|Project generated with PyScaffold|

\|
==

openrouter-manager
==================

**openrouter-manager** is a wrapper library for using **DeepSeek** with
**openrouter.ai**, facilitating integration with language models through
a simple and efficient API.

Main Features
-------------

- Wrapper for **DeepSeek** using **openrouter.ai**.
- Easy-to-use singleton class ``AiAgent``.
- Allows defining dynamic prompts with variables.
- Configuration via environment variables.

Installation
------------

It is recommended to install ``openrouter-manager`` in a virtual
environment to avoid dependency conflicts:

.. code:: bash

   pip install openrouter-manager

Requirements
------------

To use this library, the following environment
variables must be set:

- ``AIAGENT_API_KEY``: API Key for **openrouter.ai**.
- ``AIAGENT_PROMPT_FILE``: Path to the text file containing the prompt
  to send to the LLM.

Example configuration in a ``.env`` file:

.. code:: ini

   AIAGENT_API_KEY="your_api_key_here"
   AIAGENT_PROMPT_FILE="path/to/prompt_file.txt"

Usage 
-----

To use ``openrouter-manager``, first instantiate ``AiAgent``
and then call the ``resolve`` method, providing the necessary variables
to populate the prompt:

.. code:: python

   from openrouter_manager import AiAgent

   # Get the singleton instance of the agent
   agent = AiAgent()

   # Resolve the prompt with dynamic variables
   response = agent.resolve({"name": "John", "age": 30})

   print(response)  # Response generated by the LLM

Contributing 
------------

If you would like to contribute to this project,
you can clone the repository and make modifications:

.. code:: bash

   git clone https://github.com/your_username/openrouter-manager.git
   cd openrouter-manager

Contributions are welcome. Make sure to follow best coding practices and
document your changes.

License
-------

This project is **open-source**, owned by **Koral Advanced Technology**,
and developed by **Lenin David Lozano**. It is freely available for use
and modification under the **MIT License**. See the ``LICENSE`` file for
more details. .. pyscaffold-notes:

Note
====

This project has been set up using PyScaffold 4.6. For details and usage
information on PyScaffold see https://pyscaffold.org/.

.. |Project generated with PyScaffold| image:: https://img.shields.io/badge/-PyScaffold-005CA0?logo=pyscaffold
   :target: https://pyscaffold.org/
