[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "logfire-callback"
version = "1.0.0"
description = "A callback for logging training events from Hugging Face's Transformers to Logfire ðŸ¤—"
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
authors = [
    { name = "Louis BrulÃ© Naudet", email = "contact@louisbrulenaudet.com" },
]
maintainers = [
    { name = "Louis BrulÃ© Naudet", email = "contact@louisbrulenaudet.com" },
]
keywords = ["logfire", "transformers", "huggingface", "logging", "callback", "trainer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "transformers>=4.49.0",
    "logfire>=3.9.0",
]

[project.urls]
Homepage = "https://github.com/louisbrulenaudet/logfire-callback"
Repository = "https://github.com/louisbrulenaudet/logfire-callback"
Issues = "https://github.com/louisbrulenaudet/logfire-callback/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/logfire_callback"]

[tool.hatch.version]
path = "src/logfire_callback/__init__.py"

[project.optional-dependencies]
dev = [
    "pre-commit>=4.1.0",
    "pre-commit-uv>=4.1.4",
    "pyright>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.9.3",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--maxfail=1 --disable-warnings -q --cov=src/logfire_callback --cov-report=term-missing --cov-report=html"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # flake8-annotations
    "ANN",
    # flake8-print
    "T20",
]
ignore = [
    "B008",
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,.venv,.coveragerc}/*" = [
    "ANN",
]

[tool.logfire]
pydantic_plugin_record = "all"

[tool.ruff]
fix = true

[tool.pyright]
exclude = [
    "**/tests"
]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
