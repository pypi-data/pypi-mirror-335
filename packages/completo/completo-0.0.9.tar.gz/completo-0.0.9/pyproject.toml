[project]
name = "completo"
version = "0.0.9"
description = "A unified interface for interacting with AI"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "anthropic>=0.45.2",
    "openai>=1.61.1",
    "pydantic>=2.10.6",
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Framework :: Pydantic :: 2",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
keywords = ["ai", "llm", "generative ai", "abstraction", "interface"]
authors = [
  { name = "Ross Masters", email = "ross@rossmasters.com" }
]

[project.urls]
Repository = "https://github.com/rmasters/completo"
Issues = "https://github.com/rmasters/completo/issues"
Changelog = "https://github.com/rmasters/completo/releases"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "completo/__init__.py"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest-httpx>=0.35.0",
    "pytest>=8.3.4",
    "python-dotenv>=1.0.1",
    "ruff>=0.9.5",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "python-semantic-release>=9.19.0",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",  # isort
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_author = "github-actions <actions@github.com>"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.uv.workspace]
members = ["demo"]
