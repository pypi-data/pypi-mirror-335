# coding: utf-8

"""
    Barion API

    Integrate with ease and get unbeatable fees and data that helps you grow your business.

    The version of the OpenAPI document: 0.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_barion.models.payment_start_response import PaymentStartResponse

class TestPaymentStartResponse(unittest.TestCase):
    """PaymentStartResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentStartResponse:
        """Test PaymentStartResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentStartResponse`
        """
        model = PaymentStartResponse()
        if include_optional:
            return PaymentStartResponse(
                payment_id = '',
                payment_request_id = '',
                status = '',
                qr_url = '',
                recurrence_result = '',
                transactions = [
                    clientapi_barion.models.processed_transaction.ProcessedTransaction(
                        pos_transaction_id = '', 
                        transaction_id = '', 
                        status = '', 
                        currency = '012', 
                        transaction_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                gateway_url = '',
                callback_url = '',
                redirect_url = '',
                three_ds_auth_client_data = '',
                trace_id = '',
                is_successful = True
            )
        else:
            return PaymentStartResponse(
        )
        """

    def testPaymentStartResponse(self):
        """Test PaymentStartResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
