# coding: utf-8

"""
    Barion API

    Integrate with ease and get unbeatable fees and data that helps you grow your business.

    The version of the OpenAPI document: 0.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_barion.models.capture_payment_request import CapturePaymentRequest

class TestCapturePaymentRequest(unittest.TestCase):
    """CapturePaymentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CapturePaymentRequest:
        """Test CapturePaymentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CapturePaymentRequest`
        """
        model = CapturePaymentRequest()
        if include_optional:
            return CapturePaymentRequest(
                payment_id = '123e4567-e89b-12d3-a456-426614174001',
                transactions = [
                    clientapi_barion.models.transaction_to_finish.TransactionToFinish(
                        transaction_id = '123e4567-e89b-12d3-a456-426614174002', 
                        total = 100.0, 
                        comment = 'Payment completion', 
                        payee_transactions = [
                            clientapi_barion.models.payee_transaction_to_finish.PayeeTransactionToFinish(
                                transaction_id = '123e4567-e89b-12d3-a456-426614174003', 
                                total = 50.0, 
                                comment = 'Refund for returned item', )
                            ], 
                        items = [
                            clientapi_barion.models.item.Item(
                                name = '', 
                                description = '', 
                                image_url = '', 
                                quantity = 0, 
                                unit = '', 
                                unit_price = 1.337, 
                                item_total = 1.337, 
                                sku = '', )
                            ], )
                    ]
            )
        else:
            return CapturePaymentRequest(
                payment_id = '123e4567-e89b-12d3-a456-426614174001',
                transactions = [
                    clientapi_barion.models.transaction_to_finish.TransactionToFinish(
                        transaction_id = '123e4567-e89b-12d3-a456-426614174002', 
                        total = 100.0, 
                        comment = 'Payment completion', 
                        payee_transactions = [
                            clientapi_barion.models.payee_transaction_to_finish.PayeeTransactionToFinish(
                                transaction_id = '123e4567-e89b-12d3-a456-426614174003', 
                                total = 50.0, 
                                comment = 'Refund for returned item', )
                            ], 
                        items = [
                            clientapi_barion.models.item.Item(
                                name = '', 
                                description = '', 
                                image_url = '', 
                                quantity = 0, 
                                unit = '', 
                                unit_price = 1.337, 
                                item_total = 1.337, 
                                sku = '', )
                            ], )
                    ],
        )
        """

    def testCapturePaymentRequest(self):
        """Test CapturePaymentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
