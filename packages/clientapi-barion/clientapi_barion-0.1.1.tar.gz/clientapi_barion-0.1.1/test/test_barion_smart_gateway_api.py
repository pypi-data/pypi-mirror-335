# coding: utf-8

"""
    Barion API

    Integrate with ease and get unbeatable fees and data that helps you grow your business.

    The version of the OpenAPI document: 0.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_barion.api.barion_smart_gateway_api import BarionSmartGatewayApi


class TestBarionSmartGatewayApi(unittest.TestCase):
    """BarionSmartGatewayApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BarionSmartGatewayApi()

    def tearDown(self) -> None:
        pass

    def test_get_payment_state_v2(self) -> None:
        """Test case for get_payment_state_v2

        Get Payment State
        """
        pass

    def test_get_payment_state_v4(self) -> None:
        """Test case for get_payment_state_v4

        Get the state of a payment
        """
        pass

    def test_payment_cancel_authorization_v2(self) -> None:
        """Test case for payment_cancel_authorization_v2

        Cancel Authorization of a payment
        """
        pass

    def test_payment_capture_v2(self) -> None:
        """Test case for payment_capture_v2

        Capture of a payment
        """
        pass

    def test_payment_complete_v2(self) -> None:
        """Test case for payment_complete_v2

        Complete a payment
        """
        pass

    def test_payment_finish_reservation_v2(self) -> None:
        """Test case for payment_finish_reservation_v2

        Finish a pending reservation
        """
        pass

    def test_payment_start_v2(self) -> None:
        """Test case for payment_start_v2

        Create a new payment
        """
        pass

    def test_payment_start_with_google_token_v3(self) -> None:
        """Test case for payment_start_with_google_token_v3

        Create a new payment
        """
        pass

    def test_refund_payment_v2(self) -> None:
        """Test case for refund_payment_v2

        Execute the refund of a payment
        """
        pass


if __name__ == '__main__':
    unittest.main()
