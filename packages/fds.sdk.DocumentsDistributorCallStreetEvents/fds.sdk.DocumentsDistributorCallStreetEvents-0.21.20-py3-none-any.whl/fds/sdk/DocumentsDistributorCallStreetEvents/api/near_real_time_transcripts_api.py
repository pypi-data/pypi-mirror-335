"""
    Documents Distributor - CallStreet Events

    CallStreet Events contains all the Documents Distributor APIs that offer events data such as Events Audio and Near Real-Time Transcripts.  The  Events Audio API provides access to historical as well as the latest audio recordings of various company events covered by FactSet. The events include, but are not limited to: earnings calls, conferences, and investor days.   This API also provides relevant metadata such as timestamps and identifiers around each audio file.  The Documents Distributor - Near Real-time Transcripts API enables access to Near Real-time Transcripts provided by CallStreet to time-sensitive clients. This API also provides the relevant speaker metadata along with their confidence scores. This data caters to quant clients interested in building machine learning models.  Clients can leverage this API to perform sentiment analysis through natural language processing or machine learning. It can also be used to complement analysis using FactSet's transcripts service.   # noqa: E501

    The version of the OpenAPI document: 1.8.3
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.DocumentsDistributorCallStreetEvents.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.DocumentsDistributorCallStreetEvents.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.DocumentsDistributorCallStreetEvents.exceptions import ApiException
from fds.sdk.DocumentsDistributorCallStreetEvents.model.error import Error
from fds.sdk.DocumentsDistributorCallStreetEvents.model.indexed_nrt import IndexedNRT
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_calls import NRTCalls
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_calls400_response import NRTCalls400Response
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_snippets import NRTSnippets
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_snippets400_response import NRTSnippets400Response
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_speakerids import NRTSpeakerids
from fds.sdk.DocumentsDistributorCallStreetEvents.model.nrt_speakerids400_response import NRTSpeakerids400Response





class NearRealTimeTranscriptsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_bulk_documents_nrt_v1_calls_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (NRTCalls,), 400: (NRTCalls400Response,), 401: (Error,), 403: (Error,), 500: (Error,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/bulk-documents/nrt/v1/calls',
                'operation_id': 'get_bulk_documents_nrt_v1_calls',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pagination_limit',
                    'pagination_offset',
                    'audio_source_id',
                    'report_id',
                    'sort',
                    'entity_id',
                    'ticker',
                    'call_status',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'sort',
                    'call_status',
                ],
                'validation': [
                    'pagination_limit',
                ]
            },
            root_map={
                'validations': {
                    ('pagination_limit',): {

                        'inclusive_maximum': 500,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                    ('sort',): {

                        "STARTDATE": "startDate",
                        "-STARTDATE": "-startDate"
                    },
                    ('call_status',): {

                        "INPROGRESS": "inProgress",
                        "ENDED": "ended",
                        "EWN": "ewn",
                        "ISSUEATSOURCE": "issueAtSource"
                    },
                },
                'openapi_types': {
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                    'audio_source_id':
                        (int,),
                    'report_id':
                        (int,),
                    'sort':
                        (str,),
                    'entity_id':
                        (str,),
                    'ticker':
                        (str,),
                    'call_status':
                        (str,),
                },
                'attribute_map': {
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                    'audio_source_id': 'audioSourceId',
                    'report_id': 'reportId',
                    'sort': '_sort',
                    'entity_id': 'entityId',
                    'ticker': 'ticker',
                    'call_status': 'callStatus',
                },
                'location_map': {
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                    'audio_source_id': 'query',
                    'report_id': 'query',
                    'sort': 'query',
                    'entity_id': 'query',
                    'ticker': 'query',
                    'call_status': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_bulk_documents_nrt_v1_indexed_nrt_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (IndexedNRT,), 400: (NRTSnippets400Response,), 401: (Error,), 403: (Error,), 500: (Error,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/bulk-documents/nrt/v1/indexed-nrt',
                'operation_id': 'get_bulk_documents_nrt_v1_indexed_nrt',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'audio_source_id',
                    'pagination_limit',
                    'pagination_offset',
                    'report_id',
                ],
                'required': [
                    'audio_source_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pagination_limit',
                ]
            },
            root_map={
                'validations': {
                    ('pagination_limit',): {

                        'inclusive_maximum': 50,
                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'audio_source_id':
                        (int,),
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                    'report_id':
                        (int,),
                },
                'attribute_map': {
                    'audio_source_id': 'audioSourceId',
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                    'report_id': 'reportId',
                },
                'location_map': {
                    'audio_source_id': 'query',
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                    'report_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_bulk_documents_nrt_v1_list_snippets_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (NRTSnippets,), 400: (NRTSnippets400Response,), 401: (Error,), 403: (Error,), 500: (Error,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/bulk-documents/nrt/v1/list-snippets',
                'operation_id': 'get_bulk_documents_nrt_v1_list_snippets',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'audio_source_id',
                    'pagination_limit',
                    'pagination_offset',
                    'report_id',
                ],
                'required': [
                    'audio_source_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pagination_limit',
                ]
            },
            root_map={
                'validations': {
                    ('pagination_limit',): {

                        'inclusive_maximum': 500,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'audio_source_id':
                        (int,),
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                    'report_id':
                        (int,),
                },
                'attribute_map': {
                    'audio_source_id': 'audioSourceId',
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                    'report_id': 'reportId',
                },
                'location_map': {
                    'audio_source_id': 'query',
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                    'report_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_bulk_documents_nrt_v1_speakerids_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (NRTSpeakerids,), 400: (NRTSpeakerids400Response,), 401: (Error,), 403: (Error,), 500: (Error,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/bulk-documents/nrt/v1/speakerids',
                'operation_id': 'get_bulk_documents_nrt_v1_speakerids',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'audio_source_id',
                    'pagination_limit',
                    'pagination_offset',
                    'sort',
                ],
                'required': [
                    'audio_source_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'sort',
                ],
                'validation': [
                    'pagination_limit',
                ]
            },
            root_map={
                'validations': {
                    ('pagination_limit',): {

                        'inclusive_maximum': 500,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                    ('sort',): {

                        "STARTDATE": "startDate",
                        "-STARTDATE": "-startDate"
                    },
                },
                'openapi_types': {
                    'audio_source_id':
                        (int,),
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                    'sort':
                        (str,),
                },
                'attribute_map': {
                    'audio_source_id': 'audioSourceId',
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                    'sort': '_sort',
                },
                'location_map': {
                    'audio_source_id': 'query',
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                    'sort': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_bulk_documents_nrt_v1_calls(
        self,
        **kwargs
    ) -> NRTCalls:
        """Returns the active calls happening at the moment.  # noqa: E501

        Returns the active calls happening at the moment  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.. [optional]
            report_id (int): Unique identifier for an event.. [optional]
            sort (str): Enables to get the data in chronological or reverse chronological order based on startDate. Results are in reverse chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "-startDate"
            entity_id (str): Factset entity level identifier for the company hosting the event.. [optional]
            ticker (str): Ticker-region identifier for the company hosting the event.. [optional]
            call_status (str): Status of the call i.e. ended or inProgress or ewn or issueAtSource.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTCalls
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.get_bulk_documents_nrt_v1_calls_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_calls_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[NRTCalls, int, typing.MutableMapping]:
        """Returns the active calls happening at the moment.  # noqa: E501

        Returns the active calls happening at the moment  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.. [optional]
            report_id (int): Unique identifier for an event.. [optional]
            sort (str): Enables to get the data in chronological or reverse chronological order based on startDate. Results are in reverse chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "-startDate"
            entity_id (str): Factset entity level identifier for the company hosting the event.. [optional]
            ticker (str): Ticker-region identifier for the company hosting the event.. [optional]
            call_status (str): Status of the call i.e. ended or inProgress or ewn or issueAtSource.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTCalls
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.get_bulk_documents_nrt_v1_calls_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_calls_async(
        self,
        **kwargs
    ) -> "ApplyResult[NRTCalls]":
        """Returns the active calls happening at the moment.  # noqa: E501

        Returns the active calls happening at the moment  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.. [optional]
            report_id (int): Unique identifier for an event.. [optional]
            sort (str): Enables to get the data in chronological or reverse chronological order based on startDate. Results are in reverse chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "-startDate"
            entity_id (str): Factset entity level identifier for the company hosting the event.. [optional]
            ticker (str): Ticker-region identifier for the company hosting the event.. [optional]
            call_status (str): Status of the call i.e. ended or inProgress or ewn or issueAtSource.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[NRTCalls]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.get_bulk_documents_nrt_v1_calls_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_calls_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[NRTCalls, int, typing.MutableMapping]]":
        """Returns the active calls happening at the moment.  # noqa: E501

        Returns the active calls happening at the moment  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.. [optional]
            report_id (int): Unique identifier for an event.. [optional]
            sort (str): Enables to get the data in chronological or reverse chronological order based on startDate. Results are in reverse chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "-startDate"
            entity_id (str): Factset entity level identifier for the company hosting the event.. [optional]
            ticker (str): Ticker-region identifier for the company hosting the event.. [optional]
            call_status (str): Status of the call i.e. ended or inProgress or ewn or issueAtSource.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(NRTCalls, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.get_bulk_documents_nrt_v1_calls_endpoint.call_with_http_info(**kwargs)


    def get_bulk_documents_nrt_v1_indexed_nrt(
        self,
        audio_source_id,
        **kwargs
    ) -> IndexedNRT:
        """Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501

        Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=50 ]. [optional] if omitted the server will use the default value of 25
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IndexedNRT
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_indexed_nrt_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_indexed_nrt_with_http_info(
        self,
        audio_source_id,
        **kwargs
    ) -> typing.Tuple[IndexedNRT, int, typing.MutableMapping]:
        """Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501

        Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=50 ]. [optional] if omitted the server will use the default value of 25
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IndexedNRT
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_indexed_nrt_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_indexed_nrt_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[IndexedNRT]":
        """Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501

        Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=50 ]. [optional] if omitted the server will use the default value of 25
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[IndexedNRT]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_indexed_nrt_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_indexed_nrt_with_http_info_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[IndexedNRT, int, typing.MutableMapping]]":
        """Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501

        Returns the  indexed transcript data  in small increments throughout the duration of an active call.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=50 ]. [optional] if omitted the server will use the default value of 25
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(IndexedNRT, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_indexed_nrt_endpoint.call_with_http_info(**kwargs)


    def get_bulk_documents_nrt_v1_list_snippets(
        self,
        audio_source_id,
        **kwargs
    ) -> NRTSnippets:
        """Returns the latest transcript snippets from an active call.  # noqa: E501

        Returns the latest snippets from an active call  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTSnippets
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_list_snippets_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_list_snippets_with_http_info(
        self,
        audio_source_id,
        **kwargs
    ) -> typing.Tuple[NRTSnippets, int, typing.MutableMapping]:
        """Returns the latest transcript snippets from an active call.  # noqa: E501

        Returns the latest snippets from an active call  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTSnippets
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_list_snippets_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_list_snippets_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[NRTSnippets]":
        """Returns the latest transcript snippets from an active call.  # noqa: E501

        Returns the latest snippets from an active call  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[NRTSnippets]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_list_snippets_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_list_snippets_with_http_info_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[NRTSnippets, int, typing.MutableMapping]]":
        """Returns the latest transcript snippets from an active call.  # noqa: E501

        Returns the latest snippets from an active call  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            report_id (int): Unique identifier for an event.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(NRTSnippets, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_list_snippets_endpoint.call_with_http_info(**kwargs)


    def get_bulk_documents_nrt_v1_speakerids(
        self,
        audio_source_id,
        **kwargs
    ) -> NRTSpeakerids:
        """Returns the latest speakerIds with the confidence scores generated for an active call.  # noqa: E501

        Returns the latest speakerIds with the cosine scores(confidence scores) generated for an active call.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            sort (str): Enables to get the data in chronological or reverse chronological order. Results are in chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "startDate"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTSpeakerids
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_speakerids_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_speakerids_with_http_info(
        self,
        audio_source_id,
        **kwargs
    ) -> typing.Tuple[NRTSpeakerids, int, typing.MutableMapping]:
        """Returns the latest speakerIds with the confidence scores generated for an active call.  # noqa: E501

        Returns the latest speakerIds with the cosine scores(confidence scores) generated for an active call.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            sort (str): Enables to get the data in chronological or reverse chronological order. Results are in chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "startDate"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            NRTSpeakerids
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_speakerids_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_speakerids_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[NRTSpeakerids]":
        """Returns the latest speakerIds with the confidence scores generated for an active call.  # noqa: E501

        Returns the latest speakerIds with the cosine scores(confidence scores) generated for an active call.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            sort (str): Enables to get the data in chronological or reverse chronological order. Results are in chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "startDate"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[NRTSpeakerids]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_speakerids_endpoint.call_with_http_info(**kwargs)

    def get_bulk_documents_nrt_v1_speakerids_with_http_info_async(
        self,
        audio_source_id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[NRTSpeakerids, int, typing.MutableMapping]]":
        """Returns the latest speakerIds with the confidence scores generated for an active call.  # noqa: E501

        Returns the latest speakerIds with the cosine scores(confidence scores) generated for an active call.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            audio_source_id (int): Unique ID for an Internal recording specific to reportID. For example, ReportID X would have multiple recordings from different source (dial-in or webcast). One ReportID can have multiple AudioSourceIDs.

        Keyword Args:
            pagination_limit (int): Specifies the  number of results to return per page. [ Min=0; Max=500]. [optional] if omitted the server will use the default value of 200
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results.. [optional] if omitted the server will use the default value of 0
            sort (str): Enables to get the data in chronological or reverse chronological order. Results are in chronological order if this parameter is not used.. [optional] if omitted the server will use the default value of "startDate"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(NRTSpeakerids, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['audio_source_id'] = \
            audio_source_id
        return self.get_bulk_documents_nrt_v1_speakerids_endpoint.call_with_http_info(**kwargs)


