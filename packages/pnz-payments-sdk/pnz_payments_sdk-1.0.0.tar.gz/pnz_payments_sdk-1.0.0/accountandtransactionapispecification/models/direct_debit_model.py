# -*- coding: utf-8 -*-

"""
accountandtransactionapispecification

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from accountandtransactionapispecification.api_helper import APIHelper
from accountandtransactionapispecification.models.previous_payment_amount import PreviousPaymentAmount


class DirectDebitModel(object):

    """Implementation of the 'DirectDebitModel' model.

    Attributes:
        account_id (str): A unique and immutable identifier used to identify
            the account resource. This identifier has no meaning to the
            account owner.
        direct_debit_id (str): A unique and immutable identifier used to
            identify the direct debit resource. This identifier has no meaning
            to the account owner.
        mandate_identification (str): Direct Debit reference.
        direct_debit_status_code (DirectDebitStatusCodeEnum): Specifies the
            status of the direct debit in code form.
        name (str): Name of Service User
        previous_payment_date_time (datetime): Date of most recent direct
            debit collection. All dates in the JSON payloads are represented
            in ISO 8601 date-time format. All date-time fields in responses
            must include the timezone. An example is below:
            2017-04-05T10:43:07+00:00
        previous_payment_amount (PreviousPaymentAmount): The amount of the
            most recent direct debit collection.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_id": 'AccountId',
        "mandate_identification": 'MandateIdentification',
        "name": 'Name',
        "direct_debit_id": 'DirectDebitId',
        "direct_debit_status_code": 'DirectDebitStatusCode',
        "previous_payment_date_time": 'PreviousPaymentDateTime',
        "previous_payment_amount": 'PreviousPaymentAmount'
    }

    _optionals = [
        'direct_debit_id',
        'direct_debit_status_code',
        'previous_payment_date_time',
        'previous_payment_amount',
    ]

    def __init__(self,
                 account_id=None,
                 mandate_identification=None,
                 name=None,
                 direct_debit_id=APIHelper.SKIP,
                 direct_debit_status_code=APIHelper.SKIP,
                 previous_payment_date_time=APIHelper.SKIP,
                 previous_payment_amount=APIHelper.SKIP):
        """Constructor for the DirectDebitModel class"""

        # Initialize members of the class
        self.account_id = account_id 
        if direct_debit_id is not APIHelper.SKIP:
            self.direct_debit_id = direct_debit_id 
        self.mandate_identification = mandate_identification 
        if direct_debit_status_code is not APIHelper.SKIP:
            self.direct_debit_status_code = direct_debit_status_code 
        self.name = name 
        if previous_payment_date_time is not APIHelper.SKIP:
            self.previous_payment_date_time = APIHelper.apply_datetime_converter(previous_payment_date_time, APIHelper.RFC3339DateTime) if previous_payment_date_time else None 
        if previous_payment_amount is not APIHelper.SKIP:
            self.previous_payment_amount = previous_payment_amount 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_id = dictionary.get("AccountId") if dictionary.get("AccountId") else None
        mandate_identification = dictionary.get("MandateIdentification") if dictionary.get("MandateIdentification") else None
        name = dictionary.get("Name") if dictionary.get("Name") else None
        direct_debit_id = dictionary.get("DirectDebitId") if dictionary.get("DirectDebitId") else APIHelper.SKIP
        direct_debit_status_code = dictionary.get("DirectDebitStatusCode") if dictionary.get("DirectDebitStatusCode") else APIHelper.SKIP
        previous_payment_date_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("PreviousPaymentDateTime")).datetime if dictionary.get("PreviousPaymentDateTime") else APIHelper.SKIP
        previous_payment_amount = PreviousPaymentAmount.from_dictionary(dictionary.get('PreviousPaymentAmount')) if 'PreviousPaymentAmount' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(account_id,
                   mandate_identification,
                   name,
                   direct_debit_id,
                   direct_debit_status_code,
                   previous_payment_date_time,
                   previous_payment_amount)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_id={self.account_id!r}, '
                f'direct_debit_id={(self.direct_debit_id if hasattr(self, "direct_debit_id") else None)!r}, '
                f'mandate_identification={self.mandate_identification!r}, '
                f'direct_debit_status_code={(self.direct_debit_status_code if hasattr(self, "direct_debit_status_code") else None)!r}, '
                f'name={self.name!r}, '
                f'previous_payment_date_time={(self.previous_payment_date_time if hasattr(self, "previous_payment_date_time") else None)!r}, '
                f'previous_payment_amount={(self.previous_payment_amount if hasattr(self, "previous_payment_amount") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_id={self.account_id!s}, '
                f'direct_debit_id={(self.direct_debit_id if hasattr(self, "direct_debit_id") else None)!s}, '
                f'mandate_identification={self.mandate_identification!s}, '
                f'direct_debit_status_code={(self.direct_debit_status_code if hasattr(self, "direct_debit_status_code") else None)!s}, '
                f'name={self.name!s}, '
                f'previous_payment_date_time={(self.previous_payment_date_time if hasattr(self, "previous_payment_date_time") else None)!s}, '
                f'previous_payment_amount={(self.previous_payment_amount if hasattr(self, "previous_payment_amount") else None)!s})')
