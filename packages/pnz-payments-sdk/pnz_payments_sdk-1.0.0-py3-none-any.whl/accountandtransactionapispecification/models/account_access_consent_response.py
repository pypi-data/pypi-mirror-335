# -*- coding: utf-8 -*-

"""
accountandtransactionapispecification

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from accountandtransactionapispecification.models.account_access_consent_response_model import AccountAccessConsentResponseModel
from accountandtransactionapispecification.models.links import Links
from accountandtransactionapispecification.models.meta import Meta
from accountandtransactionapispecification.models.risk import Risk


class AccountAccessConsentResponse(object):

    """Implementation of the 'AccountAccessConsentResponse' model.

    Attributes:
        data (AccountAccessConsentResponseModel): The model property of type
            AccountAccessConsentResponseModel.
        risk (Risk): The Risk section is sent by the initiating party to the
            API Provider. It is used to specify additional details for risk
            scoring.
        links (Links): Links relevant to the payload
        meta (Meta): The model property of type Meta.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "data": 'Data',
        "risk": 'Risk',
        "links": 'Links',
        "meta": 'Meta'
    }

    def __init__(self,
                 data=None,
                 risk=None,
                 links=None,
                 meta=None):
        """Constructor for the AccountAccessConsentResponse class"""

        # Initialize members of the class
        self.data = data 
        self.risk = risk 
        self.links = links 
        self.meta = meta 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        data = AccountAccessConsentResponseModel.from_dictionary(dictionary.get('Data')) if dictionary.get('Data') else None
        risk = Risk.from_dictionary(dictionary.get('Risk')) if dictionary.get('Risk') else None
        links = Links.from_dictionary(dictionary.get('Links')) if dictionary.get('Links') else None
        meta = Meta.from_dictionary(dictionary.get('Meta')) if dictionary.get('Meta') else None
        # Return an object of this model
        return cls(data,
                   risk,
                   links,
                   meta)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'data={self.data!r}, '
                f'risk={self.risk!r}, '
                f'links={self.links!r}, '
                f'meta={self.meta!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'data={self.data!s}, '
                f'risk={self.risk!s}, '
                f'links={self.links!s}, '
                f'meta={self.meta!s})')
