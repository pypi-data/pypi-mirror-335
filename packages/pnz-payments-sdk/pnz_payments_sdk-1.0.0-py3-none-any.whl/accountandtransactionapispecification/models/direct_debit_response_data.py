# -*- coding: utf-8 -*-

"""
accountandtransactionapispecification

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from accountandtransactionapispecification.api_helper import APIHelper
from accountandtransactionapispecification.models.direct_debit_model import DirectDebitModel


class DirectDebitResponseData(object):

    """Implementation of the 'DirectDebitResponseData' model.

    Attributes:
        direct_debit (List[DirectDebitModel]): DirectDebit

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "direct_debit": 'DirectDebit'
    }

    _optionals = [
        'direct_debit',
    ]

    def __init__(self,
                 direct_debit=APIHelper.SKIP):
        """Constructor for the DirectDebitResponseData class"""

        # Initialize members of the class
        if direct_debit is not APIHelper.SKIP:
            self.direct_debit = direct_debit 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        direct_debit = None
        if dictionary.get('DirectDebit') is not None:
            direct_debit = [DirectDebitModel.from_dictionary(x) for x in dictionary.get('DirectDebit')]
        else:
            direct_debit = APIHelper.SKIP
        # Return an object of this model
        return cls(direct_debit)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'direct_debit={(self.direct_debit if hasattr(self, "direct_debit") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'direct_debit={(self.direct_debit if hasattr(self, "direct_debit") else None)!s})')
