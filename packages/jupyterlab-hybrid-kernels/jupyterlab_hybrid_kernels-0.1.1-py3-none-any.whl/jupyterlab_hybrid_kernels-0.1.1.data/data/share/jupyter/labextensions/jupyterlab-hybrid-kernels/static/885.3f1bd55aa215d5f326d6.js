"use strict";(self.webpackChunkjupyterlab_hybrid_kernels=self.webpackChunkjupyterlab_hybrid_kernels||[]).push([[266,885],{266:(e,t,r)=>{r.r(t),r.d(t,{IServiceWorkerManager:()=>s,ServiceWorkerManager:()=>g,WORKER_NAME:()=>o});var i=r(262),n=r(626),a=r.n(n);const s=new i.Token("@jupyterlite/server:IServiceWorkerManager"),o=`${a()}`.split("/").slice(-1)[0];var c=r(602),l=r(979);const u=l.PageConfig.getOption("appVersion");class g{constructor(e){var t;this.unregisterOldServiceWorkers=async e=>{const t=`${e}-version`,r=localStorage.getItem(t);if(r&&r!==u||!r){console.info("New version, unregistering existing service workers.");const e=await navigator.serviceWorker.getRegistrations();await Promise.all(e.map((e=>e.unregister()))),console.info("All existing service workers have been unregistered.")}localStorage.setItem(t,u)},this._pingServiceWorker=async()=>{const e=await fetch("/api/service-worker-heartbeat");"ok"===await e.text()&&setTimeout(this._pingServiceWorker,2e4)},this._registration=null,this._registrationChanged=new c.Signal(this),this._ready=new i.PromiseDelegate;const r=null!==(t=null==e?void 0:e.workerUrl)&&void 0!==t?t:l.URLExt.join(l.PageConfig.getBaseUrl(),o),n=new URL(r,window.location.href),a=l.PageConfig.getOption("enableServiceWorkerCache")||"false";n.searchParams.set("enableCache",a),this.initialize(n.href).catch(console.warn)}get registrationChanged(){return this._registrationChanged}get enabled(){return null!==this._registration}get ready(){return this._ready.promise}async initialize(e){const{serviceWorker:t}=navigator;let r=null;if(t){if(t.controller){const e=t.controller.scriptURL;await this.unregisterOldServiceWorkers(e),r=await t.getRegistration(e)||null,console.info("JupyterLite ServiceWorker was already registered")}}else console.warn("ServiceWorkers not supported in this browser");if(!r&&t)try{console.info("Registering new JupyterLite ServiceWorker",e),r=await t.register(e),console.info("JupyterLite ServiceWorker was sucessfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this._setRegistration(r),r?(this._ready.resolve(void 0),setTimeout(this._pingServiceWorker,2e4)):this._ready.reject(void 0)}_setRegistration(e){this._registration=e,this._registrationChanged.emit(this._registration)}}},626:()=>{const e=new BroadcastChannel("/api/drive.v1");let t=!1;async function r(){return await caches.open("precache")}async function i(e,t){return(await r()).put(e,t)}self.addEventListener("install",(function(e){self.skipWaiting(),e.waitUntil(async function(){const e=await r();return await e.addAll([])}())})),self.addEventListener("activate",(function(e){const r=new URL(location.href).searchParams;t="true"===r.get("enableCache"),e.waitUntil(self.clients.claim())})),self.addEventListener("fetch",(async function(n){const{request:a}=n,s=new URL(n.request.url);if("/api/service-worker-heartbeat"===s.pathname)return void n.respondWith(new Response("ok"));let o=null;!function(e){return e.origin===location.origin&&e.pathname.includes("/api/drive")}(s)?function(e,t){return"GET"!==e.method||null===t.origin.match(/^http/)||t.pathname.includes("/api/")}(a,s)||(o=async function(e){const{request:n}=e;if(!t)return await fetch(n);let a=await async function(e){const t=await r(),i=await t.match(e);return i&&404!==i.status?i:null}(n);return a?e.waitUntil(async function(e){const t=await fetch(e);return await i(e,t),t}(n)):(a=await fetch(n),e.waitUntil(i(n,a.clone()))),a}(n)):o=async function(t){const r=new Promise((t=>{e.onmessage=e=>{t(new Response(JSON.stringify(e.data)))}})),i=await t.json();return i.receiver="broadcast.ts",e.postMessage(i),await r}(a),o&&n.respondWith(o)}))}}]);