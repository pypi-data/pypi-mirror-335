components:
  schemas:
    EchoResponse:
      description: Response model for echo endpoint.
      properties:
        message:
          description: The message content
          examples:
          - Hello, world!
          minLength: 1
          title: Message
          type: string
      required:
      - message
      title: EchoResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Health:
      description: Health status model.
      properties:
        reason:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason
        status:
          $ref: '#/components/schemas/_HealthStatus'
      required:
      - status
      title: Health
      type: object
    HelloWorldResponse:
      description: Response model for hello-world endpoint.
      properties:
        message:
          description: The hello world message
          examples:
          - Hello, world!
          title: Message
          type: string
      required:
      - message
      title: HelloWorldResponse
      type: object
    Utterance:
      description: Request model for echo endpoint.
      properties:
        utterance:
          description: The utterance to echo back
          examples:
          - Hello, world!
          minLength: 1
          title: Utterance
          type: string
      required:
      - utterance
      title: Utterance
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    _HealthStatus:
      description: Health status enumeration.
      enum:
      - UP
      - DOWN
      title: _HealthStatus
      type: string
info:
  contact:
    email: helmuthva@gmail.com
    name: Helmut Hoffer von Ankershoffen
    url: https://github.com/helmut-hoffer-von-ankershoffen
  termsOfService: https://oe-python-template-example.readthedocs.io/en/latest/
  title: OE Python Template Example
  version: 2.0.0
openapi: 3.1.0
paths:
  /echo:
    post:
      description: "Echo back the provided utterance.\n\nArgs:\n    request 
(Utterance):\
        \ The request containing the utterance to echo back.\n\nReturns:\n    
EchoResponse:\
        \ A response containing the echoed utterance.\n\nRaises:\n    422 
Unprocessable\
        \ Entity: If utterance is not provided or empty."
      operationId: echo_v2_echo_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utterance'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Echo V2
      tags:
      - Basics
  /health:
    get:
      description: "Check the health of the service.\n\nThis endpoint returns 
the\
        \ health status of the service.\nThe health status can be either UP or 
DOWN.\n\
        If the service is healthy, the status will be UP.\nIf the service is 
unhealthy,\
        \ the status will be DOWN and a reason will be provided.\nThe response 
will\
        \ have a 200 OK status code if the service is healthy,\nand a 500 
Internal\
        \ Server Error status code if the service is unhealthy.\n\nReturns:\n   
Health:\
        \ The health status of the service."
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Successful Response
      summary: Health
      tags:
      - Observability
  /healthz:
    get:
      description: "Check the health of the service.\n\nThis endpoint returns 
the\
        \ health status of the service.\nThe health status can be either UP or 
DOWN.\n\
        If the service is healthy, the status will be UP.\nIf the service is 
unhealthy,\
        \ the status will be DOWN and a reason will be provided.\nThe response 
will\
        \ have a 200 OK status code if the service is healthy,\nand a 500 
Internal\
        \ Server Error status code if the service is unhealthy.\n\nReturns:\n   
Health:\
        \ The health status of the service."
      operationId: health_healthz_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Successful Response
      summary: Health
      tags:
      - Observability
  /hello-world:
    get:
      description: "Return a hello world message.\n\nReturns:\n    
HelloWorldResponse:\
        \ A response containing the hello world message."
      operationId: hello_world_hello_world_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldResponse'
          description: Successful Response
      summary: Hello World
      tags:
      - Basics
