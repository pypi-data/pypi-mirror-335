"use strict";(self.webpackChunk_datalayer_ui=self.webpackChunk_datalayer_ui||[]).push([[3552],{83552:(t,e,n)=>{n.r(e),n.d(e,{BLOCK_SIZE:()=>g.cn,BroadcastChannelWrapper:()=>w,Contents:()=>p,ContentsAPI:()=>g.nH,DIR_MODE:()=>_.Lt,DRIVE_API_PATH:()=>g.a7,DRIVE_SEPARATOR:()=>g.T8,DriveContentsProcessor:()=>y.x,DriveFS:()=>g.ot,DriveFSEmscriptenNodeOps:()=>g.S1,DriveFSEmscriptenStreamOps:()=>g.aZ,FILE:()=>l,FILE_MODE:()=>_.IO,IBroadcastChannelWrapper:()=>h,IContents:()=>r,MIME:()=>c,SEEK_CUR:()=>_.up,SEEK_END:()=>_.NT,ServiceWorkerContentsAPI:()=>g.u1,instanceOfStream:()=>_.WG});var a=n(51834),s=n(11845),o=n.n(s),i=n(16982);const r=new i.Token("@jupyterlite/contents:IContents");var c,l;!function(t){t.JSON="application/json",t.PLAIN_TEXT="text/plain",t.OCTET_STREAM="octet/stream"}(c||(c={})),function(t){const e=JSON.parse(a.PageConfig.getOption("fileTypes")||"{}");t.getType=function(t,n=null){t=t.toLowerCase();for(const n of Object.values(e))for(const e of n.extensions||[])if(e===t&&n.mimeTypes&&n.mimeTypes.length)return n.mimeTypes[0];return o().getType(t)||n||c.OCTET_STREAM},t.hasFormat=function(t,n){t=t.toLowerCase();for(const a of Object.values(e))if(a.fileFormat===n)for(const e of a.extensions||[])if(e===t)return!0;return!1}}(l||(l={}));const h=new i.Token("@jupyterlite/contents:IBroadcastChannelWrapper"),d="JupyterLite Storage",m=new TextEncoder,f=new TextDecoder("utf-8");class p{constructor(t){this.reduceBytesToString=(t,e)=>t+String.fromCharCode(e),this._serverContents=new Map,this._storageName=d,this._storageDrivers=null,this._localforage=t.localforage,this._storageName=t.storageName||d,this._storageDrivers=t.storageDrivers||null,this._ready=new i.PromiseDelegate}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.createDefaultStorage(),this._counters=this.createDefaultCounters(),this._checkpoints=this.createDefaultCheckpoints()}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}get counters(){return this.ready.then((()=>this._counters))}get checkpoints(){return this.ready.then((()=>this._checkpoints))}get defaultStorageOptions(){const t=this._storageDrivers&&this._storageDrivers.length?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}createDefaultStorage(){return this._localforage.createInstance({description:"Offline Storage for Notebooks and Files",storeName:"files",...this.defaultStorageOptions})}createDefaultCounters(){return this._localforage.createInstance({description:"Store the current file suffix counters",storeName:"counters",...this.defaultStorageOptions})}createDefaultCheckpoints(){return this._localforage.createInstance({description:"Offline Storage for Checkpoints",storeName:"checkpoints",...this.defaultStorageOptions})}async newUntitled(t){var e,n,s;const o=null!==(e=null==t?void 0:t.path)&&void 0!==e?e:"",i=null!==(n=null==t?void 0:t.type)&&void 0!==n?n:"notebook",r=(new Date).toISOString();let h=a.PathExt.dirname(o);const d=a.PathExt.basename(o),f=a.PathExt.extname(o),p=await this.get(h);let g,y="";switch(o&&!f&&p?(h=`${o}/`,y=""):h&&d?(h=`${h}/`,y=d):(h="",y=o),i){case"directory":y=`Untitled Folder${await this._incrementCounter("directory")||""}`,g={name:y,path:`${h}${y}`,last_modified:r,created:r,format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"};break;case"notebook":{const t=await this._incrementCounter("notebook");y=y||`Untitled${t||""}.ipynb`,g={name:y,path:`${h}${y}`,last_modified:r,created:r,format:"json",mimetype:c.JSON,content:u.EMPTY_NB,size:m.encode(JSON.stringify(u.EMPTY_NB)).length,writable:!0,type:"notebook"};break}default:{const e=null!==(s=null==t?void 0:t.ext)&&void 0!==s?s:".txt",n=await this._incrementCounter("file"),a=l.getType(e)||c.OCTET_STREAM;let o;o=l.hasFormat(e,"text")||-1!==a.indexOf("text")?"text":-1!==e.indexOf("json")||-1!==e.indexOf("ipynb")?"json":"base64",y=y||`untitled${n||""}${e}`,g={name:y,path:`${h}${y}`,last_modified:r,created:r,format:o,mimetype:a,content:"",size:0,writable:!0,type:"file"};break}}const w=g.path;return await(await this.storage).setItem(w,g),g}async copy(t,e){let n=a.PathExt.basename(t);for(e=""===e?"":`${a.PathExt.removeSlash(e)}/`;await this.get(`${e}${n}`,{content:!0});){const t=a.PathExt.extname(n),e=n.replace(t,"");n=`${e} (copy)${t}`}const s=`${e}${n}`;let o=await this.get(t,{content:!0});if(!o)throw Error(`Could not find file with path ${t}`);return o={...o,name:n,path:s},await(await this.storage).setItem(s,o),o}async get(t,e){if(""===(t=decodeURIComponent(t.replace(/^\//,""))))return await this._getFolder(t);const n=await this.storage,s=await n.getItem(t),o=await this._getServerContents(t,e),i=s||o;if(!i)return null;if(!(null==e?void 0:e.content))return{size:0,...i,content:null};if("directory"===i.type){const e=new Map;await n.iterate(((n,a)=>{a===`${t}/${n.name}`&&e.set(n.name,n)}));const s=o?o.content:Array.from((await this._getServerDirectory(t)).values());for(const t of s)e.has(t.name)||e.set(t.name,t);const r=[...e.values()];return{name:a.PathExt.basename(t),path:t,last_modified:i.last_modified,created:i.created,format:"json",mimetype:c.JSON,content:r,size:0,writable:!0,type:"directory"}}return i}async rename(t,e){const n=decodeURIComponent(t),s=await this.get(n,{content:!0});if(!s)throw Error(`Could not find file with path ${n}`);const o=(new Date).toISOString(),i=a.PathExt.basename(e),r={...s,name:i,path:e,last_modified:o},c=await this.storage;if(await c.setItem(e,r),await c.removeItem(n),await(await this.checkpoints).removeItem(n),"directory"===s.type){let n;for(n of s.content)await this.rename(a.URLExt.join(t,n.name),a.URLExt.join(e,n.name))}return r}async save(t,e={}){var n;t=decodeURIComponent(t);const s=a.PathExt.extname(null!==(n=e.name)&&void 0!==n?n:""),o=e.chunk,i=!!o&&(o>1||-1===o);let r=await this.get(t,{content:i});if(r||(r=await this.newUntitled({path:t,ext:s,type:"file"})),!r)return null;const c=r.content,h=(new Date).toISOString();if(r={...r,...e,last_modified:h},e.content&&"base64"===e.format){const t=!o||-1===o,n=this._handleUploadChunk(e.content,c,i);if(".ipynb"===s){const e=t?JSON.parse(f.decode(this._binaryStringToBytes(n))):n;r={...r,content:e,format:"json",type:"notebook",size:n.length}}else if(l.hasFormat(s,"json")){const e=t?JSON.parse(f.decode(this._binaryStringToBytes(n))):n;r={...r,content:e,format:"json",type:"file",size:n.length}}else if(l.hasFormat(s,"text")){const e=t?f.decode(this._binaryStringToBytes(n)):n;r={...r,content:e,format:"text",type:"file",size:n.length}}else{const e=t?btoa(n):n;r={...r,content:e,format:"base64",type:"file",size:n.length}}}if(r.content)switch(e.format){case"json":r={...r,size:m.encode(JSON.stringify(r.content)).length};break;case"text":r={...r,size:m.encode(r.content).length};break;case"base64":break;default:r={...r,size:0}}else r={...r,size:0};return await(await this.storage).setItem(t,r),r}async delete(t){const e=`${t=decodeURIComponent(t)}/`,n=(await(await this.storage).keys()).filter((n=>n===t||n.startsWith(e)));await Promise.all(n.map(this.forgetPath,this))}async forgetPath(t){await Promise.all([(await this.storage).removeItem(t),(await this.checkpoints).removeItem(t)])}async createCheckpoint(t){var e;const n=await this.checkpoints;t=decodeURIComponent(t);const a=await this.get(t,{content:!0});if(!a)throw Error(`Could not find file with path ${t}`);const s=(null!==(e=await n.getItem(t))&&void 0!==e?e:[]).filter(Boolean);return s.push(a),s.length>5&&s.splice(0,s.length-5),await n.setItem(t,s),{id:""+(s.length-1),last_modified:a.last_modified}}async listCheckpoints(t){return(await(await this.checkpoints).getItem(t)||[]).filter(Boolean).map(this.normalizeCheckpoint,this)}normalizeCheckpoint(t,e){return{id:e.toString(),last_modified:t.last_modified}}async restoreCheckpoint(t,e){t=decodeURIComponent(t);const n=(await(await this.checkpoints).getItem(t)||[])[parseInt(e)];await(await this.storage).setItem(t,n)}async deleteCheckpoint(t,e){t=decodeURIComponent(t);const n=await(await this.checkpoints).getItem(t)||[],a=parseInt(e);n.splice(a,1),await(await this.checkpoints).setItem(t,n)}_handleUploadChunk(t,e,n){const a=atob(t);return n?e+a:a}_binaryStringToBytes(t){const e=new Uint8Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}async _getFolder(t){const e=new Map,n=await this.storage;await n.iterate(((t,n)=>{n.includes("/")||e.set(t.path,t)}));for(const n of(await this._getServerDirectory(t)).values())e.has(n.path)||e.set(n.path,n);return t&&0===e.size?null:{name:"",path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:c.JSON,content:Array.from(e.values()),size:0,writable:!0,type:"directory"}}async _getServerContents(t,e){const n=a.PathExt.basename(t);let s=(await this._getServerDirectory(a.URLExt.join(t,".."))).get(n);if(!s)return null;if(s=s||{name:n,path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"text",mimetype:c.PLAIN_TEXT,type:"file",writable:!0,size:0,content:""},null==e?void 0:e.content)if("directory"===s.type){const e=await this._getServerDirectory(t);s={...s,content:Array.from(e.values())}}else{const e=a.URLExt.join(a.PageConfig.getBaseUrl(),"files",t),o=await fetch(e);if(!o.ok)return null;const i=s.mimetype||o.headers.get("Content-Type"),r=a.PathExt.extname(n);if("notebook"===s.type||l.hasFormat(r,"json")||-1!==(null==i?void 0:i.indexOf("json"))||t.match(/\.(ipynb|[^/]*json[^/]*)$/)){const t=await o.text();s={...s,content:JSON.parse(t),format:"json",mimetype:s.mimetype||c.JSON,size:m.encode(t).length}}else if(l.hasFormat(r,"text")||-1!==i.indexOf("text")){const t=await o.text();s={...s,content:t,format:"text",mimetype:i||c.PLAIN_TEXT,size:m.encode(t).length}}else{const t=await o.arrayBuffer(),e=new Uint8Array(t);s={...s,content:btoa(e.reduce(this.reduceBytesToString,"")),format:"base64",mimetype:i||c.OCTET_STREAM,size:e.length}}}return s}async _getServerDirectory(t){const e=this._serverContents.get(t)||new Map;if(!this._serverContents.has(t)){const n=a.URLExt.join(a.PageConfig.getBaseUrl(),"api/contents",t,"all.json");try{const t=await fetch(n),a=JSON.parse(await t.text());for(const t of a.content)e.set(t.name,t)}catch(t){console.warn(`don't worry, about ${t}... nothing's broken. If there had been a\n          file at ${n}, you might see some more files.`)}this._serverContents.set(t,e)}return e}async _incrementCounter(t){var e;const n=await this.counters,a=(null!==(e=await n.getItem(t))&&void 0!==e?e:-1)+1;return await n.setItem(t,a),a}}var u;!function(t){t.EMPTY_NB={metadata:{orig_nbformat:4},nbformat_minor:4,nbformat:4,cells:[]}}(u||(u={}));var g=n(17347),y=n(81217);class w{constructor(t){this.isDisposed=!1,this._onMessage=async t=>{if(!this._channel)return;const e=t.data;if("broadcast.ts"!==(null==e?void 0:e.receiver))return;const n=await this._driveContentsProcessor.processDriveRequest(e);this._channel.postMessage(n)},this._channel=null,this._enabled=!1,this._contents=t.contents,this._driveContentsProcessor=new y.x({contentsManager:this._contents})}get enabled(){return this._enabled}enable(){this._channel?console.warn("BroadcastChannel already created and enabled"):(this._channel=new BroadcastChannel(g.a7),this._channel.addEventListener("message",this._onMessage),this._enabled=!0)}disable(){this._channel&&(this._channel.removeEventListener("message",this._onMessage),this._channel=null),this._enabled=!1}dispose(){this.isDisposed||(this.disable(),this.isDisposed=!0)}}var _=n(86953)}}]);