"use strict";(self.webpackChunkescrowai_jupyter=self.webpackChunkescrowai_jupyter||[]).push([[509],{509:(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var o=s(120),r=s(256);const n=new(s(816).AnsiUp);class a extends r.Widget{constructor(){super(),this.addClass("jp-EscrowAI-progress");const e=document.createElement("div");e.className="escrowai-progress-container",this.stepLabel=document.createElement("div"),this.stepLabel.className="escrowai-step-label",this.progressBar=document.createElement("div"),this.progressBar.className="escrowai-progress-bar",this.progressFill=document.createElement("div"),this.progressFill.className="escrowai-progress-fill",this.progressBar.appendChild(this.progressFill);const t=document.createElement("div");t.className="escrowai-header-container",t.appendChild(this.stepLabel),t.appendChild(this.progressBar),this.detailsLabel=document.createElement("div"),this.detailsLabel.className="escrowai-details-label",e.appendChild(t),e.appendChild(this.detailsLabel),this.node.appendChild(e),this.currentStep="Initializing...",this.latestByStep=new Map,this.updateProgress(this.currentStep,"Preparing to start upload...",0),console.log("ProgressWidget: Initialization complete")}setErrorState(e){e?(this.stepLabel.classList.add("error"),this.progressFill.classList.add("error")):(this.stepLabel.classList.remove("error"),this.progressFill.classList.remove("error"))}scrollToBottom(){this.detailsLabel.scrollTop=this.detailsLabel.scrollHeight}updateProgress(e,t,s){console.log("updateProgress:",{step:e,details:t,progress:s});const o="Error"===e;if(this.setErrorState(o),e!==this.currentStep&&(console.log("Step changed from",this.currentStep,"to",e),this.currentStep=e,this.stepLabel.textContent=e),t&&t.trim()){const s=(new Date).toLocaleTimeString();this.latestByStep.set(e,`[${s}] ${t}`),this.updateDisplay()}const r=`${Math.min(100,Math.max(0,s))}%`;this.progressFill.style.width=r,this.scrollToBottom()}updateDisplay(){if(this.latestByStep.has(this.currentStep)){const e=this.latestByStep.get(this.currentStep),t=`<div class="escrowai-output-line">${n.ansi_to_html(e)}</div>`;this.detailsLabel.innerHTML=t}else this.detailsLabel.innerHTML=""}}const i={id:"escrowai-jupyter:plugin",description:"An extension to encrypt and upload the working directory to EscrowAI",autoStart:!0,optional:[o.ICommandPalette],activate:(e,t)=>{console.log("EscrowAI Extension: Activating...");const s="escrowai-jupyter:run-script";e.commands.addCommand(s,{label:"Upload to EscrowAI",execute:async()=>{console.log("EscrowAI Extension: Command executed");const t=new a,s=new o.MainAreaWidget({content:t});s.id="escrowai-progress",s.title.label="EscrowAI Upload Progress",s.title.closable=!0,e.shell.add(s,"main"),s.update();try{console.log("EscrowAI Extension: Starting EventSource connection...");const e=new EventSource("/escrowai_jupyter/run-script");e.onopen=()=>{console.log("EscrowAI Extension: EventSource connection opened")},e.onmessage=s=>{console.log("EscrowAI Extension: Received event data:",s.data);const a=JSON.parse(s.data);if(console.log("EscrowAI Extension: Parsed event data:",a),"running"===a.status)console.log("EscrowAI Extension: Processing running status update"),t.updateProgress(a.step||"Processing...",a.details||"",a.progress||0);else if("complete"===a.status)console.log("EscrowAI Extension: Processing completion"),e.close(),t.updateProgress("Complete","Upload successful!",100),(0,o.showDialog)({title:"Upload Complete",body:new r.Widget({node:l.createHTMLNode("Successfully uploaded to EscrowAI!")}),buttons:[o.Dialog.okButton()]});else if("error"===a.status){console.error("EscrowAI Extension: Processing error:",a.error),e.close();const s=a.error||"Upload failed";t.updateProgress("Error",s,0),(0,o.showDialog)({title:"Upload Failed",body:new r.Widget({node:l.createHTMLNode(`Error: ${n.ansi_to_html(s)}`)}),buttons:[o.Dialog.okButton()]})}},e.onerror=s=>{console.error("EscrowAI Extension: EventSource error:",s),e.close();const n="Connection failed";t.updateProgress("Error",n,0),(0,o.showDialog)({title:"Upload Failed",body:new r.Widget({node:l.createHTMLNode(`Error: ${n}`)}),buttons:[o.Dialog.okButton()]})}}catch(e){const s=String(e);t.updateProgress("Error",s,0),(0,o.showDialog)({title:"Upload Failed",body:new r.Widget({node:l.createHTMLNode(`Error: ${n.ansi_to_html(s)}`)}),buttons:[o.Dialog.okButton()]})}}}),t&&t.addItem({command:s,category:"Extensions"}),console.log("EscrowAI Extension: Activation complete")}};var l;!function(e){e.createHTMLNode=function(e){const t=document.createElement("div");return t.innerHTML=e,t}}(l||(l={}));const c=i}}]);