name: test

on:
  push:
    branches: [main, "[0-9]+.[0-9]+.x"]
  pull_request:
  schedule:
    - cron: "0 10 * * *" # runs at 10:00 UTC (03:00 PST) every day
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: [self-hosted, cpu]

    defaults:
      run:
        shell: bash -e {0} # -e to fail on error

    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.13"]

    name: Python ${{ matrix.python }} integration

    env:
      PYTHON: ${{ matrix.python }}
      RUNNER_WORKDIR: ${{ vars.RUNNER_WORKDIR_BASE || '/mnt/workdir' }}/${{ github.repository }}/${{ github.workflow }}-${{ github.run_number }}-${{ matrix.python }}
      TEST_DATA_DIR: /gsmap_test_data

    steps:
      - name: Create unique workdir
        run: |
          mkdir -p $RUNNER_WORKDIR
          echo "Created workdir: $RUNNER_WORKDIR"

      - uses: actions/checkout@v4
        # Remove the custom path to let the runner use its default location

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel uv
          python -m uv pip install -e "gsMap[tests] @ ."

      - name: Run pytest
        env:
          MPLBACKEND: agg
          DISPLAY: :42
          COLUMNS: 120
        run: |
          python -m pytest --cov=src \
              --cov-report=term-missing \
              --cov-report=xml \
              --cov-report=html \
              --cov-config=.coveragerc \
              -v -s --color=yes \
              --run-real-data \
              --work-dir=${{ env.RUNNER_WORKDIR }} \
              --test-data=${{ env.TEST_DATA_DIR }}

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false

      - name: Retain test results
        if: always()
        run: |
          cp -r coverage.xml coverage-html/ .coverage $RUNNER_WORKDIR/ || true
          echo "Test results are stored in $RUNNER_WORKDIR"
          # Create a summary file with metadata
          echo "Test run completed at $(date)" > $RUNNER_WORKDIR/test-summary.txt
          echo "Workflow: ${{ github.workflow }}" >> $RUNNER_WORKDIR/test-summary.txt
          echo "Run ID: ${{ github.run_id }}" >> $RUNNER_WORKDIR/test-summary.txt
          echo "Run Number: ${{ github.run_number }}" >> $RUNNER_WORKDIR/test-summary.txt
          echo "Python Version: ${{ matrix.python }}" >> $RUNNER_WORKDIR/test-summary.txt
          echo "Repository: ${{ github.repository }}" >> $RUNNER_WORKDIR/test-summary.txt
          echo "Ref: ${{ github.ref }}" >> $RUNNER_WORKDIR/test-summary.txt
