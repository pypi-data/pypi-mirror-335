# coding: utf-8

"""
    Billingo API v3

    This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.

    The version of the OpenAPI document: 3.0.14
    Contact: hello@billingo.hu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_billingo.models.document_insert import DocumentInsert

class TestDocumentInsert(unittest.TestCase):
    """DocumentInsert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentInsert:
        """Test DocumentInsert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentInsert`
        """
        model = DocumentInsert()
        if include_optional:
            return DocumentInsert(
                vendor_id = '',
                partner_id = 56,
                block_id = 56,
                bank_account_id = 56,
                type = 'advance',
                fulfillment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                payment_method = 'aruhitel',
                language = 'de',
                currency = 'AED',
                conversion_rate = 1.337,
                electronic = True,
                paid = True,
                items = [
                    null
                    ],
                comment = '',
                settings = clientapi_billingo.models.document_settings.DocumentSettings(
                    mediated_service = True, 
                    without_financial_fulfillment = True, 
                    online_payment = '', 
                    round = 'five', 
                    no_send_onlineszamla_by_user = True, 
                    order_number = '', 
                    place_id = 56, 
                    instant_payment = True, 
                    selected_type = 'advance', ),
                advance_invoice = [
                    56
                    ],
                discount = clientapi_billingo.models.discount.Discount(
                    type = 'percent', 
                    value = 56, ),
                instant_payment = True
            )
        else:
            return DocumentInsert(
                partner_id = 56,
                block_id = 56,
                type = 'advance',
                fulfillment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                payment_method = 'aruhitel',
                language = 'de',
                currency = 'AED',
        )
        """

    def testDocumentInsert(self):
        """Test DocumentInsert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
