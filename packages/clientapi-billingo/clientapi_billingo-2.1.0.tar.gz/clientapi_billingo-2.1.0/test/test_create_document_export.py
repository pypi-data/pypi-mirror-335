# coding: utf-8

"""
    Billingo API v3

    This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.

    The version of the OpenAPI document: 3.0.14
    Contact: hello@billingo.hu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_billingo.models.create_document_export import CreateDocumentExport

class TestCreateDocumentExport(unittest.TestCase):
    """CreateDocumentExport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateDocumentExport:
        """Test CreateDocumentExport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateDocumentExport`
        """
        model = CreateDocumentExport()
        if include_optional:
            return CreateDocumentExport(
                query_type = 'fulfillment_date',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                document_block_id = 56,
                export_type = 'armada',
                number_start_year = 56,
                number_start_sequence = 56,
                number_end_year = 56,
                number_end_sequence = 56,
                payment_method = 'aruhitel',
                sort_by = 'fulfillment_date',
                other_options = 'all',
                filter_extra = clientapi_billingo.models.document_export_filter_extra.DocumentExportFilterExtra(
                    tensoft_vkod = '', 
                    ledger_number = clientapi_billingo.models.ledger_number_information.LedgerNumberInformation(
                        bevetel = '', 
                        vevo = '', 
                        penztar = '', 
                        afa = '', ), 
                    forintsoft_konyvelesi_naplo_szam = '', 
                    positive_ledger_number = '', 
                    negative_ledger_number = '', 
                    rlb_kata = True, 
                    rlb_note = '', 
                    novitax_naplokod = '', 
                    use_gross_values = True, )
            )
        else:
            return CreateDocumentExport(
                query_type = 'fulfillment_date',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                export_type = 'armada',
        )
        """

    def testCreateDocumentExport(self):
        """Test CreateDocumentExport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
