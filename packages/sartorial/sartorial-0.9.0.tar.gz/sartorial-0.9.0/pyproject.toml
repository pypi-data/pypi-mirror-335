[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[bumpver]
current_version = "0.9.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version: {old_version} â†’ {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
commit = true
tag = true
push = false

[bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"sartorial/__init__.py" = [
    '^__version__ = "{version}"$',
]

[project]
name = "sartorial"
dynamic = ["version"]
description = "Pydantic model base classes and custom type handling, JSON schema generation, etc. covering a variety of common scenarios without much config"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Al Barrentine" },
]
keywords = [
    "sartorial",
    "pydantic",
    "json-schema",
    "schema",
    "model"
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "communal",
    "pydantic>2"
]

[project.urls]
Homepage = "https://github.com/goodcleanfun/sartorial"
Repository = "https://github.com/goodcleanfun/sartorial"

[tool.coverage.run]
parallel = true
source = [
    "tests",
    "sartorial"
]
context = '${CONTEXT}'


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.hatch.version]
path = "sartorial/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/sartorial",
]
