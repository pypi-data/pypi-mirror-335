# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_auth.steamclient.proto
# flake8: noqa
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

from pysteamauth.pb2.steammessages_unified_base import steamclient_pb2  # noqa


# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n$steammessages_auth.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\x1a\x0b\x65nums.proto"}\n/CAuthentication_GetPasswordRSAPublicKey_Request\x12J\n\x0c\x61\x63\x63ount_name\x18\x01 \x01(\tB4\x82\xb5\x18\x30user-provided account name to get an RSA key for"\xd5\x01\n0CAuthentication_GetPasswordRSAPublicKey_Response\x12\x31\n\rpublickey_mod\x18\x01 \x01(\tB\x1a\x82\xb5\x18\x16the public key modulus\x12\x32\n\rpublickey_exp\x18\x02 \x01(\tB\x1b\x82\xb5\x18\x17the public key exponent\x12:\n\ttimestamp\x18\x03 \x01(\x04\x42\'\x82\xb5\x18#the timestamp the key was generated"\x9f\x01\n-CAuthentication_BeginAuthSessionViaQR_Request\x12\x1c\n\x14\x64\x65vice_friendly_name\x18\x01 \x01(\t\x12P\n\rplatform_type\x18\x02 \x01(\x0e\x32\x17.EAuthTokenPlatformType: k_EAuthTokenPlatformType_Unknown"\xf2\x02\n#CAuthentication_AllowedConfirmation\x12\x8e\x01\n\x11\x63onfirmation_type\x18\x01 \x01(\x0e\x32\x16.EAuthSessionGuardType:\x1fk_EAuthSessionGuardType_UnknownB:\x82\xb5\x18\x36\x61uthentication can proceed with this confirmation type\x12\xb9\x01\n\x12\x61ssociated_message\x18\x02 \x01(\tB\x9c\x01\x82\xb5\x18\x97\x01message to be interpreted depending on the confirmation type. for email confirmation, this might be the redacted email address to which email was sent."\xf1\x04\n.CAuthentication_BeginAuthSessionViaQR_Response\x12`\n\tclient_id\x18\x01 \x01(\x04\x42M\x82\xb5\x18Iunique identifier of requestor, also used for routing, portion of QR code\x12T\n\rchallenge_url\x18\x02 \x01(\tB=\x82\xb5\x18\x39URL based on client ID, which will be rendered as QR code\x12p\n\nrequest_id\x18\x03 \x01(\x0c\x42\\\x82\xb5\x18Xunique request ID to be presented by requestor at poll time - must not be rendered in QR\x12]\n\x08interval\x18\x04 \x01(\x02\x42K\x82\xb5\x18Grefresh interval with which requestor should call PollAuthSessionStatus\x12\x88\x01\n\x15\x61llowed_confirmations\x18\x05 \x03(\x0b\x32$.CAuthentication_AllowedConfirmationBC\x82\xb5\x18?the confirmation types that will be able to confirm the request\x12+\n\x07version\x18\x06 \x01(\x05\x42\x1a\x82\xb5\x18\x16version of the QR data"\xe1\x04\n6CAuthentication_BeginAuthSessionViaCredentials_Request\x12\x1c\n\x14\x64\x65vice_friendly_name\x18\x01 \x01(\t\x12\x14\n\x0c\x61\x63\x63ount_name\x18\x02 \x01(\t\x12\x43\n\x12\x65ncrypted_password\x18\x03 \x01(\tB\'\x82\xb5\x18#password, RSA encrypted client side\x12\x43\n\x14\x65ncryption_timestamp\x18\x04 \x01(\x04\x42%\x82\xb5\x18!timestamp to map to a key - STime\x12&\n\x0eremember_login\x18\x05 \x01(\x08\x42\x0e\x82\xb5\x18\ndeprecated\x12P\n\rplatform_type\x18\x06 \x01(\x0e\x32\x17.EAuthTokenPlatformType: k_EAuthTokenPlatformType_Unknown\x12\x8f\x01\n\x0bpersistence\x18\x07 \x01(\x0e\x32\x14.ESessionPersistence: k_ESessionPersistence_PersistentBB\x82\xb5\x18>whether we are requesting a persistent or an ephemeral session\x12]\n\nwebsite_id\x18\x08 \x01(\t:\x07UnknownB@\x82\xb5\x18<(EMachineAuthWebDomain) identifier of client requesting auth"\xd9\x05\n7CAuthentication_BeginAuthSessionViaCredentials_Response\x12L\n\tclient_id\x18\x01 \x01(\x04\x42\x39\x82\xb5\x18\x35unique identifier of requestor, also used for routing\x12z\n\nrequest_id\x18\x02 \x01(\x0c\x42\x66\x82\xb5\x18\x62unique request ID to be presented by requestor at poll time - must not be transferred or displayed\x12]\n\x08interval\x18\x03 \x01(\x02\x42K\x82\xb5\x18Grefresh interval with which requestor should call PollAuthSessionStatus\x12\x88\x01\n\x15\x61llowed_confirmations\x18\x04 \x03(\x0b\x32$.CAuthentication_AllowedConfirmationBC\x82\xb5\x18?the confirmation types that will be able to confirm the request\x12n\n\x07steamid\x18\x05 \x01(\x04\x42]\x82\xb5\x18Ysteamid of the account logging in - will only be included if the credentials were correct\x12z\n\nweak_token\x18\x06 \x01(\tBf\x82\xb5\x18\x62partial-authentication token - limited lifetime and scope, included only if credentials were valid"\xbd\x01\n-CAuthentication_PollAuthSessionStatus_Request\x12\x11\n\tclient_id\x18\x01 \x01(\x04\x12\x12\n\nrequest_id\x18\x02 \x01(\x0c\x12\x65\n\x0ftoken_to_revoke\x18\x03 \x01(\x06\x42L\x82\xb5\x18HIf this is set to a token owned by this user, that token will be retired"\x9d\x05\n.CAuthentication_PollAuthSessionStatus_Response\x12I\n\rnew_client_id\x18\x01 \x01(\x04\x42\x32\x82\xb5\x18.if challenge is old, this is the new client id\x12u\n\x11new_challenge_url\x18\x02 \x01(\tBZ\x82\xb5\x18Vif challenge is old, this is the new challenge ID to re-render for mobile confirmation\x12\x61\n\rrefresh_token\x18\x03 \x01(\tBJ\x82\xb5\x18\x46if login has been confirmed, this is the requestor\'s new refresh token\x12g\n\x0c\x61\x63\x63\x65ss_token\x18\x04 \x01(\tBQ\x82\xb5\x18Mif login has been confirmed, this is a new token subordinate to refresh_token\x12\x85\x01\n\x16had_remote_interaction\x18\x05 \x01(\x08\x42\x65\x82\xb5\x18\x61whether or not the auth session appears to have had remote interaction from a potential confirmer\x12U\n\x0c\x61\x63\x63ount_name\x18\x06 \x01(\tB?\x82\xb5\x18;account name of authenticating account, for use by UI layer"u\n*CAuthentication_GetAuthSessionInfo_Request\x12G\n\tclient_id\x18\x01 \x01(\x04\x42\x34\x82\xb5\x18\x30\x63lient ID from scanned QR Code, used for routing"\xbb\x07\n+CAuthentication_GetAuthSessionInfo_Response\x12\'\n\x02ip\x18\x01 \x01(\tB\x1b\x82\xb5\x18\x17IP address of requestor\x12,\n\x06geoloc\x18\x02 \x01(\tB\x1c\x82\xb5\x18\x18geoloc info of requestor\x12#\n\x04\x63ity\x18\x03 \x01(\tB\x15\x82\xb5\x18\x11\x63ity of requestor\x12%\n\x05state\x18\x04 \x01(\tB\x16\x82\xb5\x18\x12state of requestor\x12)\n\x07\x63ountry\x18\x05 \x01(\tB\x18\x82\xb5\x18\x14\x63ountry of requestor\x12p\n\rplatform_type\x18\x06 \x01(\x0e\x32\x17.EAuthTokenPlatformType: k_EAuthTokenPlatformType_UnknownB\x1e\x82\xb5\x18\x1aplatform type of requestor\x12:\n\x14\x64\x65vice_friendly_name\x18\x07 \x01(\tB\x1c\x82\xb5\x18\x18name of requestor device\x12"\n\x07version\x18\x08 \x01(\x05\x42\x11\x82\xb5\x18\rversion field\x12\xa4\x01\n\rlogin_history\x18\t \x01(\x0e\x32\x1c.EAuthSessionSecurityHistory:%k_EAuthSessionSecurityHistory_InvalidBH\x82\xb5\x18\x44whether the ip has previuously been used on the account successfully\x12\x66\n\x1brequestor_location_mismatch\x18\n \x01(\x08\x42\x41\x82\xb5\x18=whether the requestor location matches this requests location\x12M\n\x10high_usage_login\x18\x0b \x01(\x08\x42\x33\x82\xb5\x18/whether this login has seen high usage recently\x12\x8d\x01\n\x15requested_persistence\x18\x0c \x01(\x0e\x32\x14.ESessionPersistence:\x1dk_ESessionPersistence_InvalidB9\x82\xb5\x18\x35session persistence requestor has indicated they want"\x9c\x04\n?CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request\x12"\n\x07version\x18\x01 \x01(\x05\x42\x11\x82\xb5\x18\rversion field\x12>\n\tclient_id\x18\x02 \x01(\x04\x42+\x82\xb5\x18\'pending client ID, from scanned QR Code\x12,\n\x07steamid\x18\x03 \x01(\x06\x42\x1b\x82\xb5\x18\x17user who wants to login\x12Z\n\tsignature\x18\x04 \x01(\x0c\x42G\x82\xb5\x18\x43HMAC digest over {version,client_id,steamid} via user\'s private key\x12Y\n\x07\x63onfirm\x18\x05 \x01(\x08:\x05\x66\x61lseBA\x82\xb5\x18=Whether to confirm the login (true) or deny the login (false)\x12\x8f\x01\n\x0bpersistence\x18\x06 \x01(\x0e\x32\x14.ESessionPersistence: k_ESessionPersistence_PersistentBB\x82\xb5\x18>whether we are requesting a persistent or an ephemeral session"B\n@CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response"\xbf\x02\n;CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request\x12\x42\n\tclient_id\x18\x01 \x01(\x04\x42/\x82\xb5\x18+pending client ID, from initialized session\x12,\n\x07steamid\x18\x02 \x01(\x06\x42\x1b\x82\xb5\x18\x17user who wants to login\x12#\n\x04\x63ode\x18\x03 \x01(\tB\x15\x82\xb5\x18\x11\x63onfirmation code\x12i\n\tcode_type\x18\x04 \x01(\x0e\x32\x16.EAuthSessionGuardType:\x1fk_EAuthSessionGuardType_UnknownB\x1d\x82\xb5\x18\x19type of confirmation code">\n<CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response"\\\n2CAuthentication_AccessToken_GenerateForApp_Request\x12\x15\n\rrefresh_token\x18\x01 \x01(\t\x12\x0f\n\x07steamid\x18\x02 \x01(\x06"K\n3CAuthentication_AccessToken_GenerateForApp_Response\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x01 \x01(\t"3\n1CAuthentication_GetAuthSessionsForAccount_Request"\x83\x01\n2CAuthentication_GetAuthSessionsForAccount_Response\x12M\n\nclient_ids\x18\x01 \x03(\x04\x42\x39\x82\xb5\x18\x35unique identifier of requestor, also used for routing"\xdb\x01\n,CAuthentication_MigrateMobileSession_Request\x12\x34\n\x07steamid\x18\x01 \x01(\x06\x42#\x82\xb5\x18\x1fSteam ID of the user to migrate\x12&\n\x05token\x18\x02 \x01(\tB\x17\x82\xb5\x18\x13WG Token to migrate\x12M\n\tsignature\x18\x03 \x01(\tB:\x82\xb5\x18\x36Signature over the wg token using the user\'s 2FA token"\\\n-CAuthentication_MigrateMobileSession_Response\x12\x15\n\rrefresh_token\x18\x01 \x01(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x02 \x01(\t"\xdb\x01\n:CAuthenticationSupport_QueryRefreshTokensByAccount_Request\x12?\n\x07steamid\x18\x01 \x01(\x06\x42.\x82\xb5\x18*SteamID of the account to query (required)\x12\\\n\x16include_revoked_tokens\x18\x02 \x01(\x08\x42<\x82\xb5\x18\x38Includes tokens that are revoked or expired in the query"\x8f\x02\n\x1f\x43SupportRefreshTokenDescription\x12\x10\n\x08token_id\x18\x01 \x01(\x06\x12\x19\n\x11token_description\x18\x02 \x01(\t\x12\x14\n\x0ctime_updated\x18\x03 \x01(\r\x12P\n\rplatform_type\x18\x04 \x01(\x0e\x32\x17.EAuthTokenPlatformType: k_EAuthTokenPlatformType_Unknown\x12@\n\x0btoken_state\x18\x05 \x01(\x0e\x32\x10.EAuthTokenState:\x19k_EAuthTokenState_Invalid\x12\x15\n\rowner_steamid\x18\x06 \x01(\x06"w\n;CAuthenticationSupport_QueryRefreshTokensByAccount_Response\x12\x38\n\x0erefresh_tokens\x18\x01 \x03(\x0b\x32 .CSupportRefreshTokenDescription"y\n4CAuthenticationSupport_QueryRefreshTokenByID_Request\x12\x41\n\x08token_id\x18\x01 \x01(\x06\x42/\x82\xb5\x18+Token ID of the token to look up (required)"q\n5CAuthenticationSupport_QueryRefreshTokenByID_Response\x12\x38\n\x0erefresh_tokens\x18\x01 \x03(\x0b\x32 .CSupportRefreshTokenDescription"n\n*CAuthenticationSupport_RevokeToken_Request\x12@\n\x08token_id\x18\x01 \x01(\x06\x42.\x82\xb5\x18*Token ID of the token to revoke (required)"-\n+CAuthenticationSupport_RevokeToken_Response"{\n.CAuthenticationSupport_GetTokenHistory_Request\x12I\n\x08token_id\x18\x01 \x01(\x06\x42\x37\x82\xb5\x18\x33Token ID of the token to get history for (required)"d\n\x19\x43SupportRefreshTokenAudit\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\x05\x12\x0c\n\x04time\x18\x02 \x01(\r\x12\x1a\n\x02ip\x18\x03 \x01(\x0b\x32\x0e.CMsgIPAddress\x12\r\n\x05\x61\x63tor\x18\x04 \x01(\x06"^\n/CAuthenticationSupport_GetTokenHistory_Response\x12+\n\x07history\x18\x01 \x03(\x0b\x32\x1a.CSupportRefreshTokenAudit"C\n CCloudGaming_CreateNonce_Request\x12\x10\n\x08platform\x18\x01 \x01(\t\x12\r\n\x05\x61ppid\x18\x02 \x01(\r"B\n!CCloudGaming_CreateNonce_Response\x12\r\n\x05nonce\x18\x01 \x01(\t\x12\x0e\n\x06\x65xpiry\x18\x02 \x01(\r"M\n%CCloudGaming_GetTimeRemaining_Request\x12\x10\n\x08platform\x18\x01 \x01(\t\x12\x12\n\nappid_list\x18\x02 \x03(\r"F\n\x1a\x43\x43loudGaming_TimeRemaining\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x19\n\x11minutes_remaining\x18\x02 \x01(\r"V\n&CCloudGaming_GetTimeRemaining_Response\x12,\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\x1b.CCloudGaming_TimeRemaining*\xb9\x01\n\x16\x45\x41uthTokenPlatformType\x12$\n k_EAuthTokenPlatformType_Unknown\x10\x00\x12(\n$k_EAuthTokenPlatformType_SteamClient\x10\x01\x12\'\n#k_EAuthTokenPlatformType_WebBrowser\x10\x02\x12&\n"k_EAuthTokenPlatformType_MobileApp\x10\x03*\xb6\x02\n\x15\x45\x41uthSessionGuardType\x12#\n\x1fk_EAuthSessionGuardType_Unknown\x10\x00\x12 \n\x1ck_EAuthSessionGuardType_None\x10\x01\x12%\n!k_EAuthSessionGuardType_EmailCode\x10\x02\x12&\n"k_EAuthSessionGuardType_DeviceCode\x10\x03\x12.\n*k_EAuthSessionGuardType_DeviceConfirmation\x10\x04\x12-\n)k_EAuthSessionGuardType_EmailConfirmation\x10\x05\x12(\n$k_EAuthSessionGuardType_MachineToken\x10\x06*\xac\x01\n\x1b\x45\x41uthSessionSecurityHistory\x12)\n%k_EAuthSessionSecurityHistory_Invalid\x10\x00\x12\x30\n,k_EAuthSessionSecurityHistory_UsedPreviously\x10\x01\x12\x30\n,k_EAuthSessionSecurityHistory_NoPriorHistory\x10\x02*\xe8\x01\n\x0f\x45\x41uthTokenState\x12\x1d\n\x19k_EAuthTokenState_Invalid\x10\x00\x12\x19\n\x15k_EAuthTokenState_New\x10\x01\x12\x1f\n\x1bk_EAuthTokenState_Confirmed\x10\x02\x12\x1c\n\x18k_EAuthTokenState_Issued\x10\x03\x12\x1c\n\x18k_EAuthTokenState_Denied\x10\x04\x12\x1f\n\x1bk_EAuthTokenState_LoggedOut\x10\x05\x12\x1d\n\x19k_EAuthTokenState_Revoked\x10\x63\x32\xcd\x10\n\x0e\x41uthentication\x12\xcf\x01\n\x17GetPasswordRSAPublicKey\x12\x30.CAuthentication_GetPasswordRSAPublicKey_Request\x1a\x31.CAuthentication_GetPasswordRSAPublicKey_Response"O\x82\xb5\x18KFetches RSA public key to use to encrypt passwords for a given account name\x12\x9a\x01\n\x15\x42\x65ginAuthSessionViaQR\x12..CAuthentication_BeginAuthSessionViaQR_Request\x1a/.CAuthentication_BeginAuthSessionViaQR_Response" \x82\xb5\x18\x1cstart authentication process\x12\xb5\x01\n\x1e\x42\x65ginAuthSessionViaCredentials\x12\x37.CAuthentication_BeginAuthSessionViaCredentials_Request\x1a\x38.CAuthentication_BeginAuthSessionViaCredentials_Response" \x82\xb5\x18\x1cstart authentication process\x12\xa0\x01\n\x15PollAuthSessionStatus\x12..CAuthentication_PollAuthSessionStatus_Request\x1a/.CAuthentication_PollAuthSessionStatus_Response"&\x82\xb5\x18"poll during authentication process\x12\xce\x01\n\x12GetAuthSessionInfo\x12+.CAuthentication_GetAuthSessionInfo_Request\x1a,.CAuthentication_GetAuthSessionInfo_Response"]\x82\xb5\x18Yget metadata of specific auth session, this will also implicitly bind the calling account\x12\xe4\x01\n\'UpdateAuthSessionWithMobileConfirmation\x12@.CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request\x1a\x41.CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response"4\x82\xb5\x18\x30\x61pprove an authentication session via mobile 2fa\x12\xde\x01\n#UpdateAuthSessionWithSteamGuardCode\x12<.CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request\x1a=.CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response":\x82\xb5\x18\x36\x61pprove an authentication session via steam guard code\x12\xfb\x01\n\x19GenerateAccessTokenForApp\x12\x33.CAuthentication_AccessToken_GenerateForApp_Request\x1a\x34.CAuthentication_AccessToken_GenerateForApp_Response"s\x82\xb5\x18oGiven a refresh token for a client app audience (e.g. desktop client / mobile client), generate an access token\x12\xd6\x01\n\x19GetAuthSessionsForAccount\x12\x32.CAuthentication_GetAuthSessionsForAccount_Request\x1a\x33.CAuthentication_GetAuthSessionsForAccount_Response"P\x82\xb5\x18LGets all active auth sessions for an account for reference by the mobile app\x12\xe4\x01\n\x14MigrateMobileSession\x12-.CAuthentication_MigrateMobileSession_Request\x1a..CAuthentication_MigrateMobileSession_Response"m\x82\xb5\x18iMigrates a WG token to an access and refresh token using a signature generated with the user\'s 2FA secret\x1a\x1a\x82\xb5\x18\x16\x41uthentication Service2\xb0\x06\n\x15\x41uthenticationSupport\x12\xe5\x01\n\x1bQueryRefreshTokensByAccount\x12;.CAuthenticationSupport_QueryRefreshTokensByAccount_Request\x1a<.CAuthenticationSupport_QueryRefreshTokensByAccount_Response"K\x82\xb5\x18GAsks the server for a list of refresh tokens associated with an account\x12\xd3\x01\n\x15QueryRefreshTokenByID\x12\x35.CAuthenticationSupport_QueryRefreshTokenByID_Request\x1a\x36.CAuthenticationSupport_QueryRefreshTokenByID_Response"K\x82\xb5\x18GAsks the server for a list of refresh tokens associated with an account\x12\x89\x01\n\x0bRevokeToken\x12+.CAuthenticationSupport_RevokeToken_Request\x1a,.CAuthenticationSupport_RevokeToken_Response"\x1f\x82\xb5\x18\x1bRevokes a user\'s auth token\x12\xa8\x01\n\x0fGetTokenHistory\x12/.CAuthenticationSupport_GetTokenHistory_Request\x1a\x30.CAuthenticationSupport_GetTokenHistory_Response"2\x82\xb5\x18.Gets the audit history for a user\'s auth token\x1a"\x82\xb5\x18\x1e\x41uthentication Support Service2\xf2\x02\n\x0b\x43loudGaming\x12\x8b\x01\n\x0b\x43reateNonce\x12!.CCloudGaming_CreateNonce_Request\x1a".CCloudGaming_CreateNonce_Response"5\x82\xb5\x18\x31\x43reate a nonce for a cloud gaming service session\x12\xa5\x01\n\x10GetTimeRemaining\x12&.CCloudGaming_GetTimeRemaining_Request\x1a\'.CCloudGaming_GetTimeRemaining_Response"@\x82\xb5\x18<Get the amount of streaming time remaining for a set of apps\x1a-\x82\xb5\x18)Methods for Steam cloud gaming operationsB\x03\x80\x01\x01'
)

_EAUTHTOKENPLATFORMTYPE = DESCRIPTOR.enum_types_by_name["EAuthTokenPlatformType"]
EAuthTokenPlatformType = enum_type_wrapper.EnumTypeWrapper(_EAUTHTOKENPLATFORMTYPE)
_EAUTHSESSIONGUARDTYPE = DESCRIPTOR.enum_types_by_name["EAuthSessionGuardType"]
EAuthSessionGuardType = enum_type_wrapper.EnumTypeWrapper(_EAUTHSESSIONGUARDTYPE)
_EAUTHSESSIONSECURITYHISTORY = DESCRIPTOR.enum_types_by_name[
    "EAuthSessionSecurityHistory"
]
EAuthSessionSecurityHistory = enum_type_wrapper.EnumTypeWrapper(
    _EAUTHSESSIONSECURITYHISTORY
)
_EAUTHTOKENSTATE = DESCRIPTOR.enum_types_by_name["EAuthTokenState"]
EAuthTokenState = enum_type_wrapper.EnumTypeWrapper(_EAUTHTOKENSTATE)
k_EAuthTokenPlatformType_Unknown = 0
k_EAuthTokenPlatformType_SteamClient = 1
k_EAuthTokenPlatformType_WebBrowser = 2
k_EAuthTokenPlatformType_MobileApp = 3
k_EAuthSessionGuardType_Unknown = 0
k_EAuthSessionGuardType_None = 1
k_EAuthSessionGuardType_EmailCode = 2
k_EAuthSessionGuardType_DeviceCode = 3
k_EAuthSessionGuardType_DeviceConfirmation = 4
k_EAuthSessionGuardType_EmailConfirmation = 5
k_EAuthSessionGuardType_MachineToken = 6
k_EAuthSessionSecurityHistory_Invalid = 0
k_EAuthSessionSecurityHistory_UsedPreviously = 1
k_EAuthSessionSecurityHistory_NoPriorHistory = 2
k_EAuthTokenState_Invalid = 0
k_EAuthTokenState_New = 1
k_EAuthTokenState_Confirmed = 2
k_EAuthTokenState_Issued = 3
k_EAuthTokenState_Denied = 4
k_EAuthTokenState_LoggedOut = 5
k_EAuthTokenState_Revoked = 99


_CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetPasswordRSAPublicKey_Request"
]
_CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetPasswordRSAPublicKey_Response"
]
_CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_BeginAuthSessionViaQR_Request"
]
_CAUTHENTICATION_ALLOWEDCONFIRMATION = DESCRIPTOR.message_types_by_name[
    "CAuthentication_AllowedConfirmation"
]
_CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_BeginAuthSessionViaQR_Response"
]
_CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_BeginAuthSessionViaCredentials_Request"
    ]
)
_CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_BeginAuthSessionViaCredentials_Response"
    ]
)
_CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_PollAuthSessionStatus_Request"
]
_CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_PollAuthSessionStatus_Response"
]
_CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetAuthSessionInfo_Request"
]
_CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetAuthSessionInfo_Response"
]
_CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request"
    ]
)
_CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_RESPONSE = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response"
    ]
)
_CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request"
    ]
)
_CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_RESPONSE = (
    DESCRIPTOR.message_types_by_name[
        "CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response"
    ]
)
_CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_AccessToken_GenerateForApp_Request"
]
_CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_AccessToken_GenerateForApp_Response"
]
_CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetAuthSessionsForAccount_Request"
]
_CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_GetAuthSessionsForAccount_Response"
]
_CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthentication_MigrateMobileSession_Request"
]
_CAUTHENTICATION_MIGRATEMOBILESESSION_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthentication_MigrateMobileSession_Response"
]
_CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST = (
    DESCRIPTOR.message_types_by_name[
        "CAuthenticationSupport_QueryRefreshTokensByAccount_Request"
    ]
)
_CSUPPORTREFRESHTOKENDESCRIPTION = DESCRIPTOR.message_types_by_name[
    "CSupportRefreshTokenDescription"
]
_CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_RESPONSE = (
    DESCRIPTOR.message_types_by_name[
        "CAuthenticationSupport_QueryRefreshTokensByAccount_Response"
    ]
)
_CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST = (
    DESCRIPTOR.message_types_by_name[
        "CAuthenticationSupport_QueryRefreshTokenByID_Request"
    ]
)
_CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_RESPONSE = (
    DESCRIPTOR.message_types_by_name[
        "CAuthenticationSupport_QueryRefreshTokenByID_Response"
    ]
)
_CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthenticationSupport_RevokeToken_Request"
]
_CAUTHENTICATIONSUPPORT_REVOKETOKEN_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthenticationSupport_RevokeToken_Response"
]
_CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST = DESCRIPTOR.message_types_by_name[
    "CAuthenticationSupport_GetTokenHistory_Request"
]
_CSUPPORTREFRESHTOKENAUDIT = DESCRIPTOR.message_types_by_name[
    "CSupportRefreshTokenAudit"
]
_CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CAuthenticationSupport_GetTokenHistory_Response"
]
_CCLOUDGAMING_CREATENONCE_REQUEST = DESCRIPTOR.message_types_by_name[
    "CCloudGaming_CreateNonce_Request"
]
_CCLOUDGAMING_CREATENONCE_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CCloudGaming_CreateNonce_Response"
]
_CCLOUDGAMING_GETTIMEREMAINING_REQUEST = DESCRIPTOR.message_types_by_name[
    "CCloudGaming_GetTimeRemaining_Request"
]
_CCLOUDGAMING_TIMEREMAINING = DESCRIPTOR.message_types_by_name[
    "CCloudGaming_TimeRemaining"
]
_CCLOUDGAMING_GETTIMEREMAINING_RESPONSE = DESCRIPTOR.message_types_by_name[
    "CCloudGaming_GetTimeRemaining_Response"
]
CAuthentication_GetPasswordRSAPublicKey_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_GetPasswordRSAPublicKey_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_GetPasswordRSAPublicKey_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_GetPasswordRSAPublicKey_Request)

CAuthentication_GetPasswordRSAPublicKey_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_GetPasswordRSAPublicKey_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_GetPasswordRSAPublicKey_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_GetPasswordRSAPublicKey_Response)

CAuthentication_BeginAuthSessionViaQR_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_BeginAuthSessionViaQR_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_BeginAuthSessionViaQR_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_BeginAuthSessionViaQR_Request)

CAuthentication_AllowedConfirmation = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_AllowedConfirmation",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_ALLOWEDCONFIRMATION,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_AllowedConfirmation)
    },
)
_sym_db.RegisterMessage(CAuthentication_AllowedConfirmation)

CAuthentication_BeginAuthSessionViaQR_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_BeginAuthSessionViaQR_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_BeginAuthSessionViaQR_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_BeginAuthSessionViaQR_Response)

CAuthentication_BeginAuthSessionViaCredentials_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_BeginAuthSessionViaCredentials_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_BeginAuthSessionViaCredentials_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_BeginAuthSessionViaCredentials_Request)

CAuthentication_BeginAuthSessionViaCredentials_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_BeginAuthSessionViaCredentials_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_BeginAuthSessionViaCredentials_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_BeginAuthSessionViaCredentials_Response)

CAuthentication_PollAuthSessionStatus_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_PollAuthSessionStatus_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_PollAuthSessionStatus_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_PollAuthSessionStatus_Request)

CAuthentication_PollAuthSessionStatus_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_PollAuthSessionStatus_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_PollAuthSessionStatus_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_PollAuthSessionStatus_Response)

CAuthentication_GetAuthSessionInfo_Request = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_GetAuthSessionInfo_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_GetAuthSessionInfo_Request)
    },
)
_sym_db.RegisterMessage(CAuthentication_GetAuthSessionInfo_Request)

CAuthentication_GetAuthSessionInfo_Response = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_GetAuthSessionInfo_Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_GetAuthSessionInfo_Response)
    },
)
_sym_db.RegisterMessage(CAuthentication_GetAuthSessionInfo_Response)

CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request)
    },
)
_sym_db.RegisterMessage(CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request)

CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_RESPONSE,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response)
    },
)
_sym_db.RegisterMessage(
    CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response
)

CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request)

CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response)

CAuthentication_AccessToken_GenerateForApp_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_AccessToken_GenerateForApp_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_AccessToken_GenerateForApp_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_AccessToken_GenerateForApp_Request)

CAuthentication_AccessToken_GenerateForApp_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_AccessToken_GenerateForApp_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_AccessToken_GenerateForApp_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_AccessToken_GenerateForApp_Response)

CAuthentication_GetAuthSessionsForAccount_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_GetAuthSessionsForAccount_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_GetAuthSessionsForAccount_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_GetAuthSessionsForAccount_Request)

CAuthentication_GetAuthSessionsForAccount_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_GetAuthSessionsForAccount_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_GetAuthSessionsForAccount_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_GetAuthSessionsForAccount_Response)

CAuthentication_MigrateMobileSession_Request = _reflection.GeneratedProtocolMessageType(
    "CAuthentication_MigrateMobileSession_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthentication_MigrateMobileSession_Request)
    },
)
_sym_db.RegisterMessage(CAuthentication_MigrateMobileSession_Request)

CAuthentication_MigrateMobileSession_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthentication_MigrateMobileSession_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATION_MIGRATEMOBILESESSION_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthentication_MigrateMobileSession_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthentication_MigrateMobileSession_Response)

CAuthenticationSupport_QueryRefreshTokensByAccount_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_QueryRefreshTokensByAccount_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_QueryRefreshTokensByAccount_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_QueryRefreshTokensByAccount_Request)

CSupportRefreshTokenDescription = _reflection.GeneratedProtocolMessageType(
    "CSupportRefreshTokenDescription",
    (_message.Message,),
    {
        "DESCRIPTOR": _CSUPPORTREFRESHTOKENDESCRIPTION,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CSupportRefreshTokenDescription)
    },
)
_sym_db.RegisterMessage(CSupportRefreshTokenDescription)

CAuthenticationSupport_QueryRefreshTokensByAccount_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_QueryRefreshTokensByAccount_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_QueryRefreshTokensByAccount_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_QueryRefreshTokensByAccount_Response)

CAuthenticationSupport_QueryRefreshTokenByID_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_QueryRefreshTokenByID_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_QueryRefreshTokenByID_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_QueryRefreshTokenByID_Request)

CAuthenticationSupport_QueryRefreshTokenByID_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_QueryRefreshTokenByID_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_QueryRefreshTokenByID_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_QueryRefreshTokenByID_Response)

CAuthenticationSupport_RevokeToken_Request = _reflection.GeneratedProtocolMessageType(
    "CAuthenticationSupport_RevokeToken_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthenticationSupport_RevokeToken_Request)
    },
)
_sym_db.RegisterMessage(CAuthenticationSupport_RevokeToken_Request)

CAuthenticationSupport_RevokeToken_Response = _reflection.GeneratedProtocolMessageType(
    "CAuthenticationSupport_RevokeToken_Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_REVOKETOKEN_RESPONSE,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CAuthenticationSupport_RevokeToken_Response)
    },
)
_sym_db.RegisterMessage(CAuthenticationSupport_RevokeToken_Response)

CAuthenticationSupport_GetTokenHistory_Request = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_GetTokenHistory_Request",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_GetTokenHistory_Request)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_GetTokenHistory_Request)

CSupportRefreshTokenAudit = _reflection.GeneratedProtocolMessageType(
    "CSupportRefreshTokenAudit",
    (_message.Message,),
    {
        "DESCRIPTOR": _CSUPPORTREFRESHTOKENAUDIT,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CSupportRefreshTokenAudit)
    },
)
_sym_db.RegisterMessage(CSupportRefreshTokenAudit)

CAuthenticationSupport_GetTokenHistory_Response = (
    _reflection.GeneratedProtocolMessageType(
        "CAuthenticationSupport_GetTokenHistory_Response",
        (_message.Message,),
        {
            "DESCRIPTOR": _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_RESPONSE,
            "__module__": "steammessages_auth.steamclient_pb2",
            # @@protoc_insertion_point(class_scope:CAuthenticationSupport_GetTokenHistory_Response)
        },
    )
)
_sym_db.RegisterMessage(CAuthenticationSupport_GetTokenHistory_Response)

CCloudGaming_CreateNonce_Request = _reflection.GeneratedProtocolMessageType(
    "CCloudGaming_CreateNonce_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CCLOUDGAMING_CREATENONCE_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CCloudGaming_CreateNonce_Request)
    },
)
_sym_db.RegisterMessage(CCloudGaming_CreateNonce_Request)

CCloudGaming_CreateNonce_Response = _reflection.GeneratedProtocolMessageType(
    "CCloudGaming_CreateNonce_Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _CCLOUDGAMING_CREATENONCE_RESPONSE,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CCloudGaming_CreateNonce_Response)
    },
)
_sym_db.RegisterMessage(CCloudGaming_CreateNonce_Response)

CCloudGaming_GetTimeRemaining_Request = _reflection.GeneratedProtocolMessageType(
    "CCloudGaming_GetTimeRemaining_Request",
    (_message.Message,),
    {
        "DESCRIPTOR": _CCLOUDGAMING_GETTIMEREMAINING_REQUEST,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CCloudGaming_GetTimeRemaining_Request)
    },
)
_sym_db.RegisterMessage(CCloudGaming_GetTimeRemaining_Request)

CCloudGaming_TimeRemaining = _reflection.GeneratedProtocolMessageType(
    "CCloudGaming_TimeRemaining",
    (_message.Message,),
    {
        "DESCRIPTOR": _CCLOUDGAMING_TIMEREMAINING,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CCloudGaming_TimeRemaining)
    },
)
_sym_db.RegisterMessage(CCloudGaming_TimeRemaining)

CCloudGaming_GetTimeRemaining_Response = _reflection.GeneratedProtocolMessageType(
    "CCloudGaming_GetTimeRemaining_Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _CCLOUDGAMING_GETTIMEREMAINING_RESPONSE,
        "__module__": "steammessages_auth.steamclient_pb2",
        # @@protoc_insertion_point(class_scope:CCloudGaming_GetTimeRemaining_Response)
    },
)
_sym_db.RegisterMessage(CCloudGaming_GetTimeRemaining_Response)

_AUTHENTICATION = DESCRIPTOR.services_by_name["Authentication"]
_AUTHENTICATIONSUPPORT = DESCRIPTOR.services_by_name["AuthenticationSupport"]
_CLOUDGAMING = DESCRIPTOR.services_by_name["CloudGaming"]
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\200\001\001"
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST.fields_by_name[
        "account_name"
    ]._options = None
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST.fields_by_name[
        "account_name"
    ]._serialized_options = (
        b"\202\265\0300user-provided account name to get an RSA key for"
    )
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "publickey_mod"
    ]._options = None
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "publickey_mod"
    ]._serialized_options = b"\202\265\030\026the public key modulus"
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "publickey_exp"
    ]._options = None
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "publickey_exp"
    ]._serialized_options = b"\202\265\030\027the public key exponent"
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "timestamp"
    ]._options = None
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE.fields_by_name[
        "timestamp"
    ]._serialized_options = b"\202\265\030#the timestamp the key was generated"
    _CAUTHENTICATION_ALLOWEDCONFIRMATION.fields_by_name[
        "confirmation_type"
    ]._options = None
    _CAUTHENTICATION_ALLOWEDCONFIRMATION.fields_by_name[
        "confirmation_type"
    ]._serialized_options = (
        b"\202\265\0306authentication can proceed with this confirmation type"
    )
    _CAUTHENTICATION_ALLOWEDCONFIRMATION.fields_by_name[
        "associated_message"
    ]._options = None
    _CAUTHENTICATION_ALLOWEDCONFIRMATION.fields_by_name[
        "associated_message"
    ]._serialized_options = b"\202\265\030\227\001message to be interpreted depending on the confirmation type. for email confirmation, this might be the redacted email address to which email was sent."
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "client_id"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "client_id"
    ]._serialized_options = b"\202\265\030Iunique identifier of requestor, also used for routing, portion of QR code"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "challenge_url"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "challenge_url"
    ]._serialized_options = (
        b"\202\265\0309URL based on client ID, which will be rendered as QR code"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "request_id"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "request_id"
    ]._serialized_options = b"\202\265\030Xunique request ID to be presented by requestor at poll time - must not be rendered in QR"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "interval"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "interval"
    ]._serialized_options = b"\202\265\030Grefresh interval with which requestor should call PollAuthSessionStatus"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "allowed_confirmations"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "allowed_confirmations"
    ]._serialized_options = (
        b"\202\265\030?the confirmation types that will be able to confirm the request"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "version"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE.fields_by_name[
        "version"
    ]._serialized_options = b"\202\265\030\026version of the QR data"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "encrypted_password"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "encrypted_password"
    ]._serialized_options = b"\202\265\030#password, RSA encrypted client side"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "encryption_timestamp"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "encryption_timestamp"
    ]._serialized_options = b"\202\265\030!timestamp to map to a key - STime"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "remember_login"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "remember_login"
    ]._serialized_options = b"\202\265\030\ndeprecated"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "persistence"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "persistence"
    ]._serialized_options = (
        b"\202\265\030>whether we are requesting a persistent or an ephemeral session"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "website_id"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST.fields_by_name[
        "website_id"
    ]._serialized_options = (
        b"\202\265\030<(EMachineAuthWebDomain) identifier of client requesting auth"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "client_id"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "client_id"
    ]._serialized_options = (
        b"\202\265\0305unique identifier of requestor, also used for routing"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "request_id"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "request_id"
    ]._serialized_options = b"\202\265\030bunique request ID to be presented by requestor at poll time - must not be transferred or displayed"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "interval"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "interval"
    ]._serialized_options = b"\202\265\030Grefresh interval with which requestor should call PollAuthSessionStatus"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "allowed_confirmations"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "allowed_confirmations"
    ]._serialized_options = (
        b"\202\265\030?the confirmation types that will be able to confirm the request"
    )
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "steamid"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "steamid"
    ]._serialized_options = b"\202\265\030Ysteamid of the account logging in - will only be included if the credentials were correct"
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "weak_token"
    ]._options = None
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE.fields_by_name[
        "weak_token"
    ]._serialized_options = b"\202\265\030bpartial-authentication token - limited lifetime and scope, included only if credentials were valid"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST.fields_by_name[
        "token_to_revoke"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST.fields_by_name[
        "token_to_revoke"
    ]._serialized_options = b"\202\265\030HIf this is set to a token owned by this user, that token will be retired"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "new_client_id"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "new_client_id"
    ]._serialized_options = (
        b"\202\265\030.if challenge is old, this is the new client id"
    )
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "new_challenge_url"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "new_challenge_url"
    ]._serialized_options = b"\202\265\030Vif challenge is old, this is the new challenge ID to re-render for mobile confirmation"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "refresh_token"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "refresh_token"
    ]._serialized_options = b"\202\265\030Fif login has been confirmed, this is the requestor's new refresh token"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "access_token"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "access_token"
    ]._serialized_options = b"\202\265\030Mif login has been confirmed, this is a new token subordinate to refresh_token"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "had_remote_interaction"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "had_remote_interaction"
    ]._serialized_options = b"\202\265\030awhether or not the auth session appears to have had remote interaction from a potential confirmer"
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "account_name"
    ]._options = None
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE.fields_by_name[
        "account_name"
    ]._serialized_options = (
        b"\202\265\030;account name of authenticating account, for use by UI layer"
    )
    _CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST.fields_by_name[
        "client_id"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST.fields_by_name[
        "client_id"
    ]._serialized_options = (
        b"\202\265\0300client ID from scanned QR Code, used for routing"
    )
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name["ip"]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "ip"
    ]._serialized_options = b"\202\265\030\027IP address of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "geoloc"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "geoloc"
    ]._serialized_options = b"\202\265\030\030geoloc info of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name["city"]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "city"
    ]._serialized_options = b"\202\265\030\021city of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name["state"]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "state"
    ]._serialized_options = b"\202\265\030\022state of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "country"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "country"
    ]._serialized_options = b"\202\265\030\024country of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "platform_type"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "platform_type"
    ]._serialized_options = b"\202\265\030\032platform type of requestor"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "device_friendly_name"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "device_friendly_name"
    ]._serialized_options = b"\202\265\030\030name of requestor device"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "version"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "version"
    ]._serialized_options = b"\202\265\030\rversion field"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "login_history"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "login_history"
    ]._serialized_options = b"\202\265\030Dwhether the ip has previuously been used on the account successfully"
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "requestor_location_mismatch"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "requestor_location_mismatch"
    ]._serialized_options = (
        b"\202\265\030=whether the requestor location matches this requests location"
    )
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "high_usage_login"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "high_usage_login"
    ]._serialized_options = (
        b"\202\265\030/whether this login has seen high usage recently"
    )
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "requested_persistence"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE.fields_by_name[
        "requested_persistence"
    ]._serialized_options = (
        b"\202\265\0305session persistence requestor has indicated they want"
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "version"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "version"
    ]._serialized_options = b"\202\265\030\rversion field"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "client_id"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "client_id"
    ]._serialized_options = b"\202\265\030'pending client ID, from scanned QR Code"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "steamid"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "steamid"
    ]._serialized_options = b"\202\265\030\027user who wants to login"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "signature"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "signature"
    ]._serialized_options = b"\202\265\030CHMAC digest over {version,client_id,steamid} via user's private key"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "confirm"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "confirm"
    ]._serialized_options = (
        b"\202\265\030=Whether to confirm the login (true) or deny the login (false)"
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "persistence"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST.fields_by_name[
        "persistence"
    ]._serialized_options = (
        b"\202\265\030>whether we are requesting a persistent or an ephemeral session"
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "client_id"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "client_id"
    ]._serialized_options = b"\202\265\030+pending client ID, from initialized session"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "steamid"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "steamid"
    ]._serialized_options = b"\202\265\030\027user who wants to login"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "code"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "code"
    ]._serialized_options = b"\202\265\030\021confirmation code"
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "code_type"
    ]._options = None
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST.fields_by_name[
        "code_type"
    ]._serialized_options = b"\202\265\030\031type of confirmation code"
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE.fields_by_name[
        "client_ids"
    ]._options = None
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE.fields_by_name[
        "client_ids"
    ]._serialized_options = (
        b"\202\265\0305unique identifier of requestor, also used for routing"
    )
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "steamid"
    ]._options = None
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "steamid"
    ]._serialized_options = b"\202\265\030\037Steam ID of the user to migrate"
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "token"
    ]._options = None
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "token"
    ]._serialized_options = b"\202\265\030\023WG Token to migrate"
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "signature"
    ]._options = None
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST.fields_by_name[
        "signature"
    ]._serialized_options = (
        b"\202\265\0306Signature over the wg token using the user's 2FA token"
    )
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST.fields_by_name[
        "steamid"
    ]._options = None
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST.fields_by_name[
        "steamid"
    ]._serialized_options = b"\202\265\030*SteamID of the account to query (required)"
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST.fields_by_name[
        "include_revoked_tokens"
    ]._options = None
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST.fields_by_name[
        "include_revoked_tokens"
    ]._serialized_options = (
        b"\202\265\0308Includes tokens that are revoked or expired in the query"
    )
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST.fields_by_name[
        "token_id"
    ]._options = None
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST.fields_by_name[
        "token_id"
    ]._serialized_options = b"\202\265\030+Token ID of the token to look up (required)"
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST.fields_by_name[
        "token_id"
    ]._options = None
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST.fields_by_name[
        "token_id"
    ]._serialized_options = b"\202\265\030*Token ID of the token to revoke (required)"
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST.fields_by_name[
        "token_id"
    ]._options = None
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST.fields_by_name[
        "token_id"
    ]._serialized_options = (
        b"\202\265\0303Token ID of the token to get history for (required)"
    )
    _AUTHENTICATION._options = None
    _AUTHENTICATION._serialized_options = b"\202\265\030\026Authentication Service"
    _AUTHENTICATION.methods_by_name["GetPasswordRSAPublicKey"]._options = None
    _AUTHENTICATION.methods_by_name[
        "GetPasswordRSAPublicKey"
    ]._serialized_options = b"\202\265\030KFetches RSA public key to use to encrypt passwords for a given account name"
    _AUTHENTICATION.methods_by_name["BeginAuthSessionViaQR"]._options = None
    _AUTHENTICATION.methods_by_name[
        "BeginAuthSessionViaQR"
    ]._serialized_options = b"\202\265\030\034start authentication process"
    _AUTHENTICATION.methods_by_name["BeginAuthSessionViaCredentials"]._options = None
    _AUTHENTICATION.methods_by_name[
        "BeginAuthSessionViaCredentials"
    ]._serialized_options = b"\202\265\030\034start authentication process"
    _AUTHENTICATION.methods_by_name["PollAuthSessionStatus"]._options = None
    _AUTHENTICATION.methods_by_name[
        "PollAuthSessionStatus"
    ]._serialized_options = b'\202\265\030"poll during authentication process'
    _AUTHENTICATION.methods_by_name["GetAuthSessionInfo"]._options = None
    _AUTHENTICATION.methods_by_name[
        "GetAuthSessionInfo"
    ]._serialized_options = b"\202\265\030Yget metadata of specific auth session, this will also implicitly bind the calling account"
    _AUTHENTICATION.methods_by_name[
        "UpdateAuthSessionWithMobileConfirmation"
    ]._options = None
    _AUTHENTICATION.methods_by_name[
        "UpdateAuthSessionWithMobileConfirmation"
    ]._serialized_options = (
        b"\202\265\0300approve an authentication session via mobile 2fa"
    )
    _AUTHENTICATION.methods_by_name[
        "UpdateAuthSessionWithSteamGuardCode"
    ]._options = None
    _AUTHENTICATION.methods_by_name[
        "UpdateAuthSessionWithSteamGuardCode"
    ]._serialized_options = (
        b"\202\265\0306approve an authentication session via steam guard code"
    )
    _AUTHENTICATION.methods_by_name["GenerateAccessTokenForApp"]._options = None
    _AUTHENTICATION.methods_by_name[
        "GenerateAccessTokenForApp"
    ]._serialized_options = b"\202\265\030oGiven a refresh token for a client app audience (e.g. desktop client / mobile client), generate an access token"
    _AUTHENTICATION.methods_by_name["GetAuthSessionsForAccount"]._options = None
    _AUTHENTICATION.methods_by_name[
        "GetAuthSessionsForAccount"
    ]._serialized_options = b"\202\265\030LGets all active auth sessions for an account for reference by the mobile app"
    _AUTHENTICATION.methods_by_name["MigrateMobileSession"]._options = None
    _AUTHENTICATION.methods_by_name[
        "MigrateMobileSession"
    ]._serialized_options = b"\202\265\030iMigrates a WG token to an access and refresh token using a signature generated with the user's 2FA secret"
    _AUTHENTICATIONSUPPORT._options = None
    _AUTHENTICATIONSUPPORT._serialized_options = (
        b"\202\265\030\036Authentication Support Service"
    )
    _AUTHENTICATIONSUPPORT.methods_by_name[
        "QueryRefreshTokensByAccount"
    ]._options = None
    _AUTHENTICATIONSUPPORT.methods_by_name[
        "QueryRefreshTokensByAccount"
    ]._serialized_options = b"\202\265\030GAsks the server for a list of refresh tokens associated with an account"
    _AUTHENTICATIONSUPPORT.methods_by_name["QueryRefreshTokenByID"]._options = None
    _AUTHENTICATIONSUPPORT.methods_by_name[
        "QueryRefreshTokenByID"
    ]._serialized_options = b"\202\265\030GAsks the server for a list of refresh tokens associated with an account"
    _AUTHENTICATIONSUPPORT.methods_by_name["RevokeToken"]._options = None
    _AUTHENTICATIONSUPPORT.methods_by_name[
        "RevokeToken"
    ]._serialized_options = b"\202\265\030\033Revokes a user's auth token"
    _AUTHENTICATIONSUPPORT.methods_by_name["GetTokenHistory"]._options = None
    _AUTHENTICATIONSUPPORT.methods_by_name[
        "GetTokenHistory"
    ]._serialized_options = (
        b"\202\265\030.Gets the audit history for a user's auth token"
    )
    _CLOUDGAMING._options = None
    _CLOUDGAMING._serialized_options = (
        b"\202\265\030)Methods for Steam cloud gaming operations"
    )
    _CLOUDGAMING.methods_by_name["CreateNonce"]._options = None
    _CLOUDGAMING.methods_by_name[
        "CreateNonce"
    ]._serialized_options = (
        b"\202\265\0301Create a nonce for a cloud gaming service session"
    )
    _CLOUDGAMING.methods_by_name["GetTimeRemaining"]._options = None
    _CLOUDGAMING.methods_by_name[
        "GetTimeRemaining"
    ]._serialized_options = (
        b"\202\265\030<Get the amount of streaming time remaining for a set of apps"
    )
    _EAUTHTOKENPLATFORMTYPE._serialized_start = 8301
    _EAUTHTOKENPLATFORMTYPE._serialized_end = 8486
    _EAUTHSESSIONGUARDTYPE._serialized_start = 8489
    _EAUTHSESSIONGUARDTYPE._serialized_end = 8799
    _EAUTHSESSIONSECURITYHISTORY._serialized_start = 8802
    _EAUTHSESSIONSECURITYHISTORY._serialized_end = 8974
    _EAUTHTOKENSTATE._serialized_start = 8977
    _EAUTHTOKENSTATE._serialized_end = 9209
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST._serialized_start = 125
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_REQUEST._serialized_end = 250
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE._serialized_start = 253
    _CAUTHENTICATION_GETPASSWORDRSAPUBLICKEY_RESPONSE._serialized_end = 466
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_REQUEST._serialized_start = 469
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_REQUEST._serialized_end = 628
    _CAUTHENTICATION_ALLOWEDCONFIRMATION._serialized_start = 631
    _CAUTHENTICATION_ALLOWEDCONFIRMATION._serialized_end = 1001
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE._serialized_start = 1004
    _CAUTHENTICATION_BEGINAUTHSESSIONVIAQR_RESPONSE._serialized_end = 1629
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST._serialized_start = 1632
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_REQUEST._serialized_end = 2241
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE._serialized_start = 2244
    _CAUTHENTICATION_BEGINAUTHSESSIONVIACREDENTIALS_RESPONSE._serialized_end = 2973
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST._serialized_start = 2976
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_REQUEST._serialized_end = 3165
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE._serialized_start = 3168
    _CAUTHENTICATION_POLLAUTHSESSIONSTATUS_RESPONSE._serialized_end = 3837
    _CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST._serialized_start = 3839
    _CAUTHENTICATION_GETAUTHSESSIONINFO_REQUEST._serialized_end = 3956
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE._serialized_start = 3959
    _CAUTHENTICATION_GETAUTHSESSIONINFO_RESPONSE._serialized_end = 4914
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST._serialized_start = 4917
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_REQUEST._serialized_end = (
        5457
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_RESPONSE._serialized_start = 5459
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHMOBILECONFIRMATION_RESPONSE._serialized_end = 5525
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST._serialized_start = (
        5528
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_REQUEST._serialized_end = 5847
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_RESPONSE._serialized_start = (
        5849
    )
    _CAUTHENTICATION_UPDATEAUTHSESSIONWITHSTEAMGUARDCODE_RESPONSE._serialized_end = 5911
    _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_REQUEST._serialized_start = 5913
    _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_REQUEST._serialized_end = 6005
    _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_RESPONSE._serialized_start = 6007
    _CAUTHENTICATION_ACCESSTOKEN_GENERATEFORAPP_RESPONSE._serialized_end = 6082
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_REQUEST._serialized_start = 6084
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_REQUEST._serialized_end = 6135
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE._serialized_start = 6138
    _CAUTHENTICATION_GETAUTHSESSIONSFORACCOUNT_RESPONSE._serialized_end = 6269
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST._serialized_start = 6272
    _CAUTHENTICATION_MIGRATEMOBILESESSION_REQUEST._serialized_end = 6491
    _CAUTHENTICATION_MIGRATEMOBILESESSION_RESPONSE._serialized_start = 6493
    _CAUTHENTICATION_MIGRATEMOBILESESSION_RESPONSE._serialized_end = 6585
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST._serialized_start = 6588
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_REQUEST._serialized_end = 6807
    _CSUPPORTREFRESHTOKENDESCRIPTION._serialized_start = 6810
    _CSUPPORTREFRESHTOKENDESCRIPTION._serialized_end = 7081
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_RESPONSE._serialized_start = (
        7083
    )
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENSBYACCOUNT_RESPONSE._serialized_end = 7202
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST._serialized_start = 7204
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_REQUEST._serialized_end = 7325
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_RESPONSE._serialized_start = 7327
    _CAUTHENTICATIONSUPPORT_QUERYREFRESHTOKENBYID_RESPONSE._serialized_end = 7440
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST._serialized_start = 7442
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_REQUEST._serialized_end = 7552
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_RESPONSE._serialized_start = 7554
    _CAUTHENTICATIONSUPPORT_REVOKETOKEN_RESPONSE._serialized_end = 7599
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST._serialized_start = 7601
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_REQUEST._serialized_end = 7724
    _CSUPPORTREFRESHTOKENAUDIT._serialized_start = 7726
    _CSUPPORTREFRESHTOKENAUDIT._serialized_end = 7826
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_RESPONSE._serialized_start = 7828
    _CAUTHENTICATIONSUPPORT_GETTOKENHISTORY_RESPONSE._serialized_end = 7922
    _CCLOUDGAMING_CREATENONCE_REQUEST._serialized_start = 7924
    _CCLOUDGAMING_CREATENONCE_REQUEST._serialized_end = 7991
    _CCLOUDGAMING_CREATENONCE_RESPONSE._serialized_start = 7993
    _CCLOUDGAMING_CREATENONCE_RESPONSE._serialized_end = 8059
    _CCLOUDGAMING_GETTIMEREMAINING_REQUEST._serialized_start = 8061
    _CCLOUDGAMING_GETTIMEREMAINING_REQUEST._serialized_end = 8138
    _CCLOUDGAMING_TIMEREMAINING._serialized_start = 8140
    _CCLOUDGAMING_TIMEREMAINING._serialized_end = 8210
    _CCLOUDGAMING_GETTIMEREMAINING_RESPONSE._serialized_start = 8212
    _CCLOUDGAMING_GETTIMEREMAINING_RESPONSE._serialized_end = 8298
    _AUTHENTICATION._serialized_start = 9212
    _AUTHENTICATION._serialized_end = 11337
    _AUTHENTICATIONSUPPORT._serialized_start = 11340
    _AUTHENTICATIONSUPPORT._serialized_end = 12156
    _CLOUDGAMING._serialized_start = 12159
    _CLOUDGAMING._serialized_end = 12529
# @@protoc_insertion_point(module_scope)
