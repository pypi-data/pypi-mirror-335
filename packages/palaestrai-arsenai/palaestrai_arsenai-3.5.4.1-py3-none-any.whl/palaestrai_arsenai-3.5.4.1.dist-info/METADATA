Metadata-Version: 2.4
Name: palaestrai-arsenai
Version: 3.5.4.1
Summary: Adversarial Resilience Learning Design of Experiments.
Author-email: The ARL Developers <stephan.balduin@offis.de>
Project-URL: Homepage, http://docs.palaestr.ai
Project-URL: Bug Tracker, https://gitlab.com/arl2/palaestrai-arsenai/-/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: doepy
Requires-Dist: ruamel.yaml
Requires-Dist: palaestrai~=3.5.0
Provides-Extra: dev
Requires-Dist: twine; extra == "dev"
Requires-Dist: setuptools; extra == "dev"
Requires-Dist: black==22.3.0; extra == "dev"
Requires-Dist: build; extra == "dev"
Dynamic: license-file

# Adversarial Resilience Learning --- Design of Experiments


## Introduction

Reproducibility of scientific experiments is more important than ever.
The Adversarial Resilience Learning -- Design of Experiments Suite *arsenAI* serves exactly this purpose.
It also enables to test different combinations of agents and environments in *palaestrAI*.

## Installation

ArsenAI is written in Python and available on [pypi.org](https://pypi.org/project/palaestrai-arsenai/).
A virtual environment is recommended. 
To install arsenAI, type:

```bash
pip install palaestrai-arsenai
```

To execute experiment runs, you also need palaestrAI.

## Usage

In the sources of arsenAI, there is an `example_experiment.yml` file. 
You find it in the folder tests/fixtures/. 
Download this file and save it to your current working directory.
To use arsenAI, simply type

```bash
arsenai generate ./example_experiment.yml
```

An output folder will be created (default: (current working directory)/_outputs)).
After the arsenAI command has finished, you will find palaestrAI run files and that directory, which can be executed with 
```
$ palaestrai start _outputs/Dummy\ Experiment_run-0.yml
```

You can copy the example file and modify it to your needs.

## Documentation

In the future, you will find a more comprehensive documentation on [docs.palaestr.ai](http://docs.palaestr.ai/experiments.html) 

## Copyright & Authors

All source code, except where otherwise mentioned, is Copyright (C) 2020, 2021, 2022 OFFIS e.V.
Contributing authors are listed in order of their appearance in the file `CONTRIBUTING.md`.



