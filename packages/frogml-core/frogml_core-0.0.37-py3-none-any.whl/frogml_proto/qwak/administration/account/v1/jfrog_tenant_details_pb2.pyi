"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class JfrogTenantDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TENANT_ID_FIELD_NUMBER: builtins.int
    DEFAULT_JFROG_PROJECT_DETAILS_FIELD_NUMBER: builtins.int
    JFROG_TENANT_CONFIGURATION_FIELD_NUMBER: builtins.int
    tenant_id: builtins.str
    """The JFrog tenant's ID"""
    @property
    def default_jfrog_project_details(self) -> global___JfrogProjectDetails:
        """JFrog project details"""
    @property
    def jfrog_tenant_configuration(self) -> global___JFrogTenantConfiguration:
        """The JFrog tenant's configuration"""
    def __init__(
        self,
        *,
        tenant_id: builtins.str = ...,
        default_jfrog_project_details: global___JfrogProjectDetails | None = ...,
        jfrog_tenant_configuration: global___JFrogTenantConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_jfrog_project_details", b"default_jfrog_project_details", "jfrog_tenant_configuration", b"jfrog_tenant_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_jfrog_project_details", b"default_jfrog_project_details", "jfrog_tenant_configuration", b"jfrog_tenant_configuration", "tenant_id", b"tenant_id"]) -> None: ...

global___JfrogTenantDetails = JfrogTenantDetails

class JFrogTenantConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEFAULT_JFROG_PROJECT_DETAILS_FIELD_NUMBER: builtins.int
    @property
    def default_jfrog_project_details(self) -> global___JfrogProjectDetails:
        """JFrog project details"""
    def __init__(
        self,
        *,
        default_jfrog_project_details: global___JfrogProjectDetails | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_jfrog_project_details", b"default_jfrog_project_details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_jfrog_project_details", b"default_jfrog_project_details"]) -> None: ...

global___JFrogTenantConfiguration = JFrogTenantConfiguration

class JfrogProjectDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_KEY_FIELD_NUMBER: builtins.int
    project_key: builtins.str
    """The JFrog project's key"""
    def __init__(
        self,
        *,
        project_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_key", b"project_key"]) -> None: ...

global___JfrogProjectDetails = JfrogProjectDetails

class JfrogTenantSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TENANT_ID_FIELD_NUMBER: builtins.int
    DEFAULT_PROJECT_SPEC_FIELD_NUMBER: builtins.int
    tenant_id: builtins.str
    """The JFrog tenant's ID"""
    @property
    def default_project_spec(self) -> global___JfrogProjectSpec:
        """The JFrog tenant's default project details"""
    def __init__(
        self,
        *,
        tenant_id: builtins.str = ...,
        default_project_spec: global___JfrogProjectSpec | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_project_spec", b"default_project_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_project_spec", b"default_project_spec", "tenant_id", b"tenant_id"]) -> None: ...

global___JfrogTenantSpec = JfrogTenantSpec

class JfrogProjectSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_KEY_FIELD_NUMBER: builtins.int
    project_key: builtins.str
    """The JFrog project's key"""
    def __init__(
        self,
        *,
        project_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_key", b"project_key"]) -> None: ...

global___JfrogProjectSpec = JfrogProjectSpec
