# coding: utf-8

"""
    Hightop API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.legos_get_response_legos_inner_opportunities_inner_vaults_inner import LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner

class TestLegosGetResponseLegosInnerOpportunitiesInnerVaultsInner(unittest.TestCase):
    """LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner:
        """Test LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner`
        """
        model = LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner()
        if include_optional:
            return LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner(
                address = None,
                name = '',
                apy = 1.337,
                tvl = '',
                description = '',
                number_of_holders = 1.337,
                score = 1.337
            )
        else:
            return LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner(
                address = None,
        )
        """

    def testLegosGetResponseLegosInnerOpportunitiesInnerVaultsInner(self):
        """Test LegosGetResponseLegosInnerOpportunitiesInnerVaultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
