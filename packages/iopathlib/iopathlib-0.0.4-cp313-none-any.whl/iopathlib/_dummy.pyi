# This file is automatically generated. See: sources/iopathlib/_api.py
# flake8: noqa F401
# mypy: ignore_missing_imports=False
# pyright: reportMissingImports=false
# pylint: skip-file

from collections.abc import Callable
from io import IOBase
from pathlib._local import Path
from typing import Any

from iopathlib._types import PathType
from iopathlib.handlers._base import PathHandler

DEFAULT_EXPORTS: frozenset[str]

def async_close(kwargs: Any) -> bool: ...
def async_join(paths: str, kwargs: Any) -> bool: ...
def copy(
    src_path: PathType,
    dst_path: PathType,
    overwrite: bool,
    kwargs: Any,
) -> bool: ...
def copy_from_local(
    local_path: str | Path,
    dst_path: PathType,
    overwrite: bool,
    kwargs: Any,
) -> bool: ...
def exists(path: PathType, kwargs: Any) -> bool: ...
def get_handler(path: PathType) -> PathHandler: ...
def get_local_path(path: PathType, force: bool, kwargs: Any) -> Path: ...
def isdir(path: PathType, kwargs: Any) -> bool: ...
def isfile(path: PathType, kwargs: Any) -> bool: ...
def ls(path: PathType, kwargs: Any) -> list: ...
def mkdirs(path: PathType, kwargs: Any) -> None: ...
def mv(src_path: PathType, dst_path: PathType, kwargs: Any) -> bool: ...
def open(path: PathType, mode: str, buffering: int, kwargs: Any) -> Any: ...
def opena(
    path: PathType,
    mode: str,
    buffering: int,
    callback_after_file_close: Callable[[None], None] | None,
    kwargs: Any,
) -> IOBase: ...
def register_handler(handler: PathHandler, allow_override: bool) -> None: ...
def rm(path: PathType, kwargs: Any) -> None: ...
def set_cwd(path: str | None, kwargs: Any) -> bool: ...
def set_strict_kwargs_checking(enable: bool) -> None: ...
def symlink(src_path: PathType, dst_path: PathType, kwargs: Any) -> bool: ...
