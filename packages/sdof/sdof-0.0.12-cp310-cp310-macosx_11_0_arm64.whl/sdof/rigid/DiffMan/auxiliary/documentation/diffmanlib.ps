%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: enscript output
%%For: Kenth Engø
%%Creator: GNU enscript 1.5.0
%%CreationDate: Thu Sep 14 15:27:54 2000
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.5 0
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch 
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall
  
  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if
  
  newfontname newfont definefont pop
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto 
  d_w 0 rlineto 
  0 d_h rlineto 
  d_w neg 0 rlineto 
  closepath
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate
    
    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def 
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill	  
	} if
      } for
    } for
    
  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto 
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } { 
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto 
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont 
    0 0 ul_h_ptsize 2 div sub moveto 
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint 
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-latin1 1.5 0
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/dotlessi     	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Helvetica-Narrow-Bold
/user_header_p false def
/HFpt_w 10 def
/HFpt_h 10 def
/Helvetica-Narrow-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier-Bold /F-gs-font MF
/F-gs-font findfont [7 0 0 7 0 0] makefont setfont
/#copies 1 def
%%BeginResource: procset Enscript-Header-enscript 1.5 0
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      d_header_w user_header_str stringwidth pop sub 2 div 
      d_header_h 8 div 5 mul moveto user_header_str show
    } if

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

  grestore
} def
%%EndResource
/d_page_w 547 def
/d_page_h 794 def
/d_header_x 0 def
/d_header_y 758 def
/d_header_w 547 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 547 def
/d_footer_h 0 def
/d_output_w 547 def
/d_output_h 758 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
24 24 translate
/pagenum 1 def
/fname (diffmanlib.doc) def
/fdir () def
/ftail (diffmanlib.doc) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (09/26/97) def
/modtimestr (11:07:55) def
%%EndPageSetup
do_header
5 748 M
(DIFFMAN LIBRARY STANDARDS:) s
5 740 M
(-------------------------) s
5 732 M
(PURPOSE:) s
5 724 M
(-------) s
5 716 M
(   This document describes the coding and library standards we will use) s
5 708 M
(   in the DiffMan project. ) s
5 692 M
(GENERAL GOAL: ) s
5 684 M
(------------) s
5 676 M
(   We want to construct a general library that is not very much depending ) s
5 668 M
(   on particularities of the MatLab programming language, and we have in ) s
5 660 M
(   mind that there might be a time where we want to implement DiffMan in) s
5 652 M
(   an other language \(e.g. C++ or Fortran90\). Furthermore, we want to) s
5 644 M
(   simplify the task of joining the two libraries DiffMan and SOPHUS in the ) s
5 636 M
(   future. In order to accomplish this, we will keep a documentation and programming ) s
5 628 M
(   style that is close to the SOPHUS standard. ) s
5 620 M
(   ) s
5 612 M
(CLASS AND DIRECTORY STRUCTURE:) s
5 604 M
(-----------------------------) s
5 596 M
(   There are many classes which have a general mathematical definition, but where there) s
5 588 M
(   are many concrete examples which differ in details. An example is the ) s
5 580 M
(   class "liealgebra", which has a general definition, and many concrete) s
5 572 M
(   versions such as e.g.: "laso" \(Lie algebra special orthogonal\), "lagl" ) s
5 564 M
(   \(Lie algebra general linear\) etc. In addition there are Lie algebras) s
5 556 M
(   that are constructed from simpler Lie algebras by standard constructions,) s
5 548 M
(   such as 'direct products' and 'semidirect products'.) s
5 540 M
(   ) s
5 532 M
(   The way we have arranged the Lie algebra classes serves as an) s
5 524 M
(   example of how other class hierarchies should be organized:) s
5 516 M
(   ) s
5 508 M
(   CLASS NAMES: All functions and classes will be implemented with lowercase) s
5 500 M
(   letters. In specifications we will often use a mix of lowercase and) s
5 492 M
(   uppercase letters to enhance readability, e.g. writing 'LieAlgebra' ) s
5 484 M
(   instead of 'liealgebra. Objects that in standard mathematical notation) s
5 476 M
(   differ by the case of the letters, e.g. 'SO' for the special orthogonal) s
5 468 M
(   Lie group and 'so' for the corresponding Lie algebra, will be ) s
5 460 M
(   discriminated by adding some extra letters. Thus concrete Lie algebras will be) s
5 452 M
(   preceeded with 'la' and Lie groups by 'lg'. Thus the class 'laso') s
5 444 M
(   is the special orthogonal Lie algebra and 'lgso' is the corresponding group.) s
5 436 M
(   ) s
5 428 M
(   DIRECTORIES: The directory diffman/liealgebra contains all liealgebra classes.) s
5 420 M
(   For each class, there is a corresponding subdirectory, ex: liealgebra/@laso, ) s
5 412 M
(   liealgebra/@lagl, liealgebra/@larn, etc.) s
5 404 M
(   ) s
5 396 M
(   VIRTUAL SUPERCLASS: The directory diffman/liealgebra/@liealgebra is a ) s
5 388 M
(   \(virtual\) superclass for all Liealgebras. This means that all other classes ) s
5 380 M
(   must have this as a superclass. 'Virtual' means that the elements of the class ) s
5 372 M
(   'liealgebra' contains no data. The superclass has several purposes:) s
5 364 M
(       - All liealgebras will have >> isa\(obj,'liealgebra'\) == 1) s
5 356 M
(       - We get a directory where we can put all general functions on ) s
5 348 M
(         Liealgebras that can be programmed for all specific Liealgebras.) s
5 340 M
(         ) s
5 332 M
(    DYNAMIC SUBTYPING: In many cases it is simplest to implement a family) s
5 324 M
(    of Lie algebras as a single object. For example, the class 'laso' is) s
5 316 M
(    really a family of Liealgebras, so\(n\), one algebra for each n>0.) s
5 308 M
(    Thus in this case the integer n serves as a dynamic subtyping of the) s
5 300 M
(    class. Generally, whenever a class has subtyping, we will call the) s
5 292 M
(    subtype information the SHAPE of the class. Thus in class laso, we have) s
5 284 M
(    a function 'getshape' which returns the integer n, and a function ) s
5 276 M
(    'setshape' that sets n. The type of the SHAPE information may differ from) s
5 268 M
(    class to class.) s
5 260 M
(    ) s
5 252 M
(    CLASS CREATORS: In order to simplify the programming of new classes as ) s
5 244 M
(    much as possible, we will only require the following simple rules for ) s
5 236 M
(    the creators in the class. Let 'aclass' denote the particular class, and ) s
5 228 M
(    'sclass' denote its superclass. \(For example, we could have 'aclass = laso' ) s
5 220 M
(    and 'sclass = liealgebra'.\)) s
5 212 M
(       1\) b = aclass; % default constructor) s
5 204 M
(          Calling the creator without arguments produces an element without) s
5 196 M
(          any particular data.) s
5 188 M
(       2\) b = sclass\(c,arg2,arg3,...\); where isa\(c,'aclass'\) == 1; ) s
5 180 M
(          This will always yield the same result as:) s
5 172 M
(          b = aclass\(c,arg2,arg3,...\); ) s
5 164 M
(          I.e. if the superclass constructor gets an element of a subclass ) s
5 156 M
(          as its first element, it will call the subclass constructor.) s
5 148 M
(          ) s
5 140 M
(    GET and SET FUNCTIONS: The above requirements for the creators are not ) s
5 132 M
(    sufficient to set properties in an object. If 'prop1' and 'prop2' are ) s
5 124 M
(    two properties that can be set in an object 'obj' in the class ) s
5 116 M
(    'aclass', then we require the existence of two functions:) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
24 24 translate
/pagenum 2 def
/fname (diffmanlib.doc) def
/fdir () def
/ftail (diffmanlib.doc) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (09/26/97) def
/modtimestr (11:07:55) def
%%EndPageSetup
do_header
5 748 M
(       setprop1\(obj,val1\);) s
5 740 M
(       setprop2\(obj,val2\);) s
5 732 M
(    These functions updates the two properties in the object 'obj' with ) s
5 724 M
(    the new values 'val1' and 'val2'. For each 'setxxx' function there is ) s
5 716 M
(    corresponding 'getxxx' function that returnes the same values, without ) s
5 708 M
(    altering the object.) s
5 700 M
(       val1 = getprop1\(obj\);) s
5 692 M
(       val2 = getprop2\(obj\);) s
5 684 M
(    It would be nice to have the matlab type 'get' and 'set' functions ) s
5 676 M
(    that we e.g. find in the handle-graphics routines, but these can be ) s
5 668 M
(    provided automatically at a later time if we have the simple setxxx ) s
5 660 M
(    and getxxx routines above.) s
5 652 M
(    ) s
5 644 M
(    PARAMETRIZED CLASSES: In many important instances a class is constructed from ) s
5 636 M
(    simpler classes. For example a Lie algebra can be constructed as the direct ) s
5 628 M
(    product of two Lie algebras. In these cases, we really would like to ) s
5 620 M
(    create a class:) s
5 612 M
(       class ladirprod<laa,lab>) s
5 604 M
(    that take two input classes as arguments. In some languages \(C++ for ) s
5 596 M
(    example\) there are language constructions for such parametrized ) s
5 588 M
(    classes \(template in C++\). Matlab does not have this ability, and we have to ) s
5 580 M
(    fake this functionality by a dynamic mechanism. The class ) s
5 572 M
(    liealgebra/@ladirprod shows how this should be done. Note that in the ) s
5 564 M
(    specification we keep the parametrized class concept even if it does ) s
5 556 M
(    not really exist in MatLab. This is to keep the basic concept clearer.) s
5 548 M
(    ) s
5 540 M
(DOCUMENTATION:) s
5 532 M
(-------------) s
5 524 M
(   The documentation standard is close to the SOPHUS standard. We do, ) s
5 516 M
(   however, write the specifications in ascii form rather than LaTeX. All ) s
5 508 M
(   specifications are written in an ascii file with the name ) s
5 500 M
(   'classname.doc'. This file is put in the directory @classname. A ) s
5 492 M
(   template document for the class specifications is found in the file ) s
5 484 M
(   'classdoc.doc'. We do not require any other documentation of the classes ) s
5 476 M
(   than these 'classname.doc' files, i.e. we do not require help ) s
5 468 M
(   information in the header of each routine. This may eventually be ) s
5 460 M
(   supplied later, if we find it convenient.) s
5 452 M
(   ) s
5 444 M
(   In the standard Matlab way, we _generally_ assume that functions take ) s
5 436 M
(   arguments that are transferred by value \(does not change\), and that any ) s
5 428 M
(   variables that change is on the left hand side of the assignment. The ) s
5 420 M
(   only exception from this rule is the 'setprop' functions, which updates ) s
5 412 M
(   the value of the first argument:) s
5 404 M
(      setprop\(update obj, observe value\);) s
5 396 M
(   An example m-file showing how this updating is done, is found in ) s
5 388 M
(   progex/setxxx.m) s
5 380 M
(      ) s
5 372 M
(   DIFFMAN STANDARD: There is a set of routines that _all_ classes should have. ) s
5 364 M
(   These are defined in the document 'diffmanstandard.doc'. Unless there is any ) s
5 356 M
(   special reason to explain how these routines work in a particular ) s
5 348 M
(   class, they are not documented in the class documentation.) s
5 340 M
(   ) s
5 332 M
(   SUPER and SUBCLASSES: Classes such as 'laso' and 'liealgebra' is in a ) s
5 324 M
(   subclass-superclass relationship. Operations that are defined in the ) s
5 316 M
(   superclass, are generally not repeated in the subclass, unless there is ) s
5 308 M
(   a particular reason to describe the properties of the routine in the ) s
5 300 M
(   subclass.) s
5 292 M
(      ) s
5 284 M
(Written by: Hans Munthe-Kaas, august 1997.) s
5 276 M
(Validated by:) s
5 268 M
(Accepted by:) s
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Times-Roman Courier-Bold 
%%+ font Helvetica-Narrow-Bold Times-Bold 
%%EOF
