# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Verify version matches tag
        run: |
          PROJECT_VERSION=$(grep -m 1 'version' pyproject.toml | cut -d '"' -f 2)
          TAG_VERSION=${{ github.event.release.tag_name }}
          
          # Remove v prefix if present in tag
          TAG_VERSION=${TAG_VERSION#v}
          
          echo "Project version from pyproject.toml: $PROJECT_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          # Verify versions match
          if [ "$PROJECT_VERSION" != "$TAG_VERSION" ]; then
            echo "ERROR: Version mismatch!"
            echo "Version in pyproject.toml ($PROJECT_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          
          echo "Version check passed: $PROJECT_VERSION matches $TAG_VERSION"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/project/simplelogin

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
