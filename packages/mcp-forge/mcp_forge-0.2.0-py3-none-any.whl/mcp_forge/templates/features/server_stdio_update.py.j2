"""{{ config.project_name }} MCP Server implementation."""
{% for import_line in import_lines %}
{{ import_line }}
{% endfor %}


def get_available_tools() -> List[Tool]:
    """Get list of all available tools."""
    return [
{% for tool in tools %}
        {{ tool }}(),
{% endfor %}
    ]


def main():
    """Entry point for the server."""
    mcp = FastMCP("{{ config.project_name }}")
    tool_service = ToolService()

    # Register all available tools
    tool_service.register_tools(get_available_tools())

    # Register MCP handlers for each tool
    for tool in get_available_tools():
        @mcp.tool(name=tool.name, description=tool.description)
        async def tool_handler(args: Dict[str, Any], tool_instance=tool) -> str:
            """Handle tool call."""
            result = await tool_service.execute_tool(tool_instance.name, args)
            return result.content[0].text

    mcp.run()


if __name__ == "__main__":
    main()
