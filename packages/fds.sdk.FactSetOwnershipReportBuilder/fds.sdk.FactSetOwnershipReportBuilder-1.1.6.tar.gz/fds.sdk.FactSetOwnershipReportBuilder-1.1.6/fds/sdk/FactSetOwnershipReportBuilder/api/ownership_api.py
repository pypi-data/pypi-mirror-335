"""
    FactSet Ownership API

    description.md  # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.FactSetOwnershipReportBuilder.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.FactSetOwnershipReportBuilder.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.FactSetOwnershipReportBuilder.exceptions import ApiException
from fds.sdk.FactSetOwnershipReportBuilder.model.error_response import ErrorResponse
from fds.sdk.FactSetOwnershipReportBuilder.model.error_with_meta_response import ErrorWithMetaResponse
from fds.sdk.FactSetOwnershipReportBuilder.model.response_holders import ResponseHolders
from fds.sdk.FactSetOwnershipReportBuilder.model.response_ultimate_parent import ResponseUltimateParent





class OwnershipApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_ownership_holders_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (ResponseHolders,), 400: (ErrorWithMetaResponse,), 403: (ErrorResponse,), 404: (ErrorResponse,), 500: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/holders',
                'operation_id': 'get_ownership_holders',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'asset_type',
                    'holder_type',
                    'entity_type',
                    'topn',
                    'date',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'asset_type',
                    'holder_type',
                    'entity_type',
                ],
                'validation': [
                    'id',
                    'date',
                ]
            },
            root_map={
                'validations': {
                    ('id',): {
                        'max_length': 12,
                    },
                    ('date',): {
                        'max_length': 10,
                    },
                },
                'allowed_values': {
                    ('asset_type',): {

                        "EQUITY": "EQUITY",
                        "DEBT": "DEBT"
                    },
                    ('holder_type',): {

                        "ALL_HOLDERS": "ALL_HOLDERS",
                        "BENEFICIAL_OWNERS": "BENEFICIAL_OWNERS",
                        "FUNDS": "FUNDS",
                        "INSTITUTIONS": "INSTITUTIONS",
                        "INSTITUTIONS_INSIDERS": "INSTITUTIONS_INSIDERS",
                        "INSIDERS_STAKEHOLDERS": "INSIDERS_STAKEHOLDERS"
                    },
                    ('entity_type',): {

                        "SECURITY": "SECURITY",
                        "COMPANY": "COMPANY"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'asset_type':
                        (str,),
                    'holder_type':
                        (str,),
                    'entity_type':
                        (str,),
                    'topn':
                        (str,),
                    'date':
                        (date,),
                },
                'attribute_map': {
                    'id': 'id',
                    'asset_type': 'asset_type',
                    'holder_type': 'holder_type',
                    'entity_type': 'entity_type',
                    'topn': 'topn',
                    'date': 'date',
                },
                'location_map': {
                    'id': 'query',
                    'asset_type': 'query',
                    'holder_type': 'query',
                    'entity_type': 'query',
                    'topn': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_ownership_ultimate_parent_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (ResponseUltimateParent,), 400: (ErrorWithMetaResponse,), 403: (ErrorResponse,), 404: (ErrorResponse,), 500: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/ultimate-parent',
                'operation_id': 'get_ownership_ultimate_parent',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'currency',
                    'attributes',
                    'period',
                    'holder_type',
                    'date',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'currency',
                    'attributes',
                    'period',
                    'holder_type',
                ],
                'validation': [
                    'id',
                    'attributes',
                    'date',
                ]
            },
            root_map={
                'validations': {
                    ('id',): {
                        'max_length': 12,
                    },
                    ('attributes',): {

                        'max_items': 40,
                    },
                    ('date',): {
                        'max_length': 10,
                    },
                },
                'allowed_values': {
                    ('currency',): {

                        "LOCAL": "LOCAL",
                        "AED": "AED",
                        "ARS": "ARS",
                        "ATS": "ATS",
                        "AUD": "AUD",
                        "BBD": "BBD",
                        "BDT": "BDT",
                        "BEF": "BEF",
                        "BHD": "BHD",
                        "BMD": "BMD",
                        "BOB": "BOB",
                        "BRL": "BRL",
                        "CAD": "CAD",
                        "CHF": "CHF",
                        "CLP": "CLP",
                        "CNY": "CNY",
                        "COP": "COP",
                        "CYP": "CYP",
                        "CZK": "CZK",
                        "DKK": "DKK",
                        "DOP": "DOP",
                        "EEK": "EEK",
                        "EGP": "EGP",
                        "ESP": "ESP",
                        "EUR": "EUR",
                        "FIM": "FIM",
                        "FRF": "FRF",
                        "GBP": "GBP",
                        "GHS": "GHS",
                        "GRD": "GRD",
                        "HKD": "HKD",
                        "HRK": "HRK",
                        "HUF": "HUF",
                        "IDR": "IDR",
                        "IEP": "IEP",
                        "ILS": "ILS",
                        "INR": "INR",
                        "ISK": "ISK",
                        "ITL": "ITL",
                        "JMD": "JMD",
                        "JOD": "JOD",
                        "JPY": "JPY",
                        "KES": "KES",
                        "KRW": "KRW",
                        "KWD": "KWD",
                        "KYD": "KYD",
                        "KZT": "KZT",
                        "LBP": "LBP",
                        "LKR": "LKR",
                        "LTL": "LTL",
                        "LUF": "LUF",
                        "LVL": "LVL",
                        "MAD": "MAD",
                        "MKD": "MKD",
                        "MNT": "MNT",
                        "MTL": "MTL",
                        "MUR": "MUR",
                        "MWK": "MWK",
                        "MXN": "MXN",
                        "MYR": "MYR",
                        "NAD": "NAD",
                        "NGN": "NGN",
                        "NLG": "NLG",
                        "NOK": "NOK",
                        "NZD": "NZD",
                        "OMR": "OMR",
                        "PAB": "PAB",
                        "PEN": "PEN",
                        "PHP": "PHP",
                        "PKR": "PKR",
                        "PLN": "PLN",
                        "PTE": "PTE",
                        "PYG": "PYG",
                        "QAR": "QAR",
                        "RUB": "RUB",
                        "SAR": "SAR",
                        "SEK": "SEK",
                        "SGD": "SGD",
                        "SIT": "SIT",
                        "SKK": "SKK",
                        "SZL": "SZL",
                        "THB": "THB",
                        "TND": "TND",
                        "TWD": "TWD",
                        "TZS": "TZS",
                        "UGX": "UGX",
                        "USD": "USD",
                        "VND": "VND",
                        "XAF": "XAF",
                        "ZAR": "ZAR"
                    },
                    ('attributes',): {

                        "PERCENTOWNERSHIP": "percentOwnership",
                        "POSITION": "position",
                        "POSITIONCHANGE": "positionChange",
                        "MARKETVALUE": "marketValue",
                        "MARKETVALUECHANGE": "marketValueChange",
                        "PERCENTPORTFOLIO": "percentPortfolio",
                        "REPORTDATE": "reportDate",
                        "SOURCE": "source",
                        "HOLDERID": "holderId",
                        "PERCENTOWNERSHIPCHANGE": "percentOwnershipChange",
                        "PERCENTPORTFOLIOCHANGE": "percentPortfolioChange",
                        "OPTIONSINDIRECTSHARES": "optionsIndirectShares",
                        "FULLYDILUTEDSHARES": "fullyDilutedShares",
                        "CONTACTNAME": "contactName",
                        "CONTACTPHONE": "contactPhone",
                        "CONTACTEMAIL": "contactEmail",
                        "CONTACTTITLE": "contactTitle",
                        "HOLDERREGION": "holderRegion",
                        "HOLDERSUBREGION": "holderSubRegion",
                        "HOLDERCOUNTRY": "holderCountry",
                        "HOLDERMETROREGION": "holderMetroRegion",
                        "HOLDERCITY": "holderCity",
                        "HOLDERSTATE": "holderState",
                        "HOLDERISFOREIGNORDOMESTIC": "holderIsForeignOrDomestic",
                        "HOLDERCAPGROUPSTYLE": "holderCapGroupStyle",
                        "HOLDERMANAGERSTYLE": "holderManagerStyle",
                        "HOLDERHOLDINGSSTYLES": "holderHoldingsStyles",
                        "HOLDERTURNOVER": "holderTurnover",
                        "HOLDERACTIVISMLEVEL": "holderActivismLevel",
                        "HOLDERULTIMATEPARENT": "holderUltimateParent",
                        "HOLDERASSETSUNDERMANAGEMENT": "holderAssetsUnderManagement",
                        "HOLDERGROUPLEVELCOUNT": "holderGroupLevelCount",
                        "HOLDERTYPE": "holderType",
                        "INVESTORTYPE": "investorType",
                        "INSTITUTIONORINSIDER": "institutionOrInsider",
                        "EQUITYASSETS": "equityAssets"
                    },
                    ('period',): {

                        "1M": "1m",
                        "3M": "3m",
                        "6M": "6m",
                        "12M": "12m",
                        "RECENT": "recent"
                    },
                    ('holder_type',): {

                        "ALLHOLDERS": "allHolders",
                        "BENEFICIALOWNERS": "beneficialOwners",
                        "FUNDS": "funds",
                        "INSTITUTIONS": "institutions",
                        "INSTITUTIONSINSIDERS": "institutionsInsiders",
                        "INSIDERSSTAKEHOLDERS": "insidersStakeholders"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'currency':
                        (str,),
                    'attributes':
                        ([str],),
                    'period':
                        (str,),
                    'holder_type':
                        (str,),
                    'date':
                        (date,),
                },
                'attribute_map': {
                    'id': 'id',
                    'currency': 'currency',
                    'attributes': 'attributes',
                    'period': 'period',
                    'holder_type': 'holderType',
                    'date': 'date',
                },
                'location_map': {
                    'id': 'query',
                    'currency': 'query',
                    'attributes': 'query',
                    'period': 'query',
                    'holder_type': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                    'attributes': 'multi',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_ownership_holders(
        self,
        id,
        **kwargs
    ) -> ResponseHolders:
        """Holders of a company or fund  # noqa: E501

        Holders of a company or fund  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Company or Fund Identifier

        Keyword Args:
            asset_type (str): Controls the Asset Type of the data returned. [optional] if omitted the server will use the default value of "EQUITY"
            holder_type (str): Controls the Holder Type of the data returned. [optional] if omitted the server will use the default value of "INSTITUTIONS"
            entity_type (str): Controls the type of Entity data returned. Defaults to Security data, but can also be used to display Company data.. [optional] if omitted the server will use the default value of "SECURITY"
            topn (str): Limits the number of holders returned based on their Market Value position in the security. Default is ALL, otherwise use a valid number above 0. . [optional]
            date (date): Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResponseHolders
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_ownership_holders_endpoint.call_with_http_info(**kwargs)

    def get_ownership_holders_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[ResponseHolders, int, typing.MutableMapping]:
        """Holders of a company or fund  # noqa: E501

        Holders of a company or fund  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Company or Fund Identifier

        Keyword Args:
            asset_type (str): Controls the Asset Type of the data returned. [optional] if omitted the server will use the default value of "EQUITY"
            holder_type (str): Controls the Holder Type of the data returned. [optional] if omitted the server will use the default value of "INSTITUTIONS"
            entity_type (str): Controls the type of Entity data returned. Defaults to Security data, but can also be used to display Company data.. [optional] if omitted the server will use the default value of "SECURITY"
            topn (str): Limits the number of holders returned based on their Market Value position in the security. Default is ALL, otherwise use a valid number above 0. . [optional]
            date (date): Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResponseHolders
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_ownership_holders_endpoint.call_with_http_info(**kwargs)

    def get_ownership_holders_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[ResponseHolders]":
        """Holders of a company or fund  # noqa: E501

        Holders of a company or fund  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Company or Fund Identifier

        Keyword Args:
            asset_type (str): Controls the Asset Type of the data returned. [optional] if omitted the server will use the default value of "EQUITY"
            holder_type (str): Controls the Holder Type of the data returned. [optional] if omitted the server will use the default value of "INSTITUTIONS"
            entity_type (str): Controls the type of Entity data returned. Defaults to Security data, but can also be used to display Company data.. [optional] if omitted the server will use the default value of "SECURITY"
            topn (str): Limits the number of holders returned based on their Market Value position in the security. Default is ALL, otherwise use a valid number above 0. . [optional]
            date (date): Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[ResponseHolders]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_ownership_holders_endpoint.call_with_http_info(**kwargs)

    def get_ownership_holders_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[ResponseHolders, int, typing.MutableMapping]]":
        """Holders of a company or fund  # noqa: E501

        Holders of a company or fund  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Company or Fund Identifier

        Keyword Args:
            asset_type (str): Controls the Asset Type of the data returned. [optional] if omitted the server will use the default value of "EQUITY"
            holder_type (str): Controls the Holder Type of the data returned. [optional] if omitted the server will use the default value of "INSTITUTIONS"
            entity_type (str): Controls the type of Entity data returned. Defaults to Security data, but can also be used to display Company data.. [optional] if omitted the server will use the default value of "SECURITY"
            topn (str): Limits the number of holders returned based on their Market Value position in the security. Default is ALL, otherwise use a valid number above 0. . [optional]
            date (date): Top Holders as of date expressed in YYYY-MM-DD format. Defaults to latest month-end close; non-month-end dates are converted to month-end dates.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(ResponseHolders, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_ownership_holders_endpoint.call_with_http_info(**kwargs)


    def get_ownership_ultimate_parent(
        self,
        id,
        **kwargs
    ) -> ResponseUltimateParent:
        """Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501

        Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Any valid FactSet identifier which points to a security.  This could be Ticker Region, Entity ID, CUSIP, or SEDOL. 

        Keyword Args:
            currency (str): Currency ISO code that any currency-based data should be returned in.  If excluded, the value will default to the special keyword \"LOCAL\" which will cause the currency-based values to be calculated in currency which is local to the exchange it is traded on. . [optional]
            attributes ([str]): The columns to be returned in the resulting table. [optional] if omitted the server will use the default value of ["percentOwnership","position","positionChange","marketValue","marketValueChange","percentPortfolio","reportDate","source","holderId"]
            period (str): The period over which we should return holdings for.. [optional] if omitted the server will use the default value of "6m"
            holder_type (str): The holder types which should be included in this table. [optional] if omitted the server will use the default value of "institutions"
            date (date): The date as of which this data should be returned. YYYY-MM-DD format. Defaults to current date.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResponseUltimateParent
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_ownership_ultimate_parent_endpoint.call_with_http_info(**kwargs)

    def get_ownership_ultimate_parent_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[ResponseUltimateParent, int, typing.MutableMapping]:
        """Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501

        Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Any valid FactSet identifier which points to a security.  This could be Ticker Region, Entity ID, CUSIP, or SEDOL. 

        Keyword Args:
            currency (str): Currency ISO code that any currency-based data should be returned in.  If excluded, the value will default to the special keyword \"LOCAL\" which will cause the currency-based values to be calculated in currency which is local to the exchange it is traded on. . [optional]
            attributes ([str]): The columns to be returned in the resulting table. [optional] if omitted the server will use the default value of ["percentOwnership","position","positionChange","marketValue","marketValueChange","percentPortfolio","reportDate","source","holderId"]
            period (str): The period over which we should return holdings for.. [optional] if omitted the server will use the default value of "6m"
            holder_type (str): The holder types which should be included in this table. [optional] if omitted the server will use the default value of "institutions"
            date (date): The date as of which this data should be returned. YYYY-MM-DD format. Defaults to current date.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResponseUltimateParent
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_ownership_ultimate_parent_endpoint.call_with_http_info(**kwargs)

    def get_ownership_ultimate_parent_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[ResponseUltimateParent]":
        """Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501

        Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Any valid FactSet identifier which points to a security.  This could be Ticker Region, Entity ID, CUSIP, or SEDOL. 

        Keyword Args:
            currency (str): Currency ISO code that any currency-based data should be returned in.  If excluded, the value will default to the special keyword \"LOCAL\" which will cause the currency-based values to be calculated in currency which is local to the exchange it is traded on. . [optional]
            attributes ([str]): The columns to be returned in the resulting table. [optional] if omitted the server will use the default value of ["percentOwnership","position","positionChange","marketValue","marketValueChange","percentPortfolio","reportDate","source","holderId"]
            period (str): The period over which we should return holdings for.. [optional] if omitted the server will use the default value of "6m"
            holder_type (str): The holder types which should be included in this table. [optional] if omitted the server will use the default value of "institutions"
            date (date): The date as of which this data should be returned. YYYY-MM-DD format. Defaults to current date.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[ResponseUltimateParent]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_ownership_ultimate_parent_endpoint.call_with_http_info(**kwargs)

    def get_ownership_ultimate_parent_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[ResponseUltimateParent, int, typing.MutableMapping]]":
        """Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501

        Get FactSet's ownership breakdown about a specific security.  The returned table will display the institutions, insiders, funds, and beneficial owners that comprise the ownership of the provided security.  These holders will be grouped by the ultimate parent in their entity structure.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Any valid FactSet identifier which points to a security.  This could be Ticker Region, Entity ID, CUSIP, or SEDOL. 

        Keyword Args:
            currency (str): Currency ISO code that any currency-based data should be returned in.  If excluded, the value will default to the special keyword \"LOCAL\" which will cause the currency-based values to be calculated in currency which is local to the exchange it is traded on. . [optional]
            attributes ([str]): The columns to be returned in the resulting table. [optional] if omitted the server will use the default value of ["percentOwnership","position","positionChange","marketValue","marketValueChange","percentPortfolio","reportDate","source","holderId"]
            period (str): The period over which we should return holdings for.. [optional] if omitted the server will use the default value of "6m"
            holder_type (str): The holder types which should be included in this table. [optional] if omitted the server will use the default value of "institutions"
            date (date): The date as of which this data should be returned. YYYY-MM-DD format. Defaults to current date.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(ResponseUltimateParent, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_ownership_ultimate_parent_endpoint.call_with_http_info(**kwargs)


