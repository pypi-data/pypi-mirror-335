// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <rev\SparkAbsoluteEncoder.h>

#include <rpygen/rev__AbsoluteEncoder.hpp>

namespace rev::spark {

template <typename CfgBase = rpygen::EmptyTrampolineCfg>
struct PyTrampolineCfg_SparkAbsoluteEncoder :
  rev::PyTrampolineCfg_AbsoluteEncoder<
  CfgBase
  >
{
  using Base = rev::spark::SparkAbsoluteEncoder;
  using override_base_KGetPosition_v = rev::spark::SparkAbsoluteEncoder;
  using override_base_KGetVelocity_v = rev::spark::SparkAbsoluteEncoder;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_SparkAbsoluteEncoder =
  rev::PyTrampoline_AbsoluteEncoder<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_SparkAbsoluteEncoder : PyTrampolineBase_SparkAbsoluteEncoder<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_SparkAbsoluteEncoder<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_SparkAbsoluteEncoder;

  #ifndef RPYGEN_DISABLE_KGetPosition_v
    double GetPosition() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_KGetPosition_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(double), LookupBase,
        "getPosition", );
      return CxxCallBase::GetPosition();
    }
  #endif

  #ifndef RPYGEN_DISABLE_KGetVelocity_v
    double GetVelocity() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_KGetVelocity_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(double), LookupBase,
        "getVelocity", );
      return CxxCallBase::GetVelocity();
    }
  #endif
};

}; // namespace rev::spark
