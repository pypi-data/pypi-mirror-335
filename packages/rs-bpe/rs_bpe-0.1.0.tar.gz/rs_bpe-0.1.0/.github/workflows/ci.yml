name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install UV and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv
        uv venv .venv
    - name: Build and install
      run: |
        source .venv/bin/activate 
        uv pip install maturin tomli 
        maturin develop --release
      shell: bash
    - name: Test bindings imports
      run: |
        source .venv/bin/activate
        python tests/test_import.py
      shell: bash

  # Build test wheels for verification but don't publish
  linux-wheels-test:
    name: Build test Linux wheels
    runs-on: ubuntu-latest
    needs: [test]
    # Only run on main branch pushes, not PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        target: [x86_64]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv .venv
          source .venv/bin/activate
          uv pip install maturin tomli
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: '2014'
          args: --release --out dist --interpreter ${{ matrix.python-version }}