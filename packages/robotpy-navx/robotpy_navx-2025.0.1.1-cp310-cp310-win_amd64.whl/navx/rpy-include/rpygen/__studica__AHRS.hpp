// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <studica\AHRS.h>

#include <wpi/sendable/SendableHelper.h>

#include <rpygen/nt__NTSendable.hpp>

namespace studica {

template <typename CfgBase = rpygen::EmptyTrampolineCfg>
struct PyTrampolineCfg_AHRS :
  nt::PyTrampolineCfg_NTSendable<
  CfgBase
  >
{
  using Base = ::studica::AHRS;
  using override_base_InitSendable_RTNTSendableBuilder = ::studica::AHRS;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_AHRS =
  nt::PyTrampoline_NTSendable<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_AHRS : PyTrampolineBase_AHRS<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_AHRS<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_AHRS;
  using BoardYawAxis [[maybe_unused]] = typename ::studica::AHRS::BoardYawAxis;
  using BoardAxis [[maybe_unused]] = typename ::studica::AHRS::BoardAxis;
  using NavXComType [[maybe_unused]] = typename ::studica::AHRS::NavXComType;
  using NavXUpdateRate [[maybe_unused]] = typename ::studica::AHRS::NavXUpdateRate;

  #ifndef RPYGEN_DISABLE_InitSendable_RTNTSendableBuilder
    void InitSendable(nt::NTSendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTNTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace ::studica
