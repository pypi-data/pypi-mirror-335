"use strict";(self.webpackChunka_jupyterlab_session=self.webpackChunka_jupyterlab_session||[]).push([[329],{329:(e,t,o)=>{o.r(t),o.d(t,{IJupyterLiteSession:()=>l,default:()=>d});var n=o(979),r=o(916);const i={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let a;const s=new Uint8Array(16),c=[];for(let e=0;e<256;++e)c.push((e+256).toString(16).slice(1));const u=function(e,t,o){if(i.randomUUID&&!t&&!e)return i.randomUUID();const n=(e=e||{}).random??e.rng?.()??function(){if(!a){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");a=crypto.getRandomValues.bind(crypto)}return a(s)}();if(n.length<16)throw new Error("Random bytes length must be >= 16");if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){if((o=o||0)<0||o+16>t.length)throw new RangeError(`UUID byte range ${o}:${o+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[o+e]=n[e];return t}return function(e,t=0){return(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase()}(n)},l=new(o(262).Token)("a-jupyterlite-session:IJupyterLiteSession"),d={id:"a-jupyterlite-session:plugin",autoStart:!0,provides:l,requires:[r.IDefaultDrive],activate:async(e,t)=>{const o=".sessions",r="README.md",i="requirements.txt",a=t;await a.ready,console.log("JupyterLite extension a-jupyterlite-session is activated!");const s=a._storage,c=new Date;await s.getItem(o)||await s.setItem(o,{name:o,path:o,last_modified:c.toISOString(),created:c.toISOString(),format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"});const l=c.toLocaleDateString("en-us",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}).replace(/\//g,"-").replace(/:/g,"-").replace(", ","-"),d=u().slice(0,8),p=n.PathExt.join(o,`${l}-${d}`);await s.setItem(p,{name:n.PathExt.basename(p),path:p,last_modified:c.toISOString(),created:c.toISOString(),format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"});const y=new URL(window.location.href);return null!==y.searchParams.get("repo")&&(y.searchParams.set("uploadpath",p),window.history.replaceState(null,"",y)),a.copy(r,p).catch((e=>console.warn(`Failed to copy the ${r} file to the new session: ${e}`))),a.copy(i,p).catch((e=>console.warn(`Failed to copy the ${i} file to the new session: ${e}`))),{sessionPath:p}}}}}]);