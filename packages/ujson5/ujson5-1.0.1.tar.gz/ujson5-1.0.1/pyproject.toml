[build-system]
requires = ['hatchling', "hatch-vcs", 'hatch-fancy-pypi-readme>=22.5.0']
build-backend = 'hatchling.build'


[project]
name = "ujson5"
description = "A fast JSON5 encoder/decoder for Python"
authors = [{ name = "Austin Yu", email = "yuxm.austin1023@gmail.com" }]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = []
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Programming Language :: Python',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Intended Audience :: Developers',
  'Intended Audience :: Information Technology',
  'License :: OSI Approved :: MIT License',
  'Operating System :: OS Independent',
  'Topic :: Software Development :: Libraries :: Python Modules',
  'Topic :: Internet',
]
dynamic = ['version', 'readme']

[project.urls]
Homepage = 'https://github.com/austinyu/ujson5'
Documentation = 'https://austinyu.github.io/ujson5/'
Source = 'https://github.com/austinyu/ujson5'
# Changelog = TBD

[project.scripts]
ujson5 = "ujson5.cli:main"


[dependency-groups]
dev = ["requests", "types-requests"]

tests = [
  "pytest",
  "pytest-cov",
  "pytest-benchmark",
  "pytest-codspeed",
  "pytest-test-groups",
]

static_checkers = [
  "pylint",
  "mypy",
  "flake8",
  "flake8-simplify",
  "flake8-mutable",
  "flake8-print",
  "flake8-use-fstring",
  "flake8-builtins",
  "flake8-functions-names",
  "flake8-variables-names",
  "flake8-no-implicit-concat",
]

formatters = ["ruff", "isort"]

docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings-python",
  "pymdown-extensions",
]

all = [
  { include-group = "dev" },
  { include-group = "tests" },
  { include-group = "static_checkers" },
  { include-group = "formatters" },
  { include-group = "docs" },
]

[tool.uv]
default-groups = ['all']

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = 'text/markdown'
# construct the PyPI readme from README.md and CHANGELOG.md
fragments = [
  { path = 'README.md' },
  { text = "\n## Changelog\n\n" },
  { path = 'CHANGELOG.md', pattern = '(.+?)<!-- PyPI README description limit -->' },
]

[tool.hatch.build.targets.sdist]
include = ['/README.md', '/CHANGELOG.md', '/src', '/tests']

[tool.pytest.ini_options]
addopts = """
    --cov .
    --cov-report xml:tests/.coverage/cov.xml
    --cov-report html:tests/.coverage/html
"""

[tool.coverage.report]
exclude_also = ['pytest.skip', 'if sys.version_info < (3, 12): ']

[tool.coverage.run]
omit = ["tests/test_snapshots/generate_snapshots.py", "tests/test_benchmark.py"]
