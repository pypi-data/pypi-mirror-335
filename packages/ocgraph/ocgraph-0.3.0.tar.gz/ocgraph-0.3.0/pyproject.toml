[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ocgraph"
version = "0.3.0"
description = "Tool to visualize object code as control flow graph"
authors = [
  "Mauri Mustonen <kazooiebombchu@gmail.com>",
  "Christoph Weiss <christoph.weiss@gtd-gmbh.de>",
  "Thomas Wucher <thomas.wucher@gtd-gmbh.de>",
]
maintainers = ["Christoph Weiss <christoph.weiss@gtd-gmbh.de>"]
license = "MIT"
readme = "README.md"
repository = "https://gitlab.com/gtd-gmbh/beta-software/ocgraph.git"
homepage = "https://gtd-gmbh.de/cat-a"
documentation = "https://gtd-gmbh.gitlab.io/beta-software/ocgraph"
keywords = [
    "Object Code", "Control Flow Graph", "ECSS Category A", "asm2cfg", "Coverage"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
]

[tool.poetry.urls]
"Forked from asm2cfg" = "https://github.com/Kazhuu/asm2cfg"

[tool.poetry.scripts]
ocgraph = "ocgraph.__main__:main"

[tool.poetry.dependencies]
python = "^3.9"
graphviz = "^0.9"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pylint = "^3.3.1"
pylint-codeclimate-reporter = "^0.0.2"
mypy = "^1.13.0"
mypy-to-codeclimate = "^0.0.3"
ruff = "^0.7.1"

[tool.ruff]
# Set the maximum line length to 99.
line-length = 99

[tool.ruff.lint]
# Select all. this could be problematic, `ruff linter` shows a list of linter rules
select = ["ALL"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Disable specific rules
ignore = ["PLC0414", "D203", "D212"]

[tool.ruff.lint.extend-per-file-ignores]
"test/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "D", # All Docstyle related rules
    "ANN", # Missing type annotation
    "PTH", # Use pathlib
    "E501", # Allow long lines
    "TD", # Allwo FIXME/TODO comments
    "FIX", # Allwo FIXME/TODO comments
]

[tool.ruff.format]
# Like Black:
# - use double quotes for strings
# - indent with spaces, rather than tabs.
# - respect magic trailing commas.
# - automatically detect the appropriate line ending.
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pylint.MASTER]
load-plugins = "pylint_codeclimate_reporter"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --doctest-modules --durations=0 --color=yes --cov-report html --cov-report xml --cov-report term --cov=ocgraph --cov-branch --ignore=test/github/templates"
testpaths = ["test", "ocgraph"]

[tool.mypy]
# Enable hardest mypy configuration
strict = true

[tool.radon]
# Only show maintainability index less than A (<20.0)
mi_min = "B"
# Only show cyclomatic complexity below C (>10.0)
cc_min = "C"

[tool.black]
line-length = 99
