Metadata-Version: 2.1
Name: xdatbus
Version: 0.3.8
Summary: A Python package enhancing VASP AIMD simulation
Home-page: https://xdatbus.readthedocs.io/en/latest/
License: MIT
Keywords: python,aimd,vasp,xdatcar
Author: Jiacheng Wang
Author-email: jiachengwang@umass.edu
Maintainer: Jiacheng Wang
Requires-Python: >=3.10,<3.13
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Provides-Extra: dash
Provides-Extra: meta
Requires-Dist: ase (>=3.23.0,<4.0.0)
Requires-Dist: bpy (==4.3.0) ; (python_version == "3.11.*") and (extra == "meta")
Requires-Dist: dash (==2.18.2) ; extra == "dash"
Requires-Dist: mdanalysis (>=2.7.0,<3.0.0)
Requires-Dist: numpy
Requires-Dist: ovito ; extra == "meta"
Requires-Dist: pandas
Requires-Dist: plotly (==6.0.0) ; extra == "dash"
Requires-Dist: pyarrow
Requires-Dist: pymatgen (>=2025.1.0,<2026.0.0)
Requires-Dist: pyyaml (==6.0.2) ; extra == "meta"
Requires-Dist: rdkit (==2024.9.5) ; extra == "meta"
Requires-Dist: rich
Requires-Dist: statsmodels
Project-URL: Documentation, https://xdatbus.readthedocs.io/en/latest/
Project-URL: Repository, https://github.com/jcwang587/xdatbus/
Description-Content-Type: text/markdown

<!--
<p class="center-content"> 
  <img src="https://raw.githubusercontent.com/jcwang587/xdatbus/main/docs/logo.png" alt=""/>
</p>
-->

# xdatbus ðŸšŒ

[![Build](https://github.com/jcwang587/xdatbus/actions/workflows/build.yml/badge.svg)](https://github.com/jcwang587/xdatbus/actions/workflows/build.yml)
[![Release](https://img.shields.io/github/v/release/jcwang587/xdatbus)](https://github.com/jcwang587/xdatbus/releases)
  [![PyPI Downloads](https://static.pepy.tech/badge/xdatbus)](https://pepy.tech/projects/xdatbus)
[![codecov](https://codecov.io/gh/jcwang587/xdatbus/branch/main/graph/badge.svg?token=V27VIJZDAE)](https://codecov.io/gh/jcwang587/xdatbus)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

Xdatbus is a Python package designed specifically for Vienna Ab-initio Simulation Package (VASP) users conducting
ab-initio molecular dynamics (AIMD) simulations, as well as biased MD simulations. The name of the package is derived 
from the MD trajectory file (XDATCAR) generated by VASP. The documentation for 
the package can be accessed [here](https://xdatbus.readthedocs.io/en/latest/), and a collection of 
Jupyter Notebook [tutorial](https://github.com/jcwang587/xdatbus/tree/main/examples) is also available.

## Installation

Make sure you have a Python interpreter, preferably version 3.10 or higher. Then, you can simply install xdatbus from
PyPI using `pip`:

```bash
pip install xdatbus
```

If you'd like to use the latest unreleased version on the main branch, you can install it directly from GitHub:

```bash
pip install git+https://github.com/jcwang587/xdatbus
```

The package is also available from conda-based installation. It is generally recommended you first create a separate
environment, then you can install via the xdatbus channel on Anaconda cloud:

```bash
conda install --channel xdatbus xdatbus
```

If you plan to use PLUMED to analyze enhanced sampling AIMD results, you can also install the conda version of PLUMED
together:

```bash
conda install -c xdatbus -c conda-forge xdatbus plumed
```

## Get Started

This is a brief example demonstrating how to use the basic function of xdatbus to aggregate multiple xdatcar files into
a single file and unwrap the coordinates into an `.xyz` file.

As is often the case when you have submitted a continuous AIMD job, it is likely that you would have subfolders for each 
submission. `XDATCAR` files can be first gathered in a separate directory by:

```bash
$ mkdir xdc_files && for i in {01..10}; do cp RUN$i/XDATCAR xdc_files/XDATCAR_$i; done
```

Then, try aggregating and unwrapping the coordinate data from the `XDATCAR` files:

```python
import os
from xdatbus import xdc_aggregate, xdc_unwrap

xdc_dir = "./xdc_files"
xdb_dir = os.path.dirname(xdc_dir)
xdb_path = os.path.join(xdb_dir, "XDATBUS")
xyz_path = os.path.join(xdb_dir, "XDATBUS_unwrap.xyz")

xdc_aggregate(xdc_dir=xdc_dir, output_dir=xdb_dir)
xdc_unwrap(xdc_path=xdb_path, output_path=xyz_path)
```

There are also entry points included with the installation for the Command Line Interface (CLI) to perform similar
tasks:

```bash
$ xdc_aggregate --xdc_dir ./xdc_files --output_dir ./
```

```bash
$ xdc_unwrap --xdc_path ./XDATBUS --output_path ./XDATBUS_unwrap.xyz
```

## Visualization

[![Powered by MolecularNodes](https://img.shields.io/badge/powered%20by-MolecularNodes-blue.svg)](https://github.com/BradyAJohnston/MolecularNodes)
[![Powered by bpy](https://img.shields.io/badge/powered%20by-bpy-blue.svg)](https://docs.blender.org/api/current/)

This is testing functionality for visualizing the molecular dynamics trajectory with Blender. There is a strict Python version required for compatibility with Blender. Please check the compatible version of Python for `bpy` to ensure there are no conflicts in your environment.

```bash
pip install molecularnodes bpy
```

## Major Changelog
`0.3.8` Added functions for locating minima and running NEB in a 2D FES.

`0.2.5` Enabled a command-line interface that runs through the `rich` package.

`0.2.0` Added a function to generate [extxyz](https://github.com/libAtoms/extxyz) data for training machine learning interatomic potentials.

