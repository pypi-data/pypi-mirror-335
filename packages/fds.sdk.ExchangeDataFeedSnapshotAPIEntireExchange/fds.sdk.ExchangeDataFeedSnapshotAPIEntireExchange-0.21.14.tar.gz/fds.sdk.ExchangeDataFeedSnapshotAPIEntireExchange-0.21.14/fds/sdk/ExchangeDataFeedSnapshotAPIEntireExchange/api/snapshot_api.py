"""
    Exchange Snapshot API

    A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange. Clients that need access to the DFSnapshot product for a custom watchlist snapped at a client specified interval should use this API  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: teammustang@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.ExchangeDataFeedSnapshotAPIEntireExchange.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.ExchangeDataFeedSnapshotAPIEntireExchange.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.ExchangeDataFeedSnapshotAPIEntireExchange.exceptions import ApiException
from fds.sdk.ExchangeDataFeedSnapshotAPIEntireExchange.model.error_messages import ErrorMessages
from fds.sdk.ExchangeDataFeedSnapshotAPIEntireExchange.model.inline_response200 import InlineResponse200





class SnapshotApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_v1_list_files_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse200,), 400: (ErrorMessages,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/v1/list-files',
                'operation_id': 'get_v1_list_files',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product',
                    'start_date',
                    'end_date',
                    'start_time',
                    'end_time',
                    'access',
                ],
                'required': [
                    'product',
                    'start_date',
                    'end_date',
                    'start_time',
                    'end_time',
                ],
                'nullable': [
                ],
                'enum': [
                    'access',
                ],
                'validation': [
                    'product',
                ]
            },
            root_map={
                'validations': {
                    ('product',): {

                        'inclusive_minimum': 9001,
                    },
                },
                'allowed_values': {
                    ('access',): {

                        "STATIC": "static",
                        "DL": "DL",
                        "RT": "RT"
                    },
                },
                'openapi_types': {
                    'product':
                        (int,),
                    'start_date':
                        (date,),
                    'end_date':
                        (date,),
                    'start_time':
                        (str,),
                    'end_time':
                        (str,),
                    'access':
                        (str,),
                },
                'attribute_map': {
                    'product': 'product',
                    'start_date': 'start_date',
                    'end_date': 'end_date',
                    'start_time': 'start_time',
                    'end_time': 'end_time',
                    'access': 'access',
                },
                'location_map': {
                    'product': 'query',
                    'start_date': 'query',
                    'end_date': 'query',
                    'start_time': 'query',
                    'end_time': 'query',
                    'access': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_v1_list_files(
        self,
        product,
        start_date,
        end_date,
        start_time,
        end_time,
        **kwargs
    ) -> InlineResponse200:
        """Snapshot  # noqa: E501

        A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            product (int): any product subscribed by client. Minimum value for prod code=9001
            start_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days)
            end_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days, greater than or equal to start date)
            start_time (str): HHMM (24 hour time EST)
            end_time (str): HHMM (24 hour time EST)

        Keyword Args:
            access (str): Option to select from static, DL or RT data. [optional] if omitted the server will use the default value of "DL"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse200
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['product'] = \
            product
        kwargs['start_date'] = \
            start_date
        kwargs['end_date'] = \
            end_date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        return self.get_v1_list_files_endpoint.call_with_http_info(**kwargs)

    def get_v1_list_files_with_http_info(
        self,
        product,
        start_date,
        end_date,
        start_time,
        end_time,
        **kwargs
    ) -> typing.Tuple[InlineResponse200, int, typing.MutableMapping]:
        """Snapshot  # noqa: E501

        A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            product (int): any product subscribed by client. Minimum value for prod code=9001
            start_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days)
            end_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days, greater than or equal to start date)
            start_time (str): HHMM (24 hour time EST)
            end_time (str): HHMM (24 hour time EST)

        Keyword Args:
            access (str): Option to select from static, DL or RT data. [optional] if omitted the server will use the default value of "DL"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse200
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['product'] = \
            product
        kwargs['start_date'] = \
            start_date
        kwargs['end_date'] = \
            end_date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        return self.get_v1_list_files_endpoint.call_with_http_info(**kwargs)

    def get_v1_list_files_async(
        self,
        product,
        start_date,
        end_date,
        start_time,
        end_time,
        **kwargs
    ) -> "ApplyResult[InlineResponse200]":
        """Snapshot  # noqa: E501

        A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            product (int): any product subscribed by client. Minimum value for prod code=9001
            start_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days)
            end_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days, greater than or equal to start date)
            start_time (str): HHMM (24 hour time EST)
            end_time (str): HHMM (24 hour time EST)

        Keyword Args:
            access (str): Option to select from static, DL or RT data. [optional] if omitted the server will use the default value of "DL"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse200]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['product'] = \
            product
        kwargs['start_date'] = \
            start_date
        kwargs['end_date'] = \
            end_date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        return self.get_v1_list_files_endpoint.call_with_http_info(**kwargs)

    def get_v1_list_files_with_http_info_async(
        self,
        product,
        start_date,
        end_date,
        start_time,
        end_time,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse200, int, typing.MutableMapping]]":
        """Snapshot  # noqa: E501

        A service that provides access to Real Time or Delayed data snapped at hourly intervals for an entire Exchange  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            product (int): any product subscribed by client. Minimum value for prod code=9001
            start_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days)
            end_date (date): YYYYMMDD (Choose between 1 and 4 previous trading days, greater than or equal to start date)
            start_time (str): HHMM (24 hour time EST)
            end_time (str): HHMM (24 hour time EST)

        Keyword Args:
            access (str): Option to select from static, DL or RT data. [optional] if omitted the server will use the default value of "DL"
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse200, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['product'] = \
            product
        kwargs['start_date'] = \
            start_date
        kwargs['end_date'] = \
            end_date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        return self.get_v1_list_files_endpoint.call_with_http_info(**kwargs)


