Metadata-Version: 2.2
Name: django-dirtyfields
Version: 1.9.7
Summary: Tracking dirty fields on a Django model instance.
Author: Romain Garrigues
Maintainer: Lincoln Puzey
License: Copyright (c) Praekelt Foundation and individual contributors.
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        
            1.  Redistributions of source code must retain the above copyright notice, 
                this list of conditions and the following disclaimer.
        
            2.  Redistributions in binary form must reproduce the above copyright
                notice, this list of conditions and the following disclaimer in the
                documentation and/or other materials provided with the distribution.
            
            3.  Neither the name of the Praekelt Foundation nor the names of its
                contributors may be used to endorse or promote products derived from 
                this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Project-URL: Homepage, https://github.com/romgar/django-dirtyfields
Project-URL: Repository, https://github.com/romgar/django-dirtyfields.git
Project-URL: Changelog, https://github.com/romgar/django-dirtyfields/blob/develop/ChangeLog.rst
Project-URL: Documentation, https://django-dirtyfields.readthedocs.io
Keywords: django,dirtyfields,track,model,changes
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.0
Classifier: Framework :: Django :: 3.1
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.0
Classifier: Framework :: Django :: 4.1
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.1
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: Django>=2.2

===================
Django Dirty Fields
===================

.. image:: https://badges.gitter.im/Join%20Chat.svg
   :alt: Join the chat at https://gitter.im/romgar/django-dirtyfields
   :target: https://gitter.im/romgar/django-dirtyfields?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
.. image:: https://img.shields.io/pypi/v/django-dirtyfields.svg
   :alt: Published PyPI version
   :target: https://pypi.org/project/django-dirtyfields/
.. image:: https://github.com/romgar/django-dirtyfields/actions/workflows/tests.yml/badge.svg
   :alt: Github Actions Test status
   :target: https://github.com/romgar/django-dirtyfields/actions/workflows/tests.yml
.. image:: https://coveralls.io/repos/github/romgar/django-dirtyfields/badge.svg?branch=develop
   :alt: Coveralls code coverage status
   :target: https://coveralls.io/github/romgar/django-dirtyfields?branch=develop
.. image:: https://readthedocs.org/projects/django-dirtyfields/badge/?version=latest
   :alt: Read the Docs documentation status
   :target: https://django-dirtyfields.readthedocs.io/en/latest/

Tracking dirty fields on a Django model instance.
Dirty means that field in-memory and database values are different.

This package is compatible and tested with the following Python & Django versions:


+------------------------+-----------------------------------+
| Django                 | Python                            |
+========================+===================================+
| 2.2, 3.0, 3.1          | 3.9                               |
+------------------------+-----------------------------------+
| 3.2, 4.0               | 3.9, 3.10                         |
+------------------------+-----------------------------------+
| 4.1                    | 3.9, 3.10, 3.11                   |
+------------------------+-----------------------------------+
| 4.2                    | 3.9, 3.10, 3.11, 3.12             |
+------------------------+-----------------------------------+
| 5.0                    | 3.10, 3.11, 3.12                  |
+------------------------+-----------------------------------+
| 5.1                    | 3.10, 3.11, 3.12, 3.13            |
+------------------------+-----------------------------------+



Install
=======

.. code-block:: bash

    $ pip install django-dirtyfields


Usage
=====

To use ``django-dirtyfields``, you need to:

- Inherit from ``DirtyFieldsMixin`` in the Django model you want to track.

.. code-block:: python

    from django.db import models
    from dirtyfields import DirtyFieldsMixin

    class ExampleModel(DirtyFieldsMixin, models.Model):
        """A simple example model to test dirty fields mixin with"""
        boolean = models.BooleanField(default=True)
        characters = models.CharField(blank=True, max_length=80)

- Use one of these 2 functions on a model instance to know if this instance is dirty, and get the dirty fields:

  * ``is_dirty()``
  * ``get_dirty_fields()``


Example
-------

.. code-block:: python

    >>> model = ExampleModel.objects.create(boolean=True,characters="first value")
    >>> model.is_dirty()
    False
    >>> model.get_dirty_fields()
    {}

    >>> model.boolean = False
    >>> model.characters = "second value"

    >>> model.is_dirty()
    True
    >>> model.get_dirty_fields()
    {'boolean': True, "characters": "first_value"}


Consult the `full documentation <https://django-dirtyfields.readthedocs.io/>`_ for more information.
