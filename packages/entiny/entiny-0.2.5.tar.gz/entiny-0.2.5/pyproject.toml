[project]
name = "entiny"
version = "0.2.5"
description = ""
authors = [{ name = "Alex Hallam", email = "alexhallam6.28@gmail.com" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "polars (>=1.25.2,<2.0.0)",
    "numpy (>=2.2.4,<3.0.0)",
    "click (>=8.1.8,<9.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
]

[project.scripts]
entiny = "entiny.cli:cli"

[tool.poetry]
packages = [{ include = "entiny", from = "src" }]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.1.0"
ruff = "^0.3.0"
mypy = "^1.8.0"
types-tqdm = "^4.67.0.20250319"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 130

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = ["PLR0912", "PLR0915"]

[tool.ruff.lint.isort]
known-first-party = ["entiny"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
