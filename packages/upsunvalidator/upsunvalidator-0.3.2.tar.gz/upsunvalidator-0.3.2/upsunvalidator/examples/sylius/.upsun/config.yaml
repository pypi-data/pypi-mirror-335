applications:
    app:
        type: php:8.1
        build:
            flavor: composer
        variables:
            env:
                # Tell Symfony to always install in production-mode.
                APP_ENV: 'prod'
                APP_DEBUG: 0
                N_PREFIX: /app/.global
        hooks:
            build: |
                set -e
                # Install the node version specified in the .nvmrc file
                n auto
                # Reset the location hash to recognize the newly installed version
                hash -r
                yarn install
                GULP_ENV=prod yarn build
            deploy: |
                set -e
                rm -rf var/cache/*
                mkdir -p public/media/image
                bin/console sylius:install -n
                bin/console sylius:fixtures:load -n
                bin/console assets:install --symlink --relative public
                bin/console cache:clear
        # The relationships of the application with services or other applications.
        # The left-hand side is the name of the relationship as it will be exposed
        # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
        # side is in the form `<service name>:<endpoint name>`.
        relationships:
            database: "db:mysql"
        dependencies:
            nodejs:
                n: "*"
                yarn: "*"
                gulp-cli: "*"
            php:
                composer/composer: '^2'
        # The mounts that will be performed when the package is deployed.
        mounts:
            "/var/cache":
                source: storage
                source_path: "files/cache"
            "/var/log":
                source: storage
                source_path: "files/log"
            "/var/sessions":
                source: storage
                source_path: "files/sessions"
            "/public/uploads": 
                source: storage
                source_path: "files/uploads"
            "/public/media": 
                source: storage
                source_path: "files/media"

        # The configuration of app when it is exposed to the web.
        web:
            locations:
                "/":
                    # The public directory of the app, relative to its root.
                    root: "public"
                    # The front-controller script to send non-static requests to.
                    passthru: "/index.php"
                    allow: true
                    expires: -1
                    scripts: true
                '/assets/shop':
                    expires: 2w
                    passthru: true
                    allow: false
                    rules:
                        # Only allow static files from the assets directories.
                        ? '\.(css|js|jpe?g|png|gif|svgz?|ico|bmp|tiff?|wbmp|ico|jng|bmp|html|pdf|otf|woff2|woff|eot|ttf|jar|swf|ogx|avi|wmv|asf|asx|mng|flv|webm|mov|ogv|mpe|mpe?g|mp4|3gpp|weba|ra|m4a|mp3|mp2|mpe?ga|midi?)$'
                        :   allow: true
                '/media/image':
                    expires: 2w
                    passthru: true
                    allow: false
                    rules:
                        # Only allow static files from the assets directories.
                        '\.(jpe?g|png|gif|svgz?)$':
                            allow: true
                '/media/cache/resolve':
                    passthru: "/index.php"
                    expires: -1
                    allow: true
                    scripts: true
                '/media/cache':
                    expires: 2w
                    passthru: true
                    allow: false
                    rules:
                        # Only allow static files from the assets directories.
                        '\.(jpe?g|png|gif|svgz?)$':
                            allow: true
        source:
            root: /
services:
    db:
        type: mysql:10.3
routes:
    "https://{default}/":
        type: upstream
        upstream: "app:http"
    "https://www.{default}/":
        type: redirect
        to: "https://{default}/"
