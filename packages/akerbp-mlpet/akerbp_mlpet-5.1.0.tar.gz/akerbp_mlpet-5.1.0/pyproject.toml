[tool.poetry]
name = "akerbp-mlpet"
version = "5.1.0"
description = "Package to prepare well log data for ML projects."
authors = [
  "Yann Van Crombrugge <yann.van.crombrugge@akerbp.com>",
  "Saghar Asadi <saghar.asadi@akerbp.com>",
  "Flavia Dias Casagrande <flavia.dias.casagrande@akerbp.com>",
]
maintainers = [
  "Yann Van Crombrugge <yann.van.crombrugge@akerbp.com>",
  "Peder Aursand <peder.aursand@akerbp.com>",
]
repository = "https://github.com/AkerBP/expres-ml-mlpet"
readme = "README.md"
packages = [
  {include = "akerbp", from = "src"},
]
license = "Apache-2.0"

[tool.poetry.urls]
"Tracker" = "https://github.com/AkerBP/expres-ml-mlpet/issues"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pyyaml = ">=5.4.1"
pandas = "<3"
"importlib-metadata" = ">=4.12"
scipy = "*"
scikit-learn = "*"
plotly = "*"
tqdm = "*"
lasio = "*"
joblib = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "*"
types-pyyaml = "*"
types-requests = "*"
types-toml = "*"
types-python-dateutil = "*"
ruff = "*"

[tool.poetry.group.pre-commit]
optional = true

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "*"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "*"
myst-parser = "*"
furo = "*"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "*"
coverage = "*"

[tool.poetry.group.version]
optional = true

[tool.poetry.group.version.dependencies]
semver = "*"
toml = "*"
requests = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v -rA"
testpaths = [
  "tests",
]
log_cli = "true"

[tool.mypy]
files=["src/**/*.py", "tests/**/*.py"]
incremental = "True"
ignore_missing_imports = "True"
show_column_numbers = "True"
disallow_untyped_calls = "True"
warn_return_any = "True"
strict_optional = "True"
warn_no_return = "True"
warn_redundant_casts = "True"
warn_unused_ignores = "True"
disallow_any_generics = "True"
explicit_package_bases = "True"

[tool.ruff]
src = ["src",]
exclude = [
    "docs",
    ".venv",
    "__pycache__",
]

[tool.ruff.lint]
ignore = [
    "E501", # Handled by formatter
    "N818",
    "G004", # Requires a bigger refactor of all of the logging
    "PD901", # To big of a refactor job
]
select = [
    "A",
    "B",
    "C",
    "E",
    "F",
    "W",
    "I",
    "N",
    "G",
    "LOG",
    "PD",
    "PTH",
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
