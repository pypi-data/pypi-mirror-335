# testing
import os
from python.client import ApiClient

if __name__ == "__main__":
    client = ApiClient(
        base_url=os.getenv("CRYPTICORN_API_URL", "https://api.crypticorn.dev"),
        api_key="4cf3c24d455077031e4b645d32853be065b2c01af6b885ff1139e7dc958f52d3",
    )
    # print("Latest Predictions")
    # print("->")
    # print(client.get_prediction("BTCUSDT", 1, 1))
    # print("")
    # print("Economics News")
    # print("->")
    # print(client.get_economics_news(5))
    # print("")
    # print("Bitcoin Historical Data")
    # print("->")
    # # try 250000 there is no timeout
    # print(client.get_bc_historical("BTCUSDT", "15m", 25))
    # print("")
    # print("Fear and Greed Index Historical Data")
    # print("->")
    # print(client.get_fgi_historical(5))
    # print("")
    # print("Get UDF History")
    # print("->")
    # print(client.get_udf_history("BTCUSDT", 25))
    # print("")
    # print("Post Trend Data")
    # print("->")
    # print(
    #     client.post_trend(
    #         TrendData(
    #             timestamps=[4, 8, 12, 16, 24, 32, 48, 64],
    #             positive_prob=[0.1, 0.9, 0.2, 0.8, 0.3, 0.7, 0.4, 0.6],
    #             symbol="BTCUSDT",
    #             version="1",
    #         )
    #     )
    # )
    # # query trend data
    # print("Get Trend Data")
    # print("->")
    # print(
    #     client.get_trends(
    #         TrendQuery(
    #             symbol="BTCUSDT",
    #             limit=10,
    #             offset=0,
    #             sort="timestamp",
    #             dir="desc",
    #             from_ts=1613225600,
    #             to_ts=1812793600,
    #         )
    #     )
    # )
    # print("Kline Service")
    # print("->")
    # print("Kline Symbols for Futures")
    # print("->")
    # print(client.get_symbols("futures"))
    # print("Kline Symbols for Spot")
    # print("->")
    # print(client.get_symbols("spot"))
    # print("Futures Klines")
    # print("->")
    # print(client.get_klines("futures", "BTCUSDT", "15m", 100, sort="desc"))
    # print("Spot Klines")
    # print("->")
    # print(client.get_klines("spot", "BTCUSDT", "1m", 100))
    # print("")
    # print("Funding Rate")
    # print("->")
    # print(client.get_funding_rate(symbol="BTCUSDT"))
    # print("Enabled Bots")
    # print("->")
    # bots_result = client.get_enabled_bots()
    # print(bots_result["bots"])
    # print("")
    # print("API Keys")
    # print(bots_result["api_keys"])
    # print("Get Keywords for Google Trends")
    # print("->")
    # print(client.get_google_trend_keywords_available())
    # print("Google Trend Keyword")
    # print("->")
    # print(client.get_google_trend_keyword("Bitcoin", limit=1000))
    # print("Coins")
    # print("->")
    # next_offset, coins = client.get_hist_marketcap_coins(limit=100)
    # print(f"Next Offset for Pagination: {next_offset}")
    # print(coins)
    # print("Get Historical Marketcap Rankings")
    # print("->")
    rankings = client.get_historical_marketcap_rankings(1741219200, 1741519658, interval='1d', market="futures", exchange_name="binance")
    print(rankings)
    # print("Get Historical Marketcap Values")
    # print("->")
    # print(client.get_historical_marketcap_values_for_rankings(1729422686, 1729595486))
    # print("Get Marketcap Indicator Values")
    # print("KER->")
    # print(client.get_marketcap_indicator_values("BTC", "futures", 15, "ker", 1729422686))
    # print("SMA->")
    # print(client.get_marketcap_indicator_values("BTC", "futures", 15, "sma", 1729422686))
    # print("Exchanges for BTC")
    # print("->")
    # print(client.get_exchanges_for_mc_symbol("BTC", "futures", '1d', 1729382400, 1730047556, 'ACTIVE', 'USDT'))
    # print("Marketcap Ranking with OHLCV")
    # print("->")
    # print(client.get_marketcap_ranking_with_ohlcv("futures", "1h", 20, 20, 1729454444))
    # print("Stable or Wrapped Tokens")
    # print("->")
    # print(client.get_stable_or_wrapped_tokens('stable'))
    # print(client.get_stable_or_wrapped_tokens('wrapped'))
    # print("Unique Quote Currencies")
    # print("->")
    # print(client.get_unique_quote_currencies("futures"))
    # print("Exchange Mappings")
    # print("->")
    # print(client.get_exchange_mappings_for_specific_exchange("spot", "Binance"))
    # print("Exchange List")
    # print("->")
    # print(client.get_exchanges_list_for_specific_market("spot"))
    # print("Exchange Data")
    # print("->")
    # print(client.get_exchange_all_symbols("Binance"))
    # print("Exchange Spot Symbol")
    # print("->")
    # print(client.get_symbol_info_exchange("Binance", "BTC-USDT", "spot"))
    # print("Exchange Futures Symbol")
    # print("->")
    # print(client.get_symbol_info_exchange("Binance", "BTC-USDT", "futures"))
    # print("Economic Calendar Events")
    # print("->")
    # print(client.get_economic_calendar_events(1729422686, 1729595486))
    # print("CNN Fear and Greed Indicators")
    # print("->")
    # print(client.get_cnn_keywords())
    # print("Fear and Greed Index for all Indicators")
    # print("->")
    # for index, row in client.get_cnn_keywords().iterrows():
    #     print(client.get_cnn_sentiment(row['indicator_name'], limit=10))
    # print("Bitstamp Symbols")
    # print("->")
    # print(client.get_bitstamp_symbols())
    # print("Bitstamp OHLCV")
    # print("->")
    # print(client.get_bitstamp_ohlcv_spot("BTCUSDT", "15m", 100))
