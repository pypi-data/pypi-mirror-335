# coding: utf-8

"""
    Klines Service API

         API for retrieving OHLCV data, funding rates, and symbol information from Binance.          ## WebSocket Support     Connect to `/ws` to receive real-time OHLCV updates.          Example subscription message:     ```json     {         \"action\": \"subscribe\",         \"market\": \"spot\",         \"symbol\": \"BTCUSDT\",         \"timeframe\": \"15m\"     }     ```     

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from crypticorn.klines.client.models.base_response_list_funding_rate_response import BaseResponseListFundingRateResponse

class TestBaseResponseListFundingRateResponse(unittest.TestCase):
    """BaseResponseListFundingRateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseResponseListFundingRateResponse:
        """Test BaseResponseListFundingRateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseResponseListFundingRateResponse`
        """
        model = BaseResponseListFundingRateResponse()
        if include_optional:
            return BaseResponseListFundingRateResponse(
                success = True,
                message = '',
                data = [
                    client.models.funding_rate_response.FundingRateResponse(
                        symbol = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        funding_rate = 1.337, )
                    ],
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return BaseResponseListFundingRateResponse(
        )
        """

    def testBaseResponseListFundingRateResponse(self):
        """Test BaseResponseListFundingRateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
