# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from crypticorn.trade.client.models.action_model import ActionModel

class TestActionModel(unittest.TestCase):
    """ActionModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionModel:
        """Test ActionModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionModel`
        """
        model = ActionModel()
        if include_optional:
            return ActionModel(
                id = '',
                execution_id = '',
                open_order_execution_id = '',
                position_id = '',
                client_order_id = '',
                action_type = 'open_long',
                market_type = 'spot',
                strategy_id = '',
                symbol = '',
                is_limit = True,
                limit_price = 1.337,
                allocation = 1.337,
                take_profit = [
                    client.models.tpsl.TPSL(
                        price_delta = 0.0, 
                        price = 1.337, 
                        allocation = 0.0, 
                        execution_id = '', 
                        client_order_id = '', )
                    ],
                stop_loss = [
                    client.models.tpsl.TPSL(
                        price_delta = 0.0, 
                        price = 1.337, 
                        allocation = 0.0, 
                        execution_id = '', 
                        client_order_id = '', )
                    ],
                expiry_timestamp = 56,
                leverage = 1.0,
                margin_mode = 'isolated',
                timestamp = 56
            )
        else:
            return ActionModel(
                action_type = 'open_long',
                market_type = 'spot',
                strategy_id = '',
                symbol = '',
                leverage = 1.0,
        )
        """

    def testActionModel(self):
        """Test ActionModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
