# coding: utf-8

"""
    Klines Service API

         API for retrieving OHLCV data, funding rates, and symbol information from Binance.          ## WebSocket Support     Connect to `/ws` to receive real-time OHLCV updates.          Example subscription message:     ```json     {         \"action\": \"subscribe\",         \"market\": \"spot\",         \"symbol\": \"BTCUSDT\",         \"timeframe\": \"15m\"     }     ```     

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from crypticorn.klines.client.models.symbol_info_response import SymbolInfoResponse

class TestSymbolInfoResponse(unittest.TestCase):
    """SymbolInfoResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SymbolInfoResponse:
        """Test SymbolInfoResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SymbolInfoResponse`
        """
        model = SymbolInfoResponse()
        if include_optional:
            return SymbolInfoResponse(
                name = '',
                exchange_traded = '',
                exchange_listed = '',
                timezone = '',
                minmov = 56,
                minmov2 = 56,
                pointvalue = 56,
                session = '',
                has_intraday = True,
                has_no_volume = True,
                description = '',
                type = '',
                supported_resolutions = [
                    ''
                    ],
                pricescale = 56,
                ticker = ''
            )
        else:
            return SymbolInfoResponse(
                name = '',
                exchange_traded = '',
                exchange_listed = '',
                timezone = '',
                minmov = 56,
                minmov2 = 56,
                pointvalue = 56,
                session = '',
                has_intraday = True,
                has_no_volume = True,
                description = '',
                type = '',
                supported_resolutions = [
                    ''
                    ],
                pricescale = 56,
                ticker = '',
        )
        """

    def testSymbolInfoResponse(self):
        """Test SymbolInfoResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
