# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from agentifyme.worker.pb.api.v1 import common_pb2 as api_dot_v1_dot_common__pb2
from agentifyme.worker.pb.api.v1 import gateway_pb2 as api_dot_v1_dot_gateway__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in api/v1/gateway_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GatewayServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClientStream = channel.stream_stream(
                '/api.v1.GatewayService/ClientStream',
                request_serializer=api_dot_v1_dot_common__pb2.InboundClientMessage.SerializeToString,
                response_deserializer=api_dot_v1_dot_common__pb2.OutboundClientMessage.FromString,
                _registered_method=True)
        self.WorkerStream = channel.stream_stream(
                '/api.v1.GatewayService/WorkerStream',
                request_serializer=api_dot_v1_dot_gateway__pb2.InboundWorkerMessage.SerializeToString,
                response_deserializer=api_dot_v1_dot_gateway__pb2.OutboundWorkerMessage.FromString,
                _registered_method=True)
        self.SyncWorkflows = channel.unary_unary(
                '/api.v1.GatewayService/SyncWorkflows',
                request_serializer=api_dot_v1_dot_gateway__pb2.SyncWorkflowsRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_gateway__pb2.SyncWorkflowsResponse.FromString,
                _registered_method=True)
        self.WorkerHeartbeat = channel.unary_unary(
                '/api.v1.GatewayService/WorkerHeartbeat',
                request_serializer=api_dot_v1_dot_gateway__pb2.WorkerHeartbeatRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_gateway__pb2.WorkerHeartbeatResponse.FromString,
                _registered_method=True)


class GatewayServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ClientStream(self, request_iterator, context):
        """Client                    Gateway Server
        |                            |
        |   InboundClientMessage    →|  (Client → Server)
        |                            |
        |   OutboundClientMessage   ←|  (Server → Client)
        |
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WorkerStream(self, request_iterator, context):
        """Worker                    Gateway Server
        |                            |
        |   InboundWorkerMessage    →|  (Worker → Server)
        |                            |
        |   OutboundWorkerMessage   ←|  (Server → Worker)
        |
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncWorkflows(self, request, context):
        """Unary RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WorkerHeartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClientStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ClientStream,
                    request_deserializer=api_dot_v1_dot_common__pb2.InboundClientMessage.FromString,
                    response_serializer=api_dot_v1_dot_common__pb2.OutboundClientMessage.SerializeToString,
            ),
            'WorkerStream': grpc.stream_stream_rpc_method_handler(
                    servicer.WorkerStream,
                    request_deserializer=api_dot_v1_dot_gateway__pb2.InboundWorkerMessage.FromString,
                    response_serializer=api_dot_v1_dot_gateway__pb2.OutboundWorkerMessage.SerializeToString,
            ),
            'SyncWorkflows': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncWorkflows,
                    request_deserializer=api_dot_v1_dot_gateway__pb2.SyncWorkflowsRequest.FromString,
                    response_serializer=api_dot_v1_dot_gateway__pb2.SyncWorkflowsResponse.SerializeToString,
            ),
            'WorkerHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.WorkerHeartbeat,
                    request_deserializer=api_dot_v1_dot_gateway__pb2.WorkerHeartbeatRequest.FromString,
                    response_serializer=api_dot_v1_dot_gateway__pb2.WorkerHeartbeatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1.GatewayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.v1.GatewayService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GatewayService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ClientStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/api.v1.GatewayService/ClientStream',
            api_dot_v1_dot_common__pb2.InboundClientMessage.SerializeToString,
            api_dot_v1_dot_common__pb2.OutboundClientMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WorkerStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/api.v1.GatewayService/WorkerStream',
            api_dot_v1_dot_gateway__pb2.InboundWorkerMessage.SerializeToString,
            api_dot_v1_dot_gateway__pb2.OutboundWorkerMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SyncWorkflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.GatewayService/SyncWorkflows',
            api_dot_v1_dot_gateway__pb2.SyncWorkflowsRequest.SerializeToString,
            api_dot_v1_dot_gateway__pb2.SyncWorkflowsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WorkerHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.GatewayService/WorkerHeartbeat',
            api_dot_v1_dot_gateway__pb2.WorkerHeartbeatRequest.SerializeToString,
            api_dot_v1_dot_gateway__pb2.WorkerHeartbeatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class WorkerHealthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LivenessCheck = channel.unary_unary(
                '/api.v1.WorkerHealthService/LivenessCheck',
                request_serializer=api_dot_v1_dot_common__pb2.LivenessCheckRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_common__pb2.LivenessCheckResponse.FromString,
                _registered_method=True)
        self.ReadinessCheck = channel.unary_unary(
                '/api.v1.WorkerHealthService/ReadinessCheck',
                request_serializer=api_dot_v1_dot_common__pb2.ReadinessCheckRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_common__pb2.ReadinessCheckResponse.FromString,
                _registered_method=True)


class WorkerHealthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LivenessCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadinessCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerHealthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LivenessCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.LivenessCheck,
                    request_deserializer=api_dot_v1_dot_common__pb2.LivenessCheckRequest.FromString,
                    response_serializer=api_dot_v1_dot_common__pb2.LivenessCheckResponse.SerializeToString,
            ),
            'ReadinessCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadinessCheck,
                    request_deserializer=api_dot_v1_dot_common__pb2.ReadinessCheckRequest.FromString,
                    response_serializer=api_dot_v1_dot_common__pb2.ReadinessCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1.WorkerHealthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.v1.WorkerHealthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkerHealthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LivenessCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.WorkerHealthService/LivenessCheck',
            api_dot_v1_dot_common__pb2.LivenessCheckRequest.SerializeToString,
            api_dot_v1_dot_common__pb2.LivenessCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadinessCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.WorkerHealthService/ReadinessCheck',
            api_dot_v1_dot_common__pb2.ReadinessCheckRequest.SerializeToString,
            api_dot_v1_dot_common__pb2.ReadinessCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
