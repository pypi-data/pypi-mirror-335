[project]
name = "occtre"
version = "0.10.0"
authors = [
  { name="Christoph Weiss", email="christoph.weiss@gtd-gmbh.de" },
  { name="Thomas Wucher", email="thomas.wucher@gtd-gmbh.de" },
  { name="Fabian Schriever", email="fabian.schriever@gtd-gmbh.de" },
]
description = "A tool for producing, collecting and analyzing test coverage on assembler level"
readme = "README.md"
requires-python = ">=3.10"

[project.urls]
"Homepage" = "https://gtd-gmbh.de/"
#"Bug Tracker" = "gtd@gtd-gmbh.de"

# Poetry section
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "occtre"
version = "0.1.0"
description = "A tool for producing, collecting and analyzing test coverage on assembler level"
authors = ["Christoph Weiss <christoph.weiss@gtd-gmbh.de>"]
maintainers = ["Christoph Weiss <christoph.weiss@gtd-gmbh.de>"]
repository = "https://gitlab.com/gtd-gmbh/beta-software/occtre.git"
keywords = ["Target", "Coverage", "Coverage Tracer", "Category A"]
license = "Mozilla Public License 2.0"
readme = "README.md"

[tool.poetry.scripts]
occtre = "occtre.__main__:main"

[tool.poetry.dependencies]
python = "^3.10,<4.0"
tabulate = "^0.9.0"
tomlkit = "^0.12.3"
dataclass_binder = "^0.3.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pre-commit = "^3.8.0"
mocker = "^1.1.1"
pytest-mock = "^3.14.0"
mock = "^5.1.0"
testfixtures = "^8.3.0"

# Ruff section
[tool.ruff]
# Set the maximum line length to 99.
line-length = 99

[tool.ruff.lint]
# Select all. this could be problematic, `ruff linter` shows a list of linter rules
select = ["ALL"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Disable specific rules
ignore = ["PLC0414", "D203", "D212"]

[tool.ruff.lint.extend-per-file-ignores]
"test/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "D", # All Docstyle related rules
    "ANN", # Missing type annotation
    "PTH", # Use pathlib
    "E501", # Allow long lines
    "TD", # Allwo FIXME/TODO comments
    "FIX", # Allwo FIXME/TODO comments
]

[tool.ruff.format]
# Like Black:
# - use double quotes for strings
# - indent with spaces, rather than tabs.
# - respect magic trailing commas.
# - automatically detect the appropriate line ending.
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pylint.MASTER]
load-plugins = "pylint_codeclimate_reporter"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --doctest-modules --durations=0 --color=yes --cov-report html --cov-report xml --cov-report term --cov=occtre --cov-branch"
testpaths = ["test"]
