# SPDX-License-Identifier: GTDGmbH
# Copyright 2024 by GTD GmbH.

# This is the configuration file for OCCTRE.
# In ./occtre/configuration/templates you can find several pre-made
# configurations, which you may use as replacement or inspiration.
# The configuration file are written in TOML and parsed into the
# internal configuration class.

# The configuration supports the following substitutions in the `opt` lists for
# convenience:
# 1. `{port}` : Port of the socket is running on, e.g. for GDB.
# 2. `{test_binary}`: path to the executable which is specified on OCCTRE call with flag `-b`

# The brackets are for better visibility in the configuration files and the
# substitutions placeholder shall enable an easier maintainability. The intention
# is that you can add options to your calls even if the values only exist
# during execution.

# Optional: specify a distinct port.
# port = "8125"

# Section parser
[parser]
architecture = "sparc_v8"
disassembler = "sparc_v8"

# Section Recording. Specify recording configuration which can also be given by
# command line.
[recorder]
name = "InstructionCoverage"
start-label = "ExecuteTestRun"
stop-label  = "TearDownTestRun"
data-coverage = false
jumps = true

# Section Target. Specify target process call.
[target]
name = "SIS"
cmd = ["/home/developer/sis-simple-instruction-simulator/sis"]
opt = ["-cov", "-gdb", "-dumbio", "-gr740", "-port", "{port}"]

# Section host. Specify host (GDB) process call.
[host]
name = "GDB sparc_v8"
cmd = ["/home/developer/gdb/build/gdb/gdb"]
opt = ["--data-directory=/home/developer/gdb/build/gdb/data-directory/"]

# Section a2line. Specify addr2line process call.
[a2line]
name = "addr2line sparc_v8"
cmd = ["addr2line"]
opt = ["--target=elf32-sparc", "-e", "{test_binary}"]
