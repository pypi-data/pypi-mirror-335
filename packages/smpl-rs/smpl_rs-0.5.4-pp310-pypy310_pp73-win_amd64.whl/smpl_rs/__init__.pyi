from __future__ import annotations
from typing import Any, Optional, List, Type, TypeVar, Tuple, Union
import numpy as np
from numpy.typing import NDArray

T = TypeVar('T')
from smpl_rs.models import SmplX
from smpl_rs.types import SmplType, Gender

class SmplCache:
    def add_model(self, model: SmplX, cache_models: bool) -> None: ...
    def default(self) -> SmplCache: ...
    def get(self, entity_bits: int, scene_ptr_idx: int) -> SmplCache: ...
    def get_model(self, smpl_type: SmplType, gender: Gender) -> Union[SmplX, SmplPP]: ...
    def insert_to_entity(self, entity_bits: int, scene_ptr_idx: int) -> None: ...
    def set_lazy_loading(self, smpl_type: SmplType, gender: Gender, path: str) -> None: ...

