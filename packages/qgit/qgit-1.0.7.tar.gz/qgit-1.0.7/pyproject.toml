[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qgit"
version = "1.0.7"
description = "A powerful Git operations automation tool that provides enhanced Git workflow management, repository visualization, and security scanning capabilities."
readme = "readme.md"
requires-python = ">=3.12.0"
license = "MIT"
authors = [
    {name = "Griffin", email = "griffin@griffin-code.com"}
]
maintainers = [
    {name = "Griffin", email = "griffin@griffin-code.com"}
]
keywords = [
    "git",
    "automation",
    "workflow",
    "visualization",
    "security",
    "repository",
    "development",
    "tools"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "gitpython>=2.20.0",
    "pillow>=10.1.0,<11.0.0",
    "rich>=13.7.0,<14.0.0",
    "tqdm>=4.66.1,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/griffincancode/qgit"
Repository = "https://github.com/griffincancode/qgit.git"
Issues = "https://github.com/griffincancode/qgit/issues"
Documentation = "https://github.com/griffincancode/qgit#readme"

[project.optional-dependencies]
dev = [
    "black>=23.11.0,<24.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.0,<2.0.0",
    "isort>=5.12.0,<6.0.0",
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.23.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
]

[project.scripts]
qgit = "qgits.cli:main"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=qgit --cov-report=term-missing"
asyncio_mode = "auto"

[tool.hatch.build.targets.wheel]
packages = ["qgits", "internal"]

[tool.hatch.build]
include = [
    "qgits/**/*.py",
    "internal/**/*.py",
    "README.md",
    "LICENSE",
]
exclude = [
    "**/*.env",
    "**/*.env.*",
    "**/__pycache__",
    "**/*.pyc",
    "**/*.pyo",
    "**/*.pyd",
    "**/.pytest_cache",
    "**/.coverage",
    "**/.mypy_cache",
    "**/.ruff_cache",
] 