[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pycalista-ista"
version = "0.3.2"
description = "Python library for the ista calista service"
authors = [{name = "Juan Herruzo", email = "juan@herruzo.dev"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests>=2.31.0",
    "pandas>=2.2.0",
    "xlrd>=2.0.1",
    "unidecode>=1.3.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "requests-mock",
    "black",
    "isort",
    "xlwt>=1.3.0",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/herruzo99/pycalista-ista"
Documentation = "https://github.com/herruzo99/pycalista-ista#readme"
Repository = "https://github.com/herruzo99/pycalista-ista.git"
Issues = "https://github.com/herruzo99/pycalista-ista/issues"

[tool.setuptools]
packages = ["pycalista_ista", "pycalista_ista.models"]
package-dir = {"" = "."}

[tool.setuptools.dynamic]
entry-points = {file = ["entry_points.txt"]}

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=pycalista_ista"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["pycalista_ista"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3