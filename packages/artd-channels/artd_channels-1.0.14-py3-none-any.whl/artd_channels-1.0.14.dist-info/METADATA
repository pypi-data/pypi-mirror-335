Metadata-Version: 2.1
Name: artd_channels
Version: 1.0.14
Summary: ArtD Channels.
Home-page: https://www.artd.com.co/
Author: David Mora
Author-email: david@artd.com.co
License: BSD-3-Clause
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django>=4.2.10
Requires-Dist: django-json-widget>=2.0.1
Requires-Dist: artd-customer>=1.0.17
Requires-Dist: artd-location>=1.0.6
Requires-Dist: artd-modules>=1.0.6
Requires-Dist: artd-partner>=1.0.13
Requires-Dist: artd-service>=1.0.8
Requires-Dist: boto3>=1.35.57
Requires-Dist: messagebird>=2.2.0

# ArtD Channels

The ArtD Channels package allows integration with SMS and Whatsapp channels through various providers such as AWS, Messagebird and others.

## How to use?

1. Install The package
```bash
pip install artd-channels
```

2. Add the required on settings.py as follows
```python
INSTALLED_APPS = [
    "artd-customer",
    "artd-location",
    "artd-modules",
    "artd-partner",
    "artd-service",
    'artd_channels',
]

```
3. Run the migrations command
```bash
python manage.py migrate
```

4. Run the base commands
```bash
python manage.py create_countries
python manage.py create_colombian_regions
python manage.py create_colombian_cities
python manage.py create_services
python manage.py create_base_customer_groups
python manage.py create_tax_segments
python manage.py create_vat_data
python manage.py populate_channels
python manage.py populate_providers
```

5. Create a superuser
```bash
python manage.py createsuperuser
```

6. Log in to your Django instance manager
